import{_ as a,o as e,c as o,V as t}from"./chunks/framework.c6d8cbec.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/前端/前端最新面试题及答案整理，汇总版.md","filePath":"interview/backend/前端/前端最新面试题及答案整理，汇总版.md"}'),r={name:"interview/backend/前端/前端最新面试题及答案整理，汇总版.md"},s=t(`<h3 id="_1、多行元素的文本省略号" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#1%E5%A4%9A%E8%A1%8C%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%87%E6%9C%AC%E7%9C%81%E7%95%A5%E5%8F%B7" target="_blank" rel="noreferrer">1、多行元素的文本省略号</a> <a class="header-anchor" href="#_1、多行元素的文本省略号" aria-label="Permalink to &quot;[1、多行元素的文本省略号](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新面试题及答案整理，汇总版.md#1多行元素的文本省略号)&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">overflow : hidden;</span></span>
<span class="line"><span style="color:#f6f6f4;">text-overflow: ellipsis;</span></span>
<span class="line"><span style="color:#f6f6f4;">display: -webkit-box;</span></span>
<span class="line"><span style="color:#f6f6f4;">-webkit-line-clamp: 3;</span></span>
<span class="line"><span style="color:#f6f6f4;">-webkit-box-orient: vertical</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">overflow : hidden;</span></span>
<span class="line"><span style="color:#24292e;">text-overflow: ellipsis;</span></span>
<span class="line"><span style="color:#24292e;">display: -webkit-box;</span></span>
<span class="line"><span style="color:#24292e;">-webkit-line-clamp: 3;</span></span>
<span class="line"><span style="color:#24292e;">-webkit-box-orient: vertical</span></span></code></pre></div><h3 id="_2、es6或ecmascript-2015有哪些新特性" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#2es6%E6%88%96ecmascript-2015%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%89%B9%E6%80%A7" target="_blank" rel="noreferrer">2、ES6或ECMAScript 2015有哪些新特性？</a> <a class="header-anchor" href="#_2、es6或ecmascript-2015有哪些新特性" aria-label="Permalink to &quot;[2、ES6或ECMAScript 2015有哪些新特性？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新面试题及答案整理，汇总版.md#2es6或ecmascript-2015有哪些新特性)&quot;">​</a></h3><p><strong>1、</strong> 箭头函数</p><p>2、类</p><p><strong>3、</strong> 模板字符串</p><p><strong>4、</strong> 加强的对象字面量</p><p><strong>5、</strong> 对象解构</p><p><strong>6、</strong> Promise</p><p><strong>7、</strong> 生成器</p><p>8、模块</p><p><strong>9、</strong> Symbol</p><p><strong>10、</strong> 代理</p><p><strong>11、</strong> Set</p><p><strong>12、</strong> 函数默认参数</p><p><strong>13、</strong> rest 和展开</p><p><strong>14、</strong> 块作用域</p><h3 id="_3、基本数据类型和引用数据类型有什么区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">3、基本数据类型和引用数据类型有什么区别？</a> <a class="header-anchor" href="#_3、基本数据类型和引用数据类型有什么区别" aria-label="Permalink to &quot;[3、基本数据类型和引用数据类型有什么区别？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新面试题及答案整理，汇总版.md#3基本数据类型和引用数据类型有什么区别)&quot;">​</a></h3><p><strong>两者作为函数的参数进行传递时：</strong></p><p><strong>1、</strong> 基本数据类型传入的是数据的副本，原数据的更改不会影响传入后的数据。</p><p><strong>2、</strong> 引用数据类型传入的是数据的引用地址，原数据的更改会影响传入后的数据。</p><p><strong>两者在内存中的存储位置：</strong></p><p><strong>1、</strong> 基本数据类型存储在栈中。</p><p><strong>2、</strong> 引用数据类型在栈中存储了指针，该指针指向的数据实体存储在堆中。</p><h3 id="_4、为什么函数被称为一等公民" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#4%E4%B8%BA%E4%BB%80%E4%B9%88%E5%87%BD%E6%95%B0%E8%A2%AB%E7%A7%B0%E4%B8%BA%E4%B8%80%E7%AD%89%E5%85%AC%E6%B0%91" target="_blank" rel="noreferrer">4、为什么函数被称为一等公民？</a> <a class="header-anchor" href="#_4、为什么函数被称为一等公民" aria-label="Permalink to &quot;[4、为什么函数被称为一等公民？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新面试题及答案整理，汇总版.md#4为什么函数被称为一等公民)&quot;">​</a></h3><p>在JavaScript中，函数不仅拥有一切传统函数的使用方式（声明和调用），而且可以做到像简单值一样赋值<code>（var func = function(){}）</code>、传参<code>(function func(x,callback){callback();})</code>、返回<code>(function(){return function(){}})</code>，这样的函数也称之为<strong>第一级函数（First-class Function）</strong>。不仅如此，JavaScript中的函数还充当了类的构造函数的作用，同时又是一个<code>Function</code>类的实例(instance)。这样的多重身份让JavaScript的函数变得非常重要。</p><h3 id="_5、domcontentloaded-事件和-load-事件的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#5domcontentloaded-%E4%BA%8B%E4%BB%B6%E5%92%8C-load-%E4%BA%8B%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">5、DOMContentLoaded 事件和 Load 事件的区别？</a> <a class="header-anchor" href="#_5、domcontentloaded-事件和-load-事件的区别" aria-label="Permalink to &quot;[5、DOMContentLoaded 事件和 Load 事件的区别？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新面试题及答案整理，汇总版.md#5domcontentloaded-事件和-load-事件的区别)&quot;">​</a></h3><p>当初始的 HTML 文档被完全加载和解析完成之后，DOMContentLoaded 事件被触发，而无需等待样式表、图像和</p><p>子框架的加载完成。</p><p>Load 事件是当所有资源加载完成后触发的。</p><h3 id="_6、介绍一下你对浏览器内核的理解" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#6%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%B8%8B%E4%BD%A0%E5%AF%B9%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8%E7%9A%84%E7%90%86%E8%A7%A3" target="_blank" rel="noreferrer">6、介绍一下你对浏览器内核的理解</a> <a class="header-anchor" href="#_6、介绍一下你对浏览器内核的理解" aria-label="Permalink to &quot;[6、介绍一下你对浏览器内核的理解](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新面试题及答案整理，汇总版.md#6介绍一下你对浏览器内核的理解)&quot;">​</a></h3><p>主要分成两部分：渲染引擎(Layout Engine或Rendering Engine)和JS引擎。</p><p>渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。</p><p>JS引擎：解析和执行javascript来实现网页的动态效果。</p><p>最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。</p><h3 id="_7、-div-ab-和-ab-div-哪个效率高" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#7$$&#39;div+ab&#39;%E5%92%8C$$&#39;ab+div&#39;-%E5%93%AA%E4%B8%AA%E6%95%88%E7%8E%87%E9%AB%98" target="_blank" rel="noreferrer">7、$$(&#39;div+.ab&#39;)和$$(&#39;.ab+div&#39;) 哪个效率高？</a> <a class="header-anchor" href="#_7、-div-ab-和-ab-div-哪个效率高" aria-label="Permalink to &quot;[7、$$(&#39;div+.ab&#39;)和$$(&#39;.ab+div&#39;) 哪个效率高？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新面试题及答案整理，汇总版.md#7$$&#39;div+ab&#39;和$$&#39;ab+div&#39;-哪个效率高)&quot;">​</a></h3><p>$(&#39;div+.ab&#39;)效率高</p><h3 id="_8、html5-有哪些新特性、移除了那些元素" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#8html5-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%89%B9%E6%80%A7%E7%A7%BB%E9%99%A4%E4%BA%86%E9%82%A3%E4%BA%9B%E5%85%83%E7%B4%A0" target="_blank" rel="noreferrer">8、HTML5 有哪些新特性、移除了那些元素？</a> <a class="header-anchor" href="#_8、html5-有哪些新特性、移除了那些元素" aria-label="Permalink to &quot;[8、HTML5 有哪些新特性、移除了那些元素？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新面试题及答案整理，汇总版.md#8html5-有哪些新特性移除了那些元素)&quot;">​</a></h3><p>HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。</p><p><strong>新增的有：</strong></p><p><strong>1、</strong> 绘画 canvas;</p><p><strong>2、</strong> 用于媒介回放的 video 和 audio 元素;</p><p><strong>3、</strong> 本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失;</p><p><strong>4、</strong> sessionStorage 的数据在浏览器关闭后自动删除;</p><p><strong>5、</strong> 语意化更好的内容元素，比如 article、footer、header、nav、section;</p><p><strong>6、</strong> 表单控件，calendar、date、time、email、url、search;</p><p><strong>7、</strong> 新的技术 webworker, websocket;</p><p><strong>8、</strong> 新的文档属性 document.visibilityState</p><p><strong>移除的元素有：</strong></p><p>纯表现的元素：basefont，big，center，font, s，strike，tt，u;</p><p>对可用性产生负面影响的元素：frame，frameset，noframes；</p><h3 id="_9、浏览器工作原理" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#9%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86" target="_blank" rel="noreferrer">9、浏览器工作原理</a> <a class="header-anchor" href="#_9、浏览器工作原理" aria-label="Permalink to &quot;[9、浏览器工作原理](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新面试题及答案整理，汇总版.md#9浏览器工作原理)&quot;">​</a></h3><p><strong>1、</strong> 用户界面</p><p><strong>2、</strong> 网络</p><p><strong>3、</strong> UI后端</p><p><strong>4、</strong> 数据存储</p><p><strong>5、</strong> 浏览器引擎</p><p><strong>6、</strong> 渲染引擎</p><p><strong>7、</strong> js解释器</p><h3 id="_10、html部分常见问题" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#10html%E9%83%A8%E5%88%86%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98" target="_blank" rel="noreferrer">10、HTML部分常见问题</a> <a class="header-anchor" href="#_10、html部分常见问题" aria-label="Permalink to &quot;[10、HTML部分常见问题](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新面试题及答案整理，汇总版.md#10html部分常见问题)&quot;">​</a></h3><p><strong>1、</strong> 怎么让一个不定宽高的 DIV，垂直水平居中？</p><p><strong>使用 CSS 方法：</strong></p><p>父盒子设置：display：table-cell； text-align：center；vertical-align：middle；</p><p>Div 设置： display：inline-block；vertical-align：middl；</p><p><strong>使用 CSS3transform：</strong></p><p>父盒子设置：display：relative</p><p>Div 设置： transform： translate(-50%，-50%)；position： absolute；top： 50%；left： 50%；</p><h3 id="_11、调用函数-可以使用哪些方法" tabindex="-1">11、调用函数，可以使用哪些方法？ <a class="header-anchor" href="#_11、调用函数-可以使用哪些方法" aria-label="Permalink to &quot;11、调用函数，可以使用哪些方法？&quot;">​</a></h3><h3 id="_12、html5为什么只需要写" tabindex="-1">12、HTML5为什么只需要写 <a class="header-anchor" href="#_12、html5为什么只需要写" aria-label="Permalink to &quot;12、HTML5为什么只需要写&quot;">​</a></h3><h3 id="_13、每个html-文件里开头都有个很重要的东西-doctype-知道这是干什么的吗" tabindex="-1">13、每个HTML 文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？ <a class="header-anchor" href="#_13、每个html-文件里开头都有个很重要的东西-doctype-知道这是干什么的吗" aria-label="Permalink to &quot;13、每个HTML 文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？&quot;">​</a></h3><h3 id="_14、bootstrap好处" tabindex="-1">14、bootstrap好处？ <a class="header-anchor" href="#_14、bootstrap好处" aria-label="Permalink to &quot;14、bootstrap好处？&quot;">​</a></h3><h3 id="_15、position几个属性的作用" tabindex="-1">15、position几个属性的作用？ <a class="header-anchor" href="#_15、position几个属性的作用" aria-label="Permalink to &quot;15、position几个属性的作用？&quot;">​</a></h3><h3 id="_16、title-与-h1-的区别" tabindex="-1">16、title 与 h1 的区别？ <a class="header-anchor" href="#_16、title-与-h1-的区别" aria-label="Permalink to &quot;16、title 与 h1 的区别？&quot;">​</a></h3><h3 id="_17、this是什么-在不同场景中分别代表什么" tabindex="-1">17、this是什么 在不同场景中分别代表什么### <a class="header-anchor" href="#_17、this是什么-在不同场景中分别代表什么" aria-label="Permalink to &quot;17、this是什么 在不同场景中分别代表什么###&quot;">​</a></h3><h3 id="_18、网络分层" tabindex="-1">18、网络分层 <a class="header-anchor" href="#_18、网络分层" aria-label="Permalink to &quot;18、网络分层&quot;">​</a></h3><h3 id="_19、渲染页面时常见哪些不良现象-浏览器渲染过程" tabindex="-1">19、渲染页面时常见哪些不良现象？（浏览器渲染过程） <a class="header-anchor" href="#_19、渲染页面时常见哪些不良现象-浏览器渲染过程" aria-label="Permalink to &quot;19、渲染页面时常见哪些不良现象？（浏览器渲染过程）&quot;">​</a></h3><h3 id="_20、v-show与v-if区别" tabindex="-1">20、v-show与v-if区别 <a class="header-anchor" href="#_20、v-show与v-if区别" aria-label="Permalink to &quot;20、v-show与v-if区别&quot;">​</a></h3><h3 id="_21、readystate-0-4" tabindex="-1">21、readystate 0~4 <a class="header-anchor" href="#_21、readystate-0-4" aria-label="Permalink to &quot;21、readystate 0~4&quot;">​</a></h3><h3 id="_22、如何创建一个对象" tabindex="-1">22、如何创建一个对象？ <a class="header-anchor" href="#_22、如何创建一个对象" aria-label="Permalink to &quot;22、如何创建一个对象？&quot;">​</a></h3><h3 id="_23、浏览器是怎么对html5的离线储存资源进行管理和加载的呢" tabindex="-1">23、浏览器是怎么对<code>HTML5</code>的离线储存资源进行管理和加载的呢 <a class="header-anchor" href="#_23、浏览器是怎么对html5的离线储存资源进行管理和加载的呢" aria-label="Permalink to &quot;23、浏览器是怎么对\`HTML5\`的离线储存资源进行管理和加载的呢&quot;">​</a></h3><h3 id="_24、使用箭头函数应注意什么" tabindex="-1">24、使用箭头函数应注意什么？ <a class="header-anchor" href="#_24、使用箭头函数应注意什么" aria-label="Permalink to &quot;24、使用箭头函数应注意什么？&quot;">​</a></h3><h3 id="_25、异步加载的方式有哪些" tabindex="-1">25、异步加载的方式有哪些？ <a class="header-anchor" href="#_25、异步加载的方式有哪些" aria-label="Permalink to &quot;25、异步加载的方式有哪些？&quot;">​</a></h3><h3 id="_26、foreach、for-in、for-of-三者区别" tabindex="-1">26、forEach、for in、for of 三者区别 <a class="header-anchor" href="#_26、foreach、for-in、for-of-三者区别" aria-label="Permalink to &quot;26、forEach、for in、for of 三者区别&quot;">​</a></h3><h3 id="_27、怎么让chrome支持小于12px-的文字" tabindex="-1">27、怎么让Chrome支持小于12px 的文字？ <a class="header-anchor" href="#_27、怎么让chrome支持小于12px-的文字" aria-label="Permalink to &quot;27、怎么让Chrome支持小于12px 的文字？&quot;">​</a></h3><h3 id="_28、dom-是什么" tabindex="-1">28、DOM 是什么？ <a class="header-anchor" href="#_28、dom-是什么" aria-label="Permalink to &quot;28、DOM 是什么？&quot;">​</a></h3><h3 id="_29、-运算符能做什么" tabindex="-1">29、|| 运算符能做什么 <a class="header-anchor" href="#_29、-运算符能做什么" aria-label="Permalink to &quot;29、|| 运算符能做什么&quot;">​</a></h3><h3 id="_30、自执行函数-用于什么场景-好处" tabindex="-1">30、自执行函数?用于什么场景？好处? <a class="header-anchor" href="#_30、自执行函数-用于什么场景-好处" aria-label="Permalink to &quot;30、自执行函数?用于什么场景？好处?&quot;">​</a></h3><h3 id="_31、window-onload-domcontentloaded" tabindex="-1">31、window.onload ==? DOMContentLoaded ? <a class="header-anchor" href="#_31、window-onload-domcontentloaded" aria-label="Permalink to &quot;31、window.onload ==? DOMContentLoaded ?&quot;">​</a></h3>`,88),n=[s];function l(E,i,d,h,p,c){return e(),o("div",null,n)}const b=a(r,[["render",l]]);export{A as __pageData,b as default};
