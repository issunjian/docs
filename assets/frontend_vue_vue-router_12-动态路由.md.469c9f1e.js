import{_ as s,o as a,c as n,V as p}from"./chunks/framework.c6d8cbec.js";const l="/docs/images/vue-router/image-2023-01-16_18-30-52-872-12-动态路由.png",h=JSON.parse('{"title":"动态路由","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/vue/vue-router/12-动态路由.md","filePath":"frontend/vue/vue-router/12-动态路由.md"}'),o={name:"frontend/vue/vue-router/12-动态路由.md"},e=p(`<h1 id="动态路由" tabindex="-1">动态路由 <a class="header-anchor" href="#动态路由" aria-label="Permalink to &quot;动态路由&quot;">​</a></h1><p>我们一般使用动态路由都是后台会返回一个 路由表 )前端通过调接口拿到后处理(后端处理路由)</p><p>主要使用的方法就是 <code>router.addRoute</code></p><h2 id="添加路由" tabindex="-1">添加路由 <a class="header-anchor" href="#添加路由" aria-label="Permalink to &quot;添加路由&quot;">​</a></h2><p>动态路由主要通过两个函数实现。<code>router.addRoute()</code> 和 <code>router.removeRoute()</code>。</p><p>它们只注册一个新的路由，也就是说，如果新增加的路由与当前位置相匹配，就需要你用 <code>router.push()</code> 或 <code>router.replace()</code> 来手动导航，才能显示该新路由</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">router.</span><span style="color:#62E884;">addRoute</span><span style="color:#F6F6F4;">({ path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">/about</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, component</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> About })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">router.</span><span style="color:#6F42C1;">addRoute</span><span style="color:#24292E;">({ path: </span><span style="color:#032F62;">&#39;/about&#39;</span><span style="color:#24292E;">, component: About })</span></span></code></pre></div><h2 id="删除路由" tabindex="-1">删除路由 <a class="header-anchor" href="#删除路由" aria-label="Permalink to &quot;删除路由&quot;">​</a></h2><p>有几个不同的方法来删除现有的路由：</p><ul><li>通过添加一个名称冲突的路由。如果添加与现有途径名称相同的途径，会先删除路由，再添加路由：</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">router.</span><span style="color:#62E884;">addRoute</span><span style="color:#F6F6F4;">({ path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">/about</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">about</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, component</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> About })</span></span>
<span class="line"><span style="color:#7B7F8B;">// 这将会删除之前已经添加的路由，因为他们具有相同的名字且名字必须是唯一的</span></span>
<span class="line"><span style="color:#F6F6F4;">router.</span><span style="color:#62E884;">addRoute</span><span style="color:#F6F6F4;">({ path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">/other</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">about</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, component</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> Other })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">router.</span><span style="color:#6F42C1;">addRoute</span><span style="color:#24292E;">({ path: </span><span style="color:#032F62;">&#39;/about&#39;</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">&#39;about&#39;</span><span style="color:#24292E;">, component: About })</span></span>
<span class="line"><span style="color:#6A737D;">// 这将会删除之前已经添加的路由，因为他们具有相同的名字且名字必须是唯一的</span></span>
<span class="line"><span style="color:#24292E;">router.</span><span style="color:#6F42C1;">addRoute</span><span style="color:#24292E;">({ path: </span><span style="color:#032F62;">&#39;/other&#39;</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">&#39;about&#39;</span><span style="color:#24292E;">, component: Other })</span></span></code></pre></div><ul><li>通过调用 <code>router.addRoute()</code> 返回的回调：</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> removeRoute </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> router.</span><span style="color:#62E884;">addRoute</span><span style="color:#F6F6F4;">(routeRecord)</span></span>
<span class="line"><span style="color:#62E884;">removeRoute</span><span style="color:#F6F6F4;">() </span><span style="color:#7B7F8B;">// 删除路由如果存在的话</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">removeRoute</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> router.</span><span style="color:#6F42C1;">addRoute</span><span style="color:#24292E;">(routeRecord)</span></span>
<span class="line"><span style="color:#6F42C1;">removeRoute</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">// 删除路由如果存在的话</span></span></code></pre></div><p>当路由没有名称时，这很有用。</p><ul><li>通过使用 <code>router.removeRoute()</code> 按名称删除路由：</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">router.</span><span style="color:#62E884;">addRoute</span><span style="color:#F6F6F4;">({ path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">/about</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">about</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, component</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> About })</span></span>
<span class="line"><span style="color:#7B7F8B;">// 删除路由</span></span>
<span class="line"><span style="color:#F6F6F4;">router.</span><span style="color:#62E884;">removeRoute</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">about</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">router.</span><span style="color:#6F42C1;">addRoute</span><span style="color:#24292E;">({ path: </span><span style="color:#032F62;">&#39;/about&#39;</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">&#39;about&#39;</span><span style="color:#24292E;">, component: About })</span></span>
<span class="line"><span style="color:#6A737D;">// 删除路由</span></span>
<span class="line"><span style="color:#24292E;">router.</span><span style="color:#6F42C1;">removeRoute</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;about&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>需要注意的是，如果你想使用这个功能，但又想避免名字的冲突，可以在路由中使用 <code>Symbol</code> 作为名字。</p><p>当路由被删除时，<strong>所有的别名和子路由也会被同时删除</strong></p><h2 id="查看现有路由" tabindex="-1">查看现有路由 <a class="header-anchor" href="#查看现有路由" aria-label="Permalink to &quot;查看现有路由&quot;">​</a></h2><p>Vue Router 提供了两个功能来查看现有的路由：</p><ul><li><a href="https://router.vuejs.org/zh/api/#hasroute" title="router.hasRoute()" target="_blank" rel="noreferrer">router.hasRoute()</a>：检查路由是否存在。</li><li><a href="https://router.vuejs.org/zh/api/#getroutes" title="router.getRoutes()" target="_blank" rel="noreferrer">router.getRoutes()</a>：获取一个包含所有路由记录的数组。</li></ul><h1 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h1><p><a href="./12.a-动态路由案例-登陆后动态添加路由.html">完整代码</a></p><h3 id="前端代码" tabindex="-1">前端代码 <a class="header-anchor" href="#前端代码" aria-label="Permalink to &quot;前端代码&quot;">​</a></h3><p><strong>注意一个事项 vite 在使用动态路由的时候无法使用别名@ 必须使用相对路径</strong></p><img src="`+l+`"><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">initRouter</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">async</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> result </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">await</span><span style="color:#F6F6F4;"> axios.</span><span style="color:#62E884;">get</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">http://localhost:9999/login</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, { params</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> formInline });</span></span>
<span class="line"><span style="color:#F6F6F4;">    result.data.route.</span><span style="color:#62E884;">forEach</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">v</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">any</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        router.</span><span style="color:#62E884;">addRoute</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">            path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> v.path,</span></span>
<span class="line"><span style="color:#F6F6F4;">            name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> v.name,</span></span>
<span class="line"><span style="color:#F6F6F4;">                                    </span><span style="color:#7B7F8B;">//这儿不能使用@</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#62E884;">component</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`../views/</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">v.component</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">        })</span></span>
<span class="line"><span style="color:#F6F6F4;">        router.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">/index</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    })</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(router.</span><span style="color:#62E884;">getRoutes</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">initRouter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> axios.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://localhost:9999/login&#39;</span><span style="color:#24292E;">, { params: formInline });</span></span>
<span class="line"><span style="color:#24292E;">    result.data.route.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">v</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        router.</span><span style="color:#6F42C1;">addRoute</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            path: v.path,</span></span>
<span class="line"><span style="color:#24292E;">            name: v.name,</span></span>
<span class="line"><span style="color:#24292E;">                                    </span><span style="color:#6A737D;">//这儿不能使用@</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">component</span><span style="color:#24292E;">: () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">import</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`../views/\${</span><span style="color:#24292E;">v</span><span style="color:#032F62;">.</span><span style="color:#24292E;">component</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">        router.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/index&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(router.</span><span style="color:#6F42C1;">getRoutes</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="后端代码-nodejs-express" tabindex="-1">后端代码 nodejs express <a class="header-anchor" href="#后端代码-nodejs-express" aria-label="Permalink to &quot;后端代码 nodejs express&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> express, { Express, Request, Response } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">express</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> app</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Express</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">express</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">app.</span><span style="color:#62E884;">get</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">/login</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Request</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Response</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    res.</span><span style="color:#62E884;">header</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Access-Control-Allow-Origin</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">*</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (req.query.user </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">admin</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> req.query.password </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">123456</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        res.</span><span style="color:#62E884;">json</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">            route</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">                {</span></span>
<span class="line"><span style="color:#F6F6F4;">                    path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/demo1</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">                    name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Demo1</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">                    component</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">demo1.vue</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">                },</span></span>
<span class="line"><span style="color:#F6F6F4;">                {</span></span>
<span class="line"><span style="color:#F6F6F4;">                    path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/demo2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">                    name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Demo2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">                    component</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">demo2.vue</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">                },</span></span>
<span class="line"><span style="color:#F6F6F4;">                {</span></span>
<span class="line"><span style="color:#F6F6F4;">                    path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/demo3</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">                    name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Demo3</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">                    component</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">demo3.vue</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">                }</span></span>
<span class="line"><span style="color:#F6F6F4;">            ]</span></span>
<span class="line"><span style="color:#F6F6F4;">        })</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">        res.</span><span style="color:#62E884;">json</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">            code</span><span style="color:#F286C4;">:</span><span style="color:#BF9EEE;">400</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            mesage</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">账号密码错误</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">        })</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">app.</span><span style="color:#62E884;">listen</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">9999</span><span style="color:#F6F6F4;">, () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">http://localhost:9999</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> express, { Express, Request, Response } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;express&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">app</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Express</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">express</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/login&#39;</span><span style="color:#24292E;">, (</span><span style="color:#E36209;">req</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Request</span><span style="color:#24292E;">, </span><span style="color:#E36209;">res</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Response</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    res.</span><span style="color:#6F42C1;">header</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Access-Control-Allow-Origin&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (req.query.user </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;admin&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> req.query.password </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;123456&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        res.</span><span style="color:#6F42C1;">json</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            route: [</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                    path: </span><span style="color:#032F62;">&quot;/demo1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    name: </span><span style="color:#032F62;">&quot;Demo1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    component: </span><span style="color:#032F62;">&#39;demo1.vue&#39;</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                    path: </span><span style="color:#032F62;">&quot;/demo2&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    name: </span><span style="color:#032F62;">&quot;Demo2&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    component: </span><span style="color:#032F62;">&#39;demo2.vue&#39;</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                    path: </span><span style="color:#032F62;">&quot;/demo3&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    name: </span><span style="color:#032F62;">&quot;Demo3&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    component: </span><span style="color:#032F62;">&#39;demo3.vue&#39;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            ]</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">        res.</span><span style="color:#6F42C1;">json</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            code:</span><span style="color:#005CC5;">400</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            mesage:</span><span style="color:#032F62;">&quot;账号密码错误&quot;</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">9999</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://localhost:9999&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><blockquote><p>版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。 本文链接：<a href="https://blog.csdn.net/qq1195566313/article/details/123783173" target="_blank" rel="noreferrer">https://blog.csdn.net/qq1195566313/article/details/123783173</a></p></blockquote>`,30),t=[e];function c(r,F,y,E,i,u){return a(),n("div",null,t)}const C=s(o,[["render",c]]);export{h as __pageData,C as default};
