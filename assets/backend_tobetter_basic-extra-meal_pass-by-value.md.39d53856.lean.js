import{_ as s,o as a,c as n,V as p}from"./chunks/framework.c6d8cbec.js";const l="/docs/assets/pass-by-value-01.7c041565.png",o="/docs/assets/pass-by-value-02.d31ff905.png",e="/docs/assets/pass-by-value-03.bf640a03.png",t="/docs/assets/pass-by-value-04.a7638d5f.png",C=JSON.parse('{"title":"Java到底是值传递还是引用传递？","description":"在 Java 中，参数传递采用值传递方式。对于原始数据类型，直接传递值，而对于对象，实际传递的是引用的值。这使得在方法调用时，无法直接修改原始参数，但可以更改引用指向的对象的属性。掌握 Java 参数传递机制有助于编写更加稳定可靠的程序。","frontmatter":{"title":"Java到底是值传递还是引用传递？","shortTitle":"Java是值传递还是引用传递？","category":["Java核心"],"tag":["Java重要知识点"],"description":"在 Java 中，参数传递采用值传递方式。对于原始数据类型，直接传递值，而对于对象，实际传递的是引用的值。这使得在方法调用时，无法直接修改原始参数，但可以更改引用指向的对象的属性。掌握 Java 参数传递机制有助于编写更加稳定可靠的程序。","author":"沉默王二","head":[["meta",{"name":"keywords","content":"Java, 参数传递, 值传递, 引用传递"}]]},"headers":[],"relativePath":"backend/tobetter/basic-extra-meal/pass-by-value.md","filePath":"backend/tobetter/basic-extra-meal/pass-by-value.md"}'),c={name:"backend/tobetter/basic-extra-meal/pass-by-value.md"},r=p("",44),y=[r];function F(i,E,d,g,m,v){return a(),n("div",null,y)}const f=s(c,[["render",F]]);export{C as __pageData,f as default};
