import{_ as n,o as a,c as l,V as s,C as p}from"./chunks/framework.c6d8cbec.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"home/vite-plugin-shared.md","filePath":"home/vite-plugin-shared.md"}'),o={name:"home/vite-plugin-shared.md"},e=s('<h2 id="代码链接" tabindex="-1">代码链接 <a class="header-anchor" href="#代码链接" aria-label="Permalink to &quot;代码链接&quot;">​</a></h2><p><a href="https://www.npmjs.com/package/vite-plugin-shared" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/v/vite-plugin-shared" alt="npm"></a></p><p><a href="https://github.com/GauharChan/vite-plugin-shared" target="_blank" rel="noreferrer">github</a></p><blockquote><p>演示视频</p><p><a href="https://www.bilibili.com/video/BV14k4y1b76q/?share_source=copy_web&amp;vd_source=a157eb10c7ad56e045dd5344a5c318b2" target="_blank" rel="noreferrer">B站版本</a></p></blockquote><p>有兴趣把源码下载下来，去<a href="https://github.com/GauharChan/vite-plugin-shared/tree/master/playground/shared" target="_blank" rel="noreferrer">playground</a>目录运行一下。</p>',5),t=p("iframe",{width:"100%",height:"615",src:"https://www.youtube.com/embed/kcTpPguKIXc",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:""},null,-1),c=s(`<h2 id="需求背景" tabindex="-1">需求背景 <a class="header-anchor" href="#需求背景" aria-label="Permalink to &quot;需求背景&quot;">​</a></h2><p>现有的目录规范如下</p><p>assets 文件夹，可以是针对大模块、某个端的<strong>公共资源</strong>；也可以是当前单一功能(如果你觉得有必要)的资源</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">assets</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">components</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># 组件文件夹</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">ComA</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">src</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># 组件所有核心内容</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">index.ts</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># 本组件出口文件 使用组件的时候是引用该文件</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">data</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">api</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># 当前模块涉及到的接口</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">apiA.ts</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">hooks</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># 钩子</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">useA.ts</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">types</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># ts类型</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">img</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># 图片资源</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">store</span></span>
<span class="line"><span style="color:#62E884;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">│</span><span style="color:#F6F6F4;">   </span><span style="color:#E7EE98;">├──</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">storeA.ts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">assets</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">components</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 组件文件夹</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ComA</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">src</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 组件所有核心内容</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.ts</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 本组件出口文件 使用组件的时候是引用该文件</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">data</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">api</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 当前模块涉及到的接口</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apiA.ts</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hooks</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 钩子</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">useA.ts</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">types</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># ts类型</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">img</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 图片资源</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">store</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">storeA.ts</span></span></code></pre></div><p>大概会是这个样子</p><p><img src="https://raw.githubusercontent.com/GauharChan/Picture-bed/main/img/image-20230306152413035.png" alt="image-20230306152413035"></p><p>这样的目录用起来挺清晰的，但同时带来一个痛点是层级太深了，这主要是体现在页面引用，编写路径的时候，增加了开发的心智负担。</p><h2 id="工具实现" tabindex="-1">工具实现 <a class="header-anchor" href="#工具实现" aria-label="Permalink to &quot;工具实现&quot;">​</a></h2><h3 id="头脑风暴" tabindex="-1">头脑风暴 <a class="header-anchor" href="#头脑风暴" aria-label="Permalink to &quot;头脑风暴&quot;">​</a></h3><blockquote><p>重申一下，我们的痛点和工具的目的是解决引用的路径问题，基于上面的目录，我们在使用时是这样的</p><p>并且页面中有一大堆的<code>import</code></p></blockquote><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { WeeksResult } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">../assets/components/CalendarCustom/src/api</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { useCardList } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./assets/data/hooks/useCard</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { WeeksResult } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;../assets/components/CalendarCustom/src/api&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { useCardList } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./assets/data/hooks/useCard&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>那能有什么方式解决这个问题呢，正当我一筹莫展的时候</p><p><img src="https://lf3-cdn-tos.bytescm.com/obj/static/xitu_juejin_web/img/jj_emoji_25.51e6984.png" alt="[灵光一现]"></p><p>忽然想到<code>vue</code>源码中<a href="https://github.com/vuejs/core/blob/main/packages/shared/src/index.ts" target="_blank" rel="noreferrer">shared</a>，虽然他的原意是一个工具包，但是我们可以借鉴这个思路——统一出入口</p><p>因为我们是业务开发，并不是<code>utils</code>，所以更合适的做法是在每个<code>assets</code>文件夹下都写一个出口文件<code>shared.ts</code>，看到这里你会想说，这不就是平时的<code>index.ts</code>的出口吗，和<code>shared</code>有什么关系</p><p>但我确实是受到<a href="https://github.com/vuejs/core/blob/main/packages/shared/src/index.ts" target="_blank" rel="noreferrer">shared</a>的启发的 😅，同时还做了一些改动</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// @vue/shared</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./patchFlags</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./shapeFlags</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./slotFlags</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// @vue/shared</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./patchFlags&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./shapeFlags&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./slotFlags&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>上面的用法用在业务开发中存在一个问题，就是导出成员的重复命名。所以呢，我最终是以文件名命名，会是这样</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// shared.ts</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">as</span><span style="color:#F6F6F4;"> CountCardIndex </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./components/CountCard/index</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">as</span><span style="color:#F6F6F4;"> TimeLineIndex </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./components/TimeLine/index</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">as</span><span style="color:#F6F6F4;"> dataApi </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./data/api</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> { CountCardIndex, TimeLineIndex, dataApi };</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// shared.ts</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> CountCardIndex </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./components/CountCard/index&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> TimeLineIndex </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./components/TimeLine/index&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> dataApi </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./data/api&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> { CountCardIndex, TimeLineIndex, dataApi };</span></span></code></pre></div><p>避免了文件内部导出的成员(变量、函数)名重复的问题</p><p>有了方案后，就是代码书写的问题了，乍一看就是把<code>assets</code>下的<code>ts</code>全都引进来了并导出，这种单一且枯燥开发人员去写肯定是不太合适的；就像<code>接口api</code>一样，现在很多工具都可以自动生成了，比如<code>apiFox</code></p><p>理所当然，我们的<code>shared</code>也应该自动生成</p><h3 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h3><blockquote><p>需要特别注意<code>Windows</code>和<code>Mac</code>的差异性。</p><ul><li>文件路径 <code>Windows</code>是<code>\\</code>，而<code>Mac</code>是<code>/</code> ，使用<code>path</code> 做兼容</li><li><code>node_modules</code>的执行文件类型不一致</li></ul></blockquote><h4 id="全局变量" tabindex="-1">全局变量 <a class="header-anchor" href="#全局变量" aria-label="Permalink to &quot;全局变量&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> ChildProcess </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">node:child_process</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> chalk </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">chalk</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> fs </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">node:fs</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> os </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">node:os</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> Path </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">node:path</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> sep </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Path.sep;</span></span>
<span class="line"><span style="color:#7B7F8B;">/** 最终生成的shared.ts文件集合 */</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> sharedList </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Set</span><span style="color:#F6F6F4;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> ChildProcess </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node:child_process&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> chalk </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;chalk&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> fs </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node:fs&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> os </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node:os&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Path </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node:path&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sep</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Path.sep;</span></span>
<span class="line"><span style="color:#6A737D;">/** 最终生成的shared.ts文件集合 */</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sharedList</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">();</span></span></code></pre></div><h4 id="_1-找到views文件夹下所有的assets文件夹路径" tabindex="-1">1.找到<code>views</code>文件夹下所有的<code>assets</code>文件夹路径 <a class="header-anchor" href="#_1-找到views文件夹下所有的assets文件夹路径" aria-label="Permalink to &quot;1.找到\`views\`文件夹下所有的\`assets\`文件夹路径&quot;">​</a></h4><blockquote><p>递归遍历传入的路径，找到所有 assets 文件夹的路径并返回</p></blockquote><p>这里的代码比较简单，先拿到目录下的子目录，判断名字是否为<code>assets</code>；是则记录起来，否则递归</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@author</span><span style="color:#7B7F8B;">: gauharchan</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@description</span><span style="color:#7B7F8B;"> 递归遍历传入的路径，找到所有assets文件夹的路径</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{string}</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#7B7F8B;"> 默认是遍历views</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getAssetsSet</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Path.</span><span style="color:#62E884;">resolve</span><span style="color:#F6F6F4;">(dirName, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">src/views</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">),</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#FFB86C;font-style:italic;">pathSet</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Set</span><span style="color:#F6F6F4;">&lt;</span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">&gt;()</span></span>
<span class="line"><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Set</span><span style="color:#F6F6F4;">&lt;</span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">&gt; {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> dirArr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> fs.</span><span style="color:#62E884;">readdirSync</span><span style="color:#F6F6F4;">(path);</span></span>
<span class="line"><span style="color:#F6F6F4;">  dirArr.</span><span style="color:#62E884;">forEach</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">dir</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> isDirectory </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> fs.</span><span style="color:#62E884;">lstatSync</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">path</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">/</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">dir</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">isDirectory</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (isDirectory) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (dir </span><span style="color:#F286C4;">===</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">assets</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        pathSet.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(Path.</span><span style="color:#62E884;">resolve</span><span style="color:#F6F6F4;">(path, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">assets</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">      } </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 如果是其他文件夹，递归遍历</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#62E884;">getAssetsSet</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">path</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">/</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">dir</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">, pathSet);</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  });</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> pathSet;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@author</span><span style="color:#6A737D;">: gauharchan</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 递归遍历传入的路径，找到所有assets文件夹的路径</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">path</span><span style="color:#6A737D;"> 默认是遍历views</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getAssetsSet</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(dirName, </span><span style="color:#032F62;">&#39;src/views&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">pathSet</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">&gt;()</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dirArr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fs.</span><span style="color:#6F42C1;">readdirSync</span><span style="color:#24292E;">(path);</span></span>
<span class="line"><span style="color:#24292E;">  dirArr.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">dir</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isDirectory</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fs.</span><span style="color:#6F42C1;">lstatSync</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">path</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">dir</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">isDirectory</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isDirectory) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (dir </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;assets&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        pathSet.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(Path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(path, </span><span style="color:#032F62;">&#39;assets&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 如果是其他文件夹，递归遍历</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">getAssetsSet</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">path</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">dir</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">, pathSet);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> pathSet;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="_2-通过assets路径遍历查找该目录相关的ts文件路径" tabindex="-1">2.通过<code>assets</code>路径遍历查找该目录相关的<code>ts</code>文件路径 <a class="header-anchor" href="#_2-通过assets路径遍历查找该目录相关的ts文件路径" aria-label="Permalink to &quot;2.通过\`assets\`路径遍历查找该目录相关的\`ts\`文件路径&quot;">​</a></h4><p>拆解一下</p><ul><li>遍历传入的子目录，并获取文件信息</li><li>如果是文件夹 <ul><li>组件文件夹 直接取 compoents/\${dir}/index.ts。因为组件文件夹的规范，都会有一个<code>src</code>文件夹和<code>index.ts</code>出口</li><li>其他文件夹继续递归，找到其所有的 ts 文件为止</li></ul></li><li>如果是 ts 文件，直接记录</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@author</span><span style="color:#7B7F8B;">: gauharchan</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@description</span><span style="color:#7B7F8B;"> 获取assets目录下所有的ts文件</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{string}</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">parentPath</span><span style="color:#7B7F8B;"> 当前文件夹路径</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{string[]}</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">childDirs</span><span style="color:#7B7F8B;"> 当前文件夹下的子目录、子文件</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{Set}</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">pathSet</span><span style="color:#7B7F8B;"> ts文件集合</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@returns</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{Set}</span><span style="color:#7B7F8B;"> pathSet ts文件集合</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">recursion</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#FFB86C;font-style:italic;">parentPath</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#FFB86C;font-style:italic;">childDirs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">[],</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#FFB86C;font-style:italic;">pathSet</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Set</span><span style="color:#F6F6F4;">&lt;</span><span style="color:#FFB86C;font-style:italic;">AssetsFile</span><span style="color:#F6F6F4;">&gt;()</span></span>
<span class="line"><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Set</span><span style="color:#F6F6F4;">&lt;</span><span style="color:#FFB86C;font-style:italic;">AssetsFile</span><span style="color:#F6F6F4;">&gt; {</span></span>
<span class="line"><span style="color:#F6F6F4;">  childDirs.</span><span style="color:#62E884;">forEach</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">item</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> stat </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> fs.</span><span style="color:#62E884;">lstatSync</span><span style="color:#F6F6F4;">(Path.</span><span style="color:#62E884;">resolve</span><span style="color:#F6F6F4;">(parentPath, item));</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 如果是文件夹</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (stat.</span><span style="color:#62E884;">isDirectory</span><span style="color:#F6F6F4;">()) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// components 直接取compoents/\${dir}/index.ts</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (item.</span><span style="color:#62E884;">toLowerCase</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">includes</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">component</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> componentPath </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Path.</span><span style="color:#62E884;">resolve</span><span style="color:#F6F6F4;">(parentPath, item);</span></span>
<span class="line"><span style="color:#F6F6F4;">        fs.</span><span style="color:#62E884;">readdirSync</span><span style="color:#F6F6F4;">(componentPath)</span></span>
<span class="line"><span style="color:#F6F6F4;">          .</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">com</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> fs.</span><span style="color:#62E884;">lstatSync</span><span style="color:#F6F6F4;">(Path.</span><span style="color:#62E884;">resolve</span><span style="color:#F6F6F4;">(componentPath, com)).</span><span style="color:#62E884;">isDirectory</span><span style="color:#F6F6F4;">())</span></span>
<span class="line"><span style="color:#F6F6F4;">          .</span><span style="color:#62E884;">forEach</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">com</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 判断有没有index.ts文件</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (fs.</span><span style="color:#62E884;">existsSync</span><span style="color:#F6F6F4;">(Path.</span><span style="color:#62E884;">resolve</span><span style="color:#F6F6F4;">(componentPath, com, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">index.ts</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">))) {</span></span>
<span class="line"><span style="color:#F6F6F4;">              pathSet.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">                url</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> Path.</span><span style="color:#62E884;">resolve</span><span style="color:#F6F6F4;">(componentPath, com, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">index.ts</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">),</span></span>
<span class="line"><span style="color:#F6F6F4;">                name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getExportName</span><span style="color:#F6F6F4;">(Path.</span><span style="color:#62E884;">resolve</span><span style="color:#F6F6F4;">(componentPath, com), </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">index.ts</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">),</span></span>
<span class="line"><span style="color:#F6F6F4;">              });</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">          });</span></span>
<span class="line"><span style="color:#F6F6F4;">      } </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> path </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Path.</span><span style="color:#62E884;">resolve</span><span style="color:#F6F6F4;">(parentPath, item);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 获取子目录</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> dir </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> fs.</span><span style="color:#62E884;">readdirSync</span><span style="color:#F6F6F4;">(path);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">dir) </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 递归遍历解析文件夹</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#62E884;">recursion</span><span style="color:#F6F6F4;">(path, dir, pathSet);</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    } </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (item.</span><span style="color:#62E884;">endsWith</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">.ts</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// &amp;&amp; stat.size &gt; 0 stat.size 过滤空文件</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// ts文件，直接记录</span></span>
<span class="line"><span style="color:#F6F6F4;">      pathSet.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">        url</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> Path.</span><span style="color:#62E884;">resolve</span><span style="color:#F6F6F4;">(parentPath, item),</span></span>
<span class="line"><span style="color:#F6F6F4;">        name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getExportName</span><span style="color:#F6F6F4;">(parentPath, item),</span></span>
<span class="line"><span style="color:#F6F6F4;">      });</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  });</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> pathSet;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#7B7F8B;">/** hooksUseWeek 文件夹名+ts文件名(驼峰) */</span></span>
<span class="line"><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getExportName</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">parentPath</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">fileName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/** 上层文件夹名 */</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> firstName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> parentPath.</span><span style="color:#62E884;">split</span><span style="color:#F6F6F4;">(sep).</span><span style="color:#62E884;">pop</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/** 文件名，不包含文件类型后缀 */</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> lastName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> fileName.</span><span style="color:#62E884;">split</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">.</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">shift</span><span style="color:#F6F6F4;">() </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;&#39;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lastName.</span><span style="color:#62E884;">split</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;&#39;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 首字母大写</span></span>
<span class="line"><span style="color:#F6F6F4;">  arr[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> arr[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">].</span><span style="color:#62E884;">toUpperCase</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">firstName</span><span style="color:#F286C4;">}\${</span><span style="color:#F6F6F4;">arr.</span><span style="color:#62E884;">join</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;&#39;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@author</span><span style="color:#6A737D;">: gauharchan</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 获取assets目录下所有的ts文件</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">parentPath</span><span style="color:#6A737D;"> 当前文件夹路径</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string[]}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">childDirs</span><span style="color:#6A737D;"> 当前文件夹下的子目录、子文件</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Set}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">pathSet</span><span style="color:#6A737D;"> ts文件集合</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Set}</span><span style="color:#6A737D;"> pathSet ts文件集合</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">recursion</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">parentPath</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">childDirs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">pathSet</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">AssetsFile</span><span style="color:#24292E;">&gt;()</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">AssetsFile</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  childDirs.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">stat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fs.</span><span style="color:#6F42C1;">lstatSync</span><span style="color:#24292E;">(Path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(parentPath, item));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 如果是文件夹</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (stat.</span><span style="color:#6F42C1;">isDirectory</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// components 直接取compoents/\${dir}/index.ts</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (item.</span><span style="color:#6F42C1;">toLowerCase</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;component&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">componentPath</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(parentPath, item);</span></span>
<span class="line"><span style="color:#24292E;">        fs.</span><span style="color:#6F42C1;">readdirSync</span><span style="color:#24292E;">(componentPath)</span></span>
<span class="line"><span style="color:#24292E;">          .</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">com</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> fs.</span><span style="color:#6F42C1;">lstatSync</span><span style="color:#24292E;">(Path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(componentPath, com)).</span><span style="color:#6F42C1;">isDirectory</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">          .</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">com</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 判断有没有index.ts文件</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (fs.</span><span style="color:#6F42C1;">existsSync</span><span style="color:#24292E;">(Path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(componentPath, com, </span><span style="color:#032F62;">&#39;index.ts&#39;</span><span style="color:#24292E;">))) {</span></span>
<span class="line"><span style="color:#24292E;">              pathSet.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">                url: Path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(componentPath, com, </span><span style="color:#032F62;">&#39;index.ts&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">                name: </span><span style="color:#6F42C1;">getExportName</span><span style="color:#24292E;">(Path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(componentPath, com), </span><span style="color:#032F62;">&#39;index.ts&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">              });</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">          });</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(parentPath, item);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 获取子目录</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dir</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fs.</span><span style="color:#6F42C1;">readdirSync</span><span style="color:#24292E;">(path);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">dir) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 递归遍历解析文件夹</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">recursion</span><span style="color:#24292E;">(path, dir, pathSet);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (item.</span><span style="color:#6F42C1;">endsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.ts&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// &amp;&amp; stat.size &gt; 0 stat.size 过滤空文件</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// ts文件，直接记录</span></span>
<span class="line"><span style="color:#24292E;">      pathSet.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        url: Path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(parentPath, item),</span></span>
<span class="line"><span style="color:#24292E;">        name: </span><span style="color:#6F42C1;">getExportName</span><span style="color:#24292E;">(parentPath, item),</span></span>
<span class="line"><span style="color:#24292E;">      });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> pathSet;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/** hooksUseWeek 文件夹名+ts文件名(驼峰) */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getExportName</span><span style="color:#24292E;">(</span><span style="color:#E36209;">parentPath</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fileName</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/** 上层文件夹名 */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">firstName</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> parentPath.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(sep).</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/** 文件名，不包含文件类型后缀 */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">lastName</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fileName.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">shift</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lastName.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 首字母大写</span></span>
<span class="line"><span style="color:#24292E;">  arr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">toUpperCase</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">firstName</span><span style="color:#032F62;">}\${</span><span style="color:#24292E;">arr</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">join</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="_3-组合ts文件路径并生成代码" tabindex="-1">3.组合<code>ts</code>文件路径并生成代码 <a class="header-anchor" href="#_3-组合ts文件路径并生成代码" aria-label="Permalink to &quot;3.组合\`ts\`文件路径并生成代码&quot;">​</a></h4><p>生成代码就很简单了，上面我们已经获取到所有的<strong>ts 文件路径和导出的命名</strong>了；这里主要就是截取<code>/assets</code>后面的路径，然后拼接好模板字符串</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getContent</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">pathSet</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Set</span><span style="color:#F6F6F4;">&lt;</span><span style="color:#FFB86C;font-style:italic;">AssetsFile</span><span style="color:#F6F6F4;">&gt;) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> importArr</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">[] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [];</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 导出的变量名</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> exportArr</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">[] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [];</span></span>
<span class="line"><span style="color:#F6F6F4;">  pathSet.</span><span style="color:#62E884;">forEach</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">item</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> index </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> item.url.</span><span style="color:#62E884;">search</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">sep</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">assets\`</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 解析获取/assets后面的路径 windows和mac的路径开头部分不一致，window以/开头</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> url </span><span style="color:#F286C4;">=</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#E7EE98;">\`.</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">item.url.</span><span style="color:#62E884;">startsWith</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span><span style="color:#E7EE98;"> </span><span style="color:#F286C4;">?</span><span style="color:#E7EE98;"> </span><span style="color:#DEE492;">&quot;&quot;</span><span style="color:#E7EE98;"> </span><span style="color:#F286C4;">:</span><span style="color:#E7EE98;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span></span>
<span class="line"><span style="color:#F6F6F4;">      item.url.</span><span style="color:#62E884;">substring</span><span style="color:#F6F6F4;">(index </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/assets</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">.length);</span></span>
<span class="line"><span style="color:#F6F6F4;">    importArr.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#E7EE98;">\`import * as </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">item.name</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> from &#39;</span><span style="color:#F286C4;">\${</span></span>
<span class="line"><span style="color:#E7EE98;">        </span><span style="color:#F6F6F4;">url.</span><span style="color:#62E884;">replaceAll</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">\\\\</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">split</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#E7EE98;">      </span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">&#39;;</span><span style="color:#F286C4;">\\n</span><span style="color:#E7EE98;">\`</span></span>
<span class="line"><span style="color:#F6F6F4;">    );</span></span>
<span class="line"><span style="color:#F6F6F4;">    exportArr.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(item.name);</span></span>
<span class="line"><span style="color:#F6F6F4;">  });</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> content </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">importArr.</span><span style="color:#62E884;">join</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;&quot;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span></span>
<span class="line"><span style="color:#E7EE98;">export {</span></span>
<span class="line"><span style="color:#E7EE98;">  </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">exportArr.</span><span style="color:#62E884;">join</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">,</span><span style="color:#F286C4;">\\n</span><span style="color:#E7EE98;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">,</span></span>
<span class="line"><span style="color:#E7EE98;">};</span></span>
<span class="line"><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> content;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getContent</span><span style="color:#24292E;">(</span><span style="color:#E36209;">pathSet</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">AssetsFile</span><span style="color:#24292E;">&gt;) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> importArr</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 导出的变量名</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> exportArr</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">  pathSet.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> item.url.</span><span style="color:#6F42C1;">search</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">sep</span><span style="color:#032F62;">}assets\`</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 解析获取/assets后面的路径 windows和mac的路径开头部分不一致，window以/开头</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">url</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">\`.\${</span><span style="color:#24292E;">item</span><span style="color:#032F62;">.</span><span style="color:#24292E;">url</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#032F62;">) </span><span style="color:#D73A49;">?</span><span style="color:#032F62;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">:</span><span style="color:#032F62;"> </span><span style="color:#032F62;">&quot;/&quot;}\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      item.url.</span><span style="color:#6F42C1;">substring</span><span style="color:#24292E;">(index </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/assets&quot;</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    importArr.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">\`import * as \${</span><span style="color:#24292E;">item</span><span style="color:#032F62;">.</span><span style="color:#24292E;">name</span><span style="color:#032F62;">} from &#39;\${</span></span>
<span class="line"><span style="color:#032F62;">        </span><span style="color:#24292E;">url</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">replaceAll</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">&quot;</span><span style="color:#032F62;">, </span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#032F62;">).</span><span style="color:#6F42C1;">split</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&quot;.ts&quot;</span><span style="color:#032F62;">)[</span><span style="color:#005CC5;">0</span><span style="color:#032F62;">]</span></span>
<span class="line"><span style="color:#032F62;">      </span><span style="color:#032F62;">}&#39;;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">\`</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">    exportArr.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(item.name);</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">content</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">importArr</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">join</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}</span></span>
<span class="line"><span style="color:#032F62;">export {</span></span>
<span class="line"><span style="color:#032F62;">  \${</span><span style="color:#24292E;">exportArr</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">join</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&quot;,</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">  &quot;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">},</span></span>
<span class="line"><span style="color:#032F62;">};</span></span>
<span class="line"><span style="color:#032F62;">\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> content;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="_4-创建函数" tabindex="-1">4.创建函数 <a class="header-anchor" href="#_4-创建函数" aria-label="Permalink to &quot;4.创建函数&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@description</span><span style="color:#7B7F8B;"> 根据路径遍历assets所有目录创建shared.ts</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{ string }</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">targetPath</span><span style="color:#7B7F8B;"> 目标assets路径</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">createShared</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">targetPath</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// assets的子目录</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> assetsModules </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> fs.</span><span style="color:#62E884;">readdirSync</span><span style="color:#F6F6F4;">(targetPath);</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 遍历获取所有ts文件</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> allTs </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">recursion</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">    targetPath,</span></span>
<span class="line"><span style="color:#F6F6F4;">    assetsModules.</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">file</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">file.</span><span style="color:#62E884;">endsWith</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)) </span><span style="color:#7B7F8B;">// 剔除shared.ts</span></span>
<span class="line"><span style="color:#F6F6F4;">  );</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 写入代码内容</span></span>
<span class="line"><span style="color:#F6F6F4;">  fs.</span><span style="color:#62E884;">writeFileSync</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">targetPath</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">/shared.ts\`</span><span style="color:#F6F6F4;">, </span><span style="color:#62E884;">getContent</span><span style="color:#F6F6F4;">(allTs), </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">utf-8</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">  sharedList.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">targetPath</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">/shared.ts\`</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 根据路径遍历assets所有目录创建shared.ts</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{ string }</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">targetPath</span><span style="color:#6A737D;"> 目标assets路径</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createShared</span><span style="color:#24292E;">(</span><span style="color:#E36209;">targetPath</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// assets的子目录</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">assetsModules</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fs.</span><span style="color:#6F42C1;">readdirSync</span><span style="color:#24292E;">(targetPath);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 遍历获取所有ts文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">allTs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">recursion</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    targetPath,</span></span>
<span class="line"><span style="color:#24292E;">    assetsModules.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">file</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">file.</span><span style="color:#6F42C1;">endsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;.ts&quot;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// 剔除shared.ts</span></span>
<span class="line"><span style="color:#24292E;">  );</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 写入代码内容</span></span>
<span class="line"><span style="color:#24292E;">  fs.</span><span style="color:#6F42C1;">writeFileSync</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">targetPath</span><span style="color:#032F62;">}/shared.ts\`</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">getContent</span><span style="color:#24292E;">(allTs), </span><span style="color:#032F62;">&quot;utf-8&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  sharedList.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">targetPath</span><span style="color:#032F62;">}/shared.ts\`</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="代码优化" tabindex="-1">代码优化 <a class="header-anchor" href="#代码优化" aria-label="Permalink to &quot;代码优化&quot;">​</a></h3><h4 id="eslint-修复" tabindex="-1">Eslint 修复 <a class="header-anchor" href="#eslint-修复" aria-label="Permalink to &quot;Eslint 修复&quot;">​</a></h4><p>上面我们实现了代码的生成，并且在<code>getContent</code>中的模板字符串中还特意进行了换行，增加逗号等，但是并不能确保符合项目的<code>Eslint</code>规则，或者说生成的代码格式并不可控</p><p>因此，我们应该在生成完文件后调用<code>eslint</code>进行修复；</p><p>我们实现了一个<code>run</code>函数，并作为最终的执行函数</p><ul><li>接收路径并调用<code>createShared</code>创建<code>shared</code>文件，同时收集好路径<code>sharedList</code></li><li>执行<code>eslint</code>命令修复</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@author</span><span style="color:#7B7F8B;">: gauharchan</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@description</span><span style="color:#7B7F8B;"> 执行函数</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{string[]}</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">dirs</span><span style="color:#7B7F8B;"> 默认遍历整个views</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">run</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">dirs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">[] </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Set</span><span style="color:#F6F6F4;">&lt;</span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">&gt; </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getAssetsSet</span><span style="color:#F6F6F4;">()) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  sharedList.</span><span style="color:#62E884;">clear</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">  dirs.</span><span style="color:#62E884;">forEach</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">dir</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">createShared</span><span style="color:#F6F6F4;">(dir));</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> fileUrls </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Array.</span><span style="color:#62E884;">from</span><span style="color:#F6F6F4;">(sharedList).</span><span style="color:#62E884;">join</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// eslint 修复</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">try</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    ChildProcess.</span><span style="color:#62E884;">execSync</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`eslint </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">fileUrls</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> --fix\`</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">chalk.bgGreen.</span><span style="color:#62E884;">black</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;"> SUCCESS </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">chalk.</span><span style="color:#62E884;">cyan</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#E7EE98;">        </span><span style="color:#E7EE98;">\`生成了</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">sharedList.size</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">个文件，并已经修复好Eslint\`</span></span>
<span class="line"><span style="color:#E7EE98;">      </span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span></span>
<span class="line"><span style="color:#F6F6F4;">    );</span></span>
<span class="line"><span style="color:#F6F6F4;">  } </span><span style="color:#F286C4;">catch</span><span style="color:#F6F6F4;"> (error) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">chalk.bgRed.</span><span style="color:#62E884;">white</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;"> ERROR </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">chalk.</span><span style="color:#62E884;">red</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">eslint 修复失败</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span></span>
<span class="line"><span style="color:#F6F6F4;">    );</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@author</span><span style="color:#6A737D;">: gauharchan</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 执行函数</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string[]}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">dirs</span><span style="color:#6A737D;"> 默认遍历整个views</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(</span><span style="color:#E36209;">dirs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[] </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getAssetsSet</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">  sharedList.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  dirs.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">dir</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createShared</span><span style="color:#24292E;">(dir));</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">fileUrls</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(sharedList).</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// eslint 修复</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    ChildProcess.</span><span style="color:#6F42C1;">execSync</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`eslint \${</span><span style="color:#24292E;">fileUrls</span><span style="color:#032F62;">} --fix\`</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">chalk</span><span style="color:#032F62;">.</span><span style="color:#24292E;">bgGreen</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">black</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&quot; SUCCESS &quot;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">} \${</span><span style="color:#24292E;">chalk</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">cyan</span><span style="color:#032F62;">(</span></span>
<span class="line"><span style="color:#032F62;">        </span><span style="color:#032F62;">\`生成了\${</span><span style="color:#24292E;">sharedList</span><span style="color:#032F62;">.</span><span style="color:#24292E;">size</span><span style="color:#032F62;">}个文件，并已经修复好Eslint\`</span></span>
<span class="line"><span style="color:#032F62;">      )</span><span style="color:#032F62;">}\`</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (error) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">chalk</span><span style="color:#032F62;">.</span><span style="color:#24292E;">bgRed</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">white</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&quot; ERROR &quot;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">} \${</span><span style="color:#24292E;">chalk</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">red</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&quot;eslint 修复失败&quot;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="文件监听" tabindex="-1">文件监听 <a class="header-anchor" href="#文件监听" aria-label="Permalink to &quot;文件监听&quot;">​</a></h4><p><strong>监听</strong>文件的新建与删除，针对该<code>assets</code>目录重新生成<code>shared.ts</code>；这里就是使用<a href="https://github.com/paulmillr/chokidar#api" target="_blank" rel="noreferrer">chokidar</a> 进行<code>watch</code>，在其提供的事件执行 run 函数</p><ul><li>获取到所有的<code>assets</code>路径并进行监听</li><li><code>watcher</code>准备好的时候就全量执行生成<code>views</code>下所有的<code>assets/shared.ts</code></li><li>在新增、删除的时候，只处理当前的<code>assets</code>文件夹重新生成<code>shared.ts</code></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { run, getAssetsSet } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./shared</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> chalk </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">chalk</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> chokidar </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">chokidar</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> Path </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">node:path</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">/** 插件配置 */</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">interface</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">PluginOptions</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/** 是否展示对已删除文件引用的文件列表 */</span></span>
<span class="line"><span style="color:#F6F6F4;">  showDeleted</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">boolean</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/** 页面文件夹路径，一般是src/views、src/pages */</span></span>
<span class="line"><span style="color:#F6F6F4;">  source</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> watcher</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">chokidar</span><span style="color:#F6F6F4;">.</span><span style="color:#97E1F1;font-style:italic;">FSWatcher</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">null</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> ready </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> sep </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Path.sep;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@author</span><span style="color:#7B7F8B;">: gauharchan</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@description</span><span style="color:#7B7F8B;"> 监听文件改动</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{ Object }</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#7B7F8B;"> 配置</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{ boolean }</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">options.showDeleted</span><span style="color:#7B7F8B;"> 是否展示对已删除文件引用的文件列表</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">watch</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">PluginOptions</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 文件新增时</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">addFileListener</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 过滤copy文件</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (path.</span><span style="color:#62E884;">includes</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">copy</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)) </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (ready) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#62E884;">parseAndCreate</span><span style="color:#F6F6F4;">(path);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 删除文件时，需要把文件里所有的用例删掉</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">fileRemovedListener</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">parseAndCreate</span><span style="color:#F6F6F4;">(path);</span></span>
<span class="line"><span style="color:#F6F6F4;">    options?.showDeleted </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">findImportFile</span><span style="color:#F6F6F4;">(path);</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">watcher) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 监听assets文件夹</span></span>
<span class="line"><span style="color:#F6F6F4;">    watcher </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> chokidar.</span><span style="color:#62E884;">watch</span><span style="color:#F6F6F4;">(Array.</span><span style="color:#62E884;">from</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">getAssetsSet</span><span style="color:#F6F6F4;">(options?.source)));</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  watcher</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">on</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">add</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, addFileListener)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// .on(&#39;addDir&#39;, addDirecotryListener)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// .on(&#39;change&#39;, fileChangeListener)</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">on</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">unlink</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, fileRemovedListener)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// .on(&#39;unlinkDir&#39;, directoryRemovedListener)</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">on</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">error</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">error</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">chalk.bgRed.</span><span style="color:#62E884;">white</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;"> ERROR </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">chalk.</span><span style="color:#62E884;">red</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#E7EE98;">          </span><span style="color:#E7EE98;">\`Error happened </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">error</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span></span>
<span class="line"><span style="color:#E7EE98;">        </span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span></span>
<span class="line"><span style="color:#F6F6F4;">      );</span></span>
<span class="line"><span style="color:#F6F6F4;">    })</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">on</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">ready</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">chalk.bgGreen.</span><span style="color:#62E884;">black</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;"> shared </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">chalk.</span><span style="color:#62E884;">cyan</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">检测assets文件夹中</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span></span>
<span class="line"><span style="color:#F6F6F4;">      );</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// 全量生成一遍shared文件</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#62E884;">run</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">getAssetsSet</span><span style="color:#F6F6F4;">(options?.source));</span></span>
<span class="line"><span style="color:#F6F6F4;">      ready </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    });</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@author</span><span style="color:#7B7F8B;">: gauharchan</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@description</span><span style="color:#7B7F8B;"> 解析目标路径，只更新目标路径的shared.ts</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{string}</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#7B7F8B;"> 新增、删除的文件路径</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">parseAndCreate</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 只监听ts文件(不管图片)  排除shared.ts(否则自动生成后会再次触发add hook) 组件只关心components/xx/index.ts</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> winMatch </span><span style="color:#F286C4;">=</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">assets\\\\component</span><span style="color:#FFB86C;">(</span><span style="color:#E7EE98;">s</span><span style="color:#FFB86C;">)</span><span style="color:#F286C4;">?</span><span style="color:#E7EE98;">\\\\</span><span style="color:#97E1F1;">[</span><span style="color:#BF9EEE;">a-zA-Z</span><span style="color:#97E1F1;">]</span><span style="color:#F286C4;">*</span><span style="color:#E7EE98;">\\\\index</span><span style="color:#BF9EEE;">.</span><span style="color:#E7EE98;">ts</span><span style="color:#EE6666;">/</span><span style="color:#F286C4;">g</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> unixMatch </span><span style="color:#F286C4;">=</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">assets\\/component</span><span style="color:#FFB86C;">(</span><span style="color:#E7EE98;">s</span><span style="color:#FFB86C;">)</span><span style="color:#F286C4;">?</span><span style="color:#E7EE98;">\\/</span><span style="color:#97E1F1;">[</span><span style="color:#BF9EEE;">a-zA-Z</span><span style="color:#97E1F1;">]</span><span style="color:#F286C4;">*</span><span style="color:#E7EE98;">\\/index</span><span style="color:#BF9EEE;">.</span><span style="color:#E7EE98;">ts</span><span style="color:#EE6666;">/</span><span style="color:#F286C4;">g</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> componentMatch </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sep </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">?</span><span style="color:#F6F6F4;"> unixMatch </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> winMatch; </span><span style="color:#7B7F8B;">// match不到是null</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (</span></span>
<span class="line"><span style="color:#F6F6F4;">    (path.</span><span style="color:#62E884;">endsWith</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">path.</span><span style="color:#62E884;">endsWith</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">shared.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)) </span><span style="color:#F286C4;">||</span></span>
<span class="line"><span style="color:#F6F6F4;">    path.</span><span style="color:#62E884;">match</span><span style="color:#F6F6F4;">(componentMatch)</span></span>
<span class="line"><span style="color:#F6F6F4;">  ) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 找到当前的assets目录</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> assetsParent </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> path.</span><span style="color:#62E884;">match</span><span style="color:#F6F6F4;">(</span><span style="color:#EE6666;">/</span><span style="color:#BF9EEE;">.</span><span style="color:#F286C4;">*</span><span style="color:#E7EE98;">assets</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;">)?.[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">];</span></span>
<span class="line"><span style="color:#F6F6F4;">    assetsParent </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">run</span><span style="color:#F6F6F4;">([assetsParent]);</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@author</span><span style="color:#7B7F8B;">: gauharchan</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@description</span><span style="color:#7B7F8B;"> 找到对 当前删除(重命名)的文件 有引用的所有文件</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{string}</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#7B7F8B;"> 当前删除(重命名)的文件路径</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">findImportFile</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">_path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { run, getAssetsSet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./shared&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> chalk </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;chalk&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> chokidar </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;chokidar&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Path </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node:path&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/** 插件配置 */</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PluginOptions</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/** 是否展示对已删除文件引用的文件列表 */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">showDeleted</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/** 页面文件夹路径，一般是src/views、src/pages */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">source</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> watcher</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">chokidar</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">FSWatcher</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> ready </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sep</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Path.sep;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@author</span><span style="color:#6A737D;">: gauharchan</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 监听文件改动</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{ Object }</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">options</span><span style="color:#6A737D;"> 配置</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{ boolean }</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">options.showDeleted</span><span style="color:#6A737D;"> 是否展示对已删除文件引用的文件列表</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">watch</span><span style="color:#24292E;">(</span><span style="color:#E36209;">options</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PluginOptions</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 文件新增时</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addFileListener</span><span style="color:#24292E;">(</span><span style="color:#E36209;">path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 过滤copy文件</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (path.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;copy&quot;</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (ready) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">parseAndCreate</span><span style="color:#24292E;">(path);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 删除文件时，需要把文件里所有的用例删掉</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fileRemovedListener</span><span style="color:#24292E;">(</span><span style="color:#E36209;">path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">parseAndCreate</span><span style="color:#24292E;">(path);</span></span>
<span class="line"><span style="color:#24292E;">    options?.showDeleted </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">findImportFile</span><span style="color:#24292E;">(path);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">watcher) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 监听assets文件夹</span></span>
<span class="line"><span style="color:#24292E;">    watcher </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> chokidar.</span><span style="color:#6F42C1;">watch</span><span style="color:#24292E;">(Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getAssetsSet</span><span style="color:#24292E;">(options?.source)));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  watcher</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;add&quot;</span><span style="color:#24292E;">, addFileListener)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// .on(&#39;addDir&#39;, addDirecotryListener)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// .on(&#39;change&#39;, fileChangeListener)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;unlink&quot;</span><span style="color:#24292E;">, fileRemovedListener)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// .on(&#39;unlinkDir&#39;, directoryRemovedListener)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;error&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">error</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">chalk</span><span style="color:#032F62;">.</span><span style="color:#24292E;">bgRed</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">white</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&quot; ERROR &quot;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">} \${</span><span style="color:#24292E;">chalk</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">red</span><span style="color:#032F62;">(</span></span>
<span class="line"><span style="color:#032F62;">          </span><span style="color:#032F62;">\`Error happened \${</span><span style="color:#24292E;">error</span><span style="color:#032F62;">}\`</span></span>
<span class="line"><span style="color:#032F62;">        )</span><span style="color:#032F62;">}\`</span></span>
<span class="line"><span style="color:#24292E;">      );</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ready&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">chalk</span><span style="color:#032F62;">.</span><span style="color:#24292E;">bgGreen</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">black</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&quot; shared &quot;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">} \${</span><span style="color:#24292E;">chalk</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">cyan</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&quot;检测assets文件夹中&quot;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span></span>
<span class="line"><span style="color:#24292E;">      );</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 全量生成一遍shared文件</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getAssetsSet</span><span style="color:#24292E;">(options?.source));</span></span>
<span class="line"><span style="color:#24292E;">      ready </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@author</span><span style="color:#6A737D;">: gauharchan</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 解析目标路径，只更新目标路径的shared.ts</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">path</span><span style="color:#6A737D;"> 新增、删除的文件路径</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseAndCreate</span><span style="color:#24292E;">(</span><span style="color:#E36209;">path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 只监听ts文件(不管图片)  排除shared.ts(否则自动生成后会再次触发add hook) 组件只关心components/xx/index.ts</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">winMatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /assets</span><span style="color:#22863A;font-weight:bold;">\\\\</span><span style="color:#032F62;">component(s)</span><span style="color:#D73A49;">?</span><span style="color:#22863A;font-weight:bold;">\\\\</span><span style="color:#005CC5;">[a-zA-Z]</span><span style="color:#D73A49;">*</span><span style="color:#22863A;font-weight:bold;">\\\\</span><span style="color:#032F62;">index</span><span style="color:#005CC5;">.</span><span style="color:#032F62;">ts/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unixMatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> /assets</span><span style="color:#22863A;font-weight:bold;">\\/</span><span style="color:#032F62;">component(s)</span><span style="color:#D73A49;">?</span><span style="color:#22863A;font-weight:bold;">\\/</span><span style="color:#005CC5;">[a-zA-Z]</span><span style="color:#D73A49;">*</span><span style="color:#22863A;font-weight:bold;">\\/</span><span style="color:#032F62;">index</span><span style="color:#005CC5;">.</span><span style="color:#032F62;">ts/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">componentMatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sep </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> unixMatch </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> winMatch; </span><span style="color:#6A737D;">// match不到是null</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    (path.</span><span style="color:#6F42C1;">endsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;.ts&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">path.</span><span style="color:#6F42C1;">endsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;shared.ts&quot;</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">    path.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(componentMatch)</span></span>
<span class="line"><span style="color:#24292E;">  ) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 找到当前的assets目录</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">assetsParent</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#005CC5;">.</span><span style="color:#D73A49;">*</span><span style="color:#032F62;">assets/</span><span style="color:#24292E;">)?.[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">    assetsParent </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">([assetsParent]);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@author</span><span style="color:#6A737D;">: gauharchan</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 找到对 当前删除(重命名)的文件 有引用的所有文件</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">path</span><span style="color:#6A737D;"> 当前删除(重命名)的文件路径</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">findImportFile</span><span style="color:#24292E;">(</span><span style="color:#E36209;">_path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) {}</span></span></code></pre></div><h4 id="vite-插件" tabindex="-1">vite 插件 <a class="header-anchor" href="#vite-插件" aria-label="Permalink to &quot;vite 插件&quot;">​</a></h4><p>运行上面的代码，一般来说我们是起一个新的终端，再运行<code>node</code>命令，或者在<code>package.json</code>的<code>script</code>中新加一个命令</p><p>但其实基于以往的经验，这种工具类的东西只要是多一个额外的操作步骤，我们傲娇的开发者就不会去使用的；还是 <code>根据api文档</code>生成<code>api.ts</code>的例子，原本我们也有这么一个工具，但是每个项目的 api 文档地址肯定是不一样的嘛，因为需要开发者配置一下，还有一些其他的灵活配置，从工具的角度出发没有任何的毛病，但是作为使用者，居然没有人愿意去做、去用；宁愿自己手动去写这些无聊、重复性的代码。</p><p>因为我这次吸取教训，以<code>vite</code>插件的方式运行，也就是说启动<code>serve</code>服务的时候执行</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// vite-plugin-shared.ts</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { Plugin } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">vite</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { PluginOptions, watch } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./watch</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">vitePluginShared</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">PluginOptions</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Plugin</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">vite-plugin-shared</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">buildStart</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#62E884;">watch</span><span style="color:#F6F6F4;">(options);</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    apply</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">serve</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  };</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  vitePluginShared,</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// vite-plugin-shared.ts</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Plugin } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vite&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { PluginOptions, watch } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./watch&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">vitePluginShared</span><span style="color:#24292E;">(</span><span style="color:#E36209;">options</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PluginOptions</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Plugin</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#032F62;">&quot;vite-plugin-shared&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">buildStart</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">watch</span><span style="color:#24292E;">(options);</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    apply: </span><span style="color:#032F62;">&quot;serve&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  vitePluginShared,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>接下来只需要在<code>vite.config.ts</code>中引入使用即可</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// ...</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { vitePluginShared } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">vite-plugin-shared</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">defineConfig</span><span style="color:#F6F6F4;">(({ </span><span style="color:#FFB86C;font-style:italic;">mode</span><span style="color:#F6F6F4;"> }) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> ({</span></span>
<span class="line"><span style="color:#F6F6F4;">  base</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  plugins</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">vue</span><span style="color:#F6F6F4;">(),</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">Components</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">      resolvers</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#62E884;">VantResolver</span><span style="color:#F6F6F4;">()],</span></span>
<span class="line"><span style="color:#F6F6F4;">    }),</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">vitePluginShared</span><span style="color:#F6F6F4;">({</span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">}),</span></span>
<span class="line"><span style="color:#F6F6F4;">  ],</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// ...</span></span>
<span class="line"><span style="color:#F6F6F4;"> }));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { vitePluginShared } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vite-plugin-shared&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">(({ </span><span style="color:#E36209;">mode</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> ({</span></span>
<span class="line"><span style="color:#24292E;">  base: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  plugins: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">vue</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Components</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      resolvers: [</span><span style="color:#6F42C1;">VantResolver</span><span style="color:#24292E;">()],</span></span>
<span class="line"><span style="color:#24292E;">    }),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">vitePluginShared</span><span style="color:#24292E;">({</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">}),</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;"> }));</span></span></code></pre></div><p>现在我们的<code>shared工具</code>就会在正常启动项目的时候运行啦，没有配置的心智负担了</p><h5 id="插件配置参数" tabindex="-1">插件配置参数 <a class="header-anchor" href="#插件配置参数" aria-label="Permalink to &quot;插件配置参数&quot;">​</a></h5><table><thead><tr><th>参数名</th><th>描述</th><th>类型</th></tr></thead><tbody><tr><td>source</td><td>页面文件夹路径，一般是 src/views、src/pages</td><td>string[可选]</td></tr><tr><td>showDeleted</td><td>是否展示对已删除文件引用的文件列表</td><td>boolean[可选]</td></tr></tbody></table><h3 id="发包注意事项" tabindex="-1">发包注意事项 <a class="header-anchor" href="#发包注意事项" aria-label="Permalink to &quot;发包注意事项&quot;">​</a></h3><ul><li>发包后<code>__dirname</code>指向的是<code>node_modules/xxx/vite-plugin-shared/dist</code>；因此代码中使用<code>process.cwd()</code>获取终端运行路径，因为我们是在起<code>serve</code>的时候运行</li><li><code>chalk</code>依赖的问题 <ul><li>直接使用<code>node</code>的<code>chalk</code>，会存在相关方法不存在的情况</li><li>使用<code>pnpm</code>安装，要注意版本，因为<code>chalk5.x</code>开始是<code>ESM</code>，推荐使用<code>4.1.2</code></li></ul></li><li>每次发包要修改<code>version</code></li></ul><h3 id="future-feature" tabindex="-1">future feature <a class="header-anchor" href="#future-feature" aria-label="Permalink to &quot;future feature&quot;">​</a></h3><ul><li><p>[x] 建立<code>Monorepo</code>规范的仓库，最终集合在私服来解决更新的问题</p><p>我们目前这个代码是放在了项目的根目录中(因为还在<code>beta</code>阶段)，因此后续工具代码更新成为了一个大问题</p></li><li><p>[ ] 自己实现文件监听系统的重命名事件，并实现对文件中的引用命名自动修改(类似 volar 插件的功能)</p></li></ul><p><img src="https://raw.githubusercontent.com/GauharChan/Picture-bed/main/img/image-20230227154033391.png" alt="image-20230227154033391"></p><p>目前有个痛点是，我们抛出的成员名称是以<code>文件夹+文件名</code>命名的，<code>assets</code>原有的<code>ts</code>文件一旦重命名，那么成员的名称将会变更，同时页面中的引用需要我们手动更改</p><p><code>chokidar</code>没有提供重命名的事件监听</p>`,67),r=[e,t,c];function y(F,E,i,d,C,h){return a(),l("div",null,r)}const A=n(o,[["render",y]]);export{D as __pageData,A as default};
