import{_ as s,o as a,c as e,V as p}from"./chunks/framework.c6d8cbec.js";const u=JSON.parse('{"title":"Restful 接口","description":"","frontmatter":{},"headers":[],"relativePath":"java/其它/前端/restful.md","filePath":"java/其它/前端/restful.md"}'),l={name:"java/其它/前端/restful.md"},n=p(`<h1 id="restful-接口" tabindex="-1">Restful 接口 <a class="header-anchor" href="#restful-接口" aria-label="Permalink to &quot;Restful 接口&quot;">​</a></h1><p>设计项目资源的 URL</p><p><strong>资源定位</strong></p><p>资源集合用一个 URL ，具体某个资源用一个 URL。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">/employees</span><span style="color:#F6F6F4;">         </span><span style="color:#7B7F8B;"># 资源集合的URL</span></span>
<span class="line"><span style="color:#62E884;">/employees/56</span><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;"># 具体某个资源的URL</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">/employees</span><span style="color:#24292E;">         </span><span style="color:#6A737D;"># 资源集合的URL</span></span>
<span class="line"><span style="color:#6F42C1;">/employees/56</span><span style="color:#24292E;">      </span><span style="color:#6A737D;"># 具体某个资源的URL</span></span></code></pre></div><p><strong>资源请求</strong></p><p>使用四种 HTTP 方法可以提供CRUD功能：</p><ul><li>获取：使用GET方法获取资源。</li><li>创建：使用POST创建新的资源。</li><li>更新：使用PUT更新现有资源。（和 POST 近似）</li><li>删除：使用DELETE删除现有资源。（和 GET 近似）</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">[GET] /employees           </span><span style="color:#7B7F8B;"># 获取全部雇员信息</span></span>
<span class="line"><span style="color:#F6F6F4;">[GET] /employees/56        </span><span style="color:#7B7F8B;"># 获取指定雇员信息</span></span>
<span class="line"><span style="color:#F6F6F4;">[POST] /employees          </span><span style="color:#7B7F8B;"># 提交雇员信息</span></span>
<span class="line"><span style="color:#F6F6F4;">[PUT] /employees/56        </span><span style="color:#7B7F8B;"># 修改指定雇员信息</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[GET] /employees           </span><span style="color:#6A737D;"># 获取全部雇员信息</span></span>
<span class="line"><span style="color:#24292E;">[GET] /employees/56        </span><span style="color:#6A737D;"># 获取指定雇员信息</span></span>
<span class="line"><span style="color:#24292E;">[POST] /employees          </span><span style="color:#6A737D;"># 提交雇员信息</span></span>
<span class="line"><span style="color:#24292E;">[PUT] /employees/56        </span><span style="color:#6A737D;"># 修改指定雇员信息</span></span></code></pre></div><p><strong>请求参数</strong></p><p>可选的、复杂的参数用查询字符串表示。 使用小驼峰命名法作为属性标识符。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">GET</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">/employees?state=external</span></span>
<span class="line"><span style="color:#62E884;">GET</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">/employees?state=internal</span><span style="color:#F6F6F4;">&amp;</span><span style="color:#BF9EEE;">maturity</span><span style="color:#F286C4;">=</span><span style="color:#E7EE98;">senior</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">GET</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/employees?state=external</span></span>
<span class="line"><span style="color:#6F42C1;">GET</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/employees?state=internal</span><span style="color:#24292E;">&amp;maturity</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">senior</span></span></code></pre></div><p><strong>返回状态码</strong></p><p>RESTful Web服务应使用合适的HTTP状态码来响应客户端请求</p><p>2xx - 成功 - 一切都很好 4xx - 客户端错误 - 如果客户端发生错误（例如客户端发送无效请求或未被授权） 5xx – 服务器错误 - 如果服务器发生错误（例如，尝试处理请求时出错）</p><p>除了合适的状态码之外，还应该在HTTP响应正文中提供有用的错误提示和详细的描述。这是一个例子。请求：</p>`,16),o=[n];function t(c,r,i,y,d,F){return a(),e("div",null,o)}const h=s(l,[["render",t]]);export{u as __pageData,h as default};
