import{_ as o,o as a,c as r,V as e}from"./chunks/framework.c6d8cbec.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/spring/spring-21.md","filePath":"interview/backend/spring/spring-21.md"}'),t={name:"interview/backend/spring/spring-21.md"},n=e(`<h3 id="_1、什么是-spring-配置文件" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#1%E4%BB%80%E4%B9%88%E6%98%AF-spring-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" target="_blank" rel="noreferrer">1、什么是 Spring 配置文件？</a> <a class="header-anchor" href="#_1、什么是-spring-配置文件" aria-label="Permalink to &quot;[1、什么是 Spring 配置文件？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题及答案整理，汇总版.md#1什么是-spring-配置文件)&quot;">​</a></h3><p>Spring 配置文件是 XML 文件。 该文件主要包含类信息。 它描述了这些类是如何配置以及相互引入的。 但是，XML 配置文件冗长且更加干净。 如果没有正确规划和编写，那么在大项目中管理变得非常困难。</p><h3 id="_2、保护-springboot-应用有哪些方法" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#2%E4%BF%9D%E6%8A%A4-springboot-%E5%BA%94%E7%94%A8%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95" target="_blank" rel="noreferrer">2、保护 SpringBoot 应用有哪些方法？</a> <a class="header-anchor" href="#_2、保护-springboot-应用有哪些方法" aria-label="Permalink to &quot;[2、保护 SpringBoot 应用有哪些方法？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题及答案整理，汇总版.md#2保护-springboot-应用有哪些方法)&quot;">​</a></h3><p><strong>1、</strong> 在生产中使用HTTPS</p><p><strong>2、</strong> 使用Snyk检查你的依赖关系</p><p><strong>3、</strong> 升级到最新版本</p><p><strong>4、</strong> 启用CSRF保护</p><p><strong>5、</strong> 使用内容安全策略防止XSS攻击</p><h3 id="_3、-restcontroller和-controller的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#3@restcontroller%E5%92%8C@controller%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">3、@RestController和@Controller的区别</a> <a class="header-anchor" href="#_3、-restcontroller和-controller的区别" aria-label="Permalink to &quot;[3、@RestController和@Controller的区别](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题及答案整理，汇总版.md#3@restcontroller和@controller的区别)&quot;">​</a></h3><p>共同点：①都是加在类级别上的 ②都可以处理http请求</p><p>区 别：@RestController是@Controller和@ResponseBody的结合体</p><h3 id="_4、如何启用-禁用执行器" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#4%E5%A6%82%E4%BD%95%E5%90%AF%E7%94%A8/%E7%A6%81%E7%94%A8%E6%89%A7%E8%A1%8C%E5%99%A8" target="_blank" rel="noreferrer">4、如何启用/禁用执行器？</a> <a class="header-anchor" href="#_4、如何启用-禁用执行器" aria-label="Permalink to &quot;[4、如何启用/禁用执行器？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题及答案整理，汇总版.md#4如何启用/禁用执行器)&quot;">​</a></h3><p>启用/禁用致动器很容易；最简单的方法是使特性能够将依赖项(Maven/Gradle)添加到spring-boot-starter-actuator，即启动器。如果不想启用致动器，那么就不要添加依赖项。</p><p>Maven依赖项：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;dependencies&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;dependency&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">        &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;/dependency&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/dependencies&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;dependencies&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;dependency&gt;</span></span>
<span class="line"><span style="color:#24292e;">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span style="color:#24292e;">        &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;/dependency&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/dependencies&gt;</span></span></code></pre></div><h3 id="_5、-loadbalanced注解的作用" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#5@loadbalanced%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%9C%E7%94%A8" target="_blank" rel="noreferrer">5、@LoadBalanced注解的作用</a> <a class="header-anchor" href="#_5、-loadbalanced注解的作用" aria-label="Permalink to &quot;[5、@LoadBalanced注解的作用](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题及答案整理，汇总版.md#5@loadbalanced注解的作用)&quot;">​</a></h3><p>开启客户端负载均衡。</p><h3 id="_6、springboot-的核心配置文件有哪几个-它们的区别是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#6springboot-%E7%9A%84%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%9C%89%E5%93%AA%E5%87%A0%E4%B8%AA%E5%AE%83%E4%BB%AC%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">6、SpringBoot 的核心配置文件有哪几个？它们的区别是什么？</a> <a class="header-anchor" href="#_6、springboot-的核心配置文件有哪几个-它们的区别是什么" aria-label="Permalink to &quot;[6、SpringBoot 的核心配置文件有哪几个？它们的区别是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题及答案整理，汇总版.md#6springboot-的核心配置文件有哪几个它们的区别是什么)&quot;">​</a></h3><p><strong>1、</strong> SpringBoot 的核心配置文件是 application 和 bootstrap 配置文件。</p><p><strong>2、</strong> application 配置文件这个容易了解，主要用于 SpringBoot 项目的自动化配置。</p><p><strong>3、</strong> bootstrap 配置文件有以下几个应用场景。</p><p><strong>4、</strong> 使用 Spring Cloud Config 配置中心时，这时需要在 bootstrap 配置文件中增加连接到配置中心的配置属性来加载外部配置中心的配置信息；</p><p><strong>5、</strong> 少量固定的不能被覆盖的属性；</p><p><strong>6、</strong> 少量加密/解密的场景；</p><h3 id="_7、spring-boot-核心的两个配置文件" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#7spring-boot-%E6%A0%B8%E5%BF%83%E7%9A%84%E4%B8%A4%E4%B8%AA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%9A" target="_blank" rel="noreferrer">7、spring boot 核心的两个配置文件：</a> <a class="header-anchor" href="#_7、spring-boot-核心的两个配置文件" aria-label="Permalink to &quot;[7、spring boot 核心的两个配置文件：](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题及答案整理，汇总版.md#7spring-boot-核心的两个配置文件：)&quot;">​</a></h3><p><strong>1、</strong> bootstrap (.yml 或.properties)：boostrap 由父 ApplicationContext 加载的，比 applicaton 优先加载，配置在应用程序上下文的引导阶段生效。一般来说我们在 Spring Cloud Config 或者 Nacos 中会用到它。且 boostrap 里面的属性不能被覆盖；</p><p><strong>2、</strong> application (. yml 或者 . properties)：由ApplicatonContext 加载，用于 spring boot 项目的自动化配置。</p><h3 id="_8、为什么需要域驱动设计-ddd" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#8%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1ddd" target="_blank" rel="noreferrer">8、为什么需要域驱动设计（DDD）？</a> <a class="header-anchor" href="#_8、为什么需要域驱动设计-ddd" aria-label="Permalink to &quot;[8、为什么需要域驱动设计（DDD）？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题及答案整理，汇总版.md#8为什么需要域驱动设计ddd)&quot;">​</a></h3><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0816/01/img_11.png#alt=img%5C_11.png" alt=""></p><p>图9：我们需要DDD的因素 – 微服务面试问题</p><h3 id="_9、解释对象-关系映射集成模块。" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#9%E8%A7%A3%E9%87%8A%E5%AF%B9%E8%B1%A1/%E5%85%B3%E7%B3%BB%E6%98%A0%E5%B0%84%E9%9B%86%E6%88%90%E6%A8%A1%E5%9D%97%E3%80%82" target="_blank" rel="noreferrer">9、解释对象/关系映射集成模块。</a> <a class="header-anchor" href="#_9、解释对象-关系映射集成模块。" aria-label="Permalink to &quot;[9、解释对象/关系映射集成模块。](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题及答案整理，汇总版.md#9解释对象/关系映射集成模块。)&quot;">​</a></h3><p>Spring 通过提供ORM模块，支持我们在直接JDBC之上使用一个对象/关系映射映射(ORM)工具，Spring 支持集成主流的ORM框架，如Hiberate,JDO和 iBATIS SQL Maps。Spring的事务管理同样支持以上所有ORM框架及JDBC。</p><h3 id="_10、如何在-springboot中禁用-actuator端点安全性" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#10%E5%A6%82%E4%BD%95%E5%9C%A8-springboot%E4%B8%AD%E7%A6%81%E7%94%A8-actuator%E7%AB%AF%E7%82%B9%E5%AE%89%E5%85%A8%E6%80%A7" target="_blank" rel="noreferrer">10、如何在 SpringBoot中禁用 Actuator端点安全性?</a> <a class="header-anchor" href="#_10、如何在-springboot中禁用-actuator端点安全性" aria-label="Permalink to &quot;[10、如何在 SpringBoot中禁用 Actuator端点安全性?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题及答案整理，汇总版.md#10如何在-springboot中禁用-actuator端点安全性)&quot;">​</a></h3><p>默认情况下，所有敏感的HTTP端点都是安全的，只有具有 <code>http ACTUATOR</code>角色的用户才能访问它们。安全性是使用标准的 <code>httpservletrequest. isuserinrole..isusernrole</code>方法实施的。可以使用 <code>management. security. enabled= false</code>来禁用安全性。只有在执行机构端点在防火墙后访问时，才建议禁用安全性。</p><h3 id="_11、什么是有界上下文" tabindex="-1">11、什么是有界上下文？ <a class="header-anchor" href="#_11、什么是有界上下文" aria-label="Permalink to &quot;11、什么是有界上下文？&quot;">​</a></h3><h3 id="_12、什么是spring" tabindex="-1">12、什么是spring? <a class="header-anchor" href="#_12、什么是spring" aria-label="Permalink to &quot;12、什么是spring?&quot;">​</a></h3><h3 id="_13、您使用了哪些-starter-maven-依赖项" tabindex="-1">13、您使用了哪些 starter maven 依赖项？ <a class="header-anchor" href="#_13、您使用了哪些-starter-maven-依赖项" aria-label="Permalink to &quot;13、您使用了哪些 starter maven 依赖项？&quot;">​</a></h3><h3 id="_14、spring-cloud-security" tabindex="-1">14、Spring Cloud Security <a class="header-anchor" href="#_14、spring-cloud-security" aria-label="Permalink to &quot;14、Spring Cloud Security&quot;">​</a></h3><h3 id="_15、springboot的配置文件有哪几种格式-区别是什么" tabindex="-1">15、SpringBoot的配置文件有哪几种格式？区别是什么？ <a class="header-anchor" href="#_15、springboot的配置文件有哪几种格式-区别是什么" aria-label="Permalink to &quot;15、SpringBoot的配置文件有哪几种格式？区别是什么？&quot;">​</a></h3><h3 id="_16、spring-中有多少种-ioc-容器" tabindex="-1">16、spring 中有多少种 IOC 容器？ <a class="header-anchor" href="#_16、spring-中有多少种-ioc-容器" aria-label="Permalink to &quot;16、spring 中有多少种 IOC 容器？&quot;">​</a></h3><h3 id="_17、什么是spring-cloud-zuul-服务网关" tabindex="-1">17、什么是Spring Cloud Zuul（服务网关） <a class="header-anchor" href="#_17、什么是spring-cloud-zuul-服务网关" aria-label="Permalink to &quot;17、什么是Spring Cloud Zuul（服务网关）&quot;">​</a></h3><h3 id="_18、springboot中的监视器是什么" tabindex="-1">18、SpringBoot中的监视器是什么？ <a class="header-anchor" href="#_18、springboot中的监视器是什么" aria-label="Permalink to &quot;18、SpringBoot中的监视器是什么？&quot;">​</a></h3><h3 id="_19、pact在微服务架构中的用途是什么" tabindex="-1">19、PACT在微服务架构中的用途是什么？ <a class="header-anchor" href="#_19、pact在微服务架构中的用途是什么" aria-label="Permalink to &quot;19、PACT在微服务架构中的用途是什么？&quot;">​</a></h3><h3 id="_20、什么是spring引导的执行器" tabindex="-1">20、什么是Spring引导的执行器？ <a class="header-anchor" href="#_20、什么是spring引导的执行器" aria-label="Permalink to &quot;20、什么是Spring引导的执行器？&quot;">​</a></h3><h3 id="_21、什么是spring-ioc-容器" tabindex="-1">21、什么是Spring IOC 容器？ <a class="header-anchor" href="#_21、什么是spring-ioc-容器" aria-label="Permalink to &quot;21、什么是Spring IOC 容器？&quot;">​</a></h3><h3 id="_22、springboot中的监视器是什么" tabindex="-1">22、SpringBoot中的监视器是什么? <a class="header-anchor" href="#_22、springboot中的监视器是什么" aria-label="Permalink to &quot;22、SpringBoot中的监视器是什么?&quot;">​</a></h3><h3 id="_23、spring-framework-中有多少个模块-它们分别是什么" tabindex="-1">23、Spring Framework 中有多少个模块，它们分别是什么？ <a class="header-anchor" href="#_23、spring-framework-中有多少个模块-它们分别是什么" aria-label="Permalink to &quot;23、Spring Framework 中有多少个模块，它们分别是什么？&quot;">​</a></h3><h3 id="_24、-springbootapplication注释在内部有什么用处" tabindex="-1">24、@SpringBootApplication注释在内部有什么用处? <a class="header-anchor" href="#_24、-springbootapplication注释在内部有什么用处" aria-label="Permalink to &quot;24、@SpringBootApplication注释在内部有什么用处?&quot;">​</a></h3><h3 id="_25、springboot多数据源事务如何管理" tabindex="-1">25、SpringBoot多数据源事务如何管理 <a class="header-anchor" href="#_25、springboot多数据源事务如何管理" aria-label="Permalink to &quot;25、SpringBoot多数据源事务如何管理&quot;">​</a></h3><h3 id="_26、spring-bean-容器的生命周期是什么样的" tabindex="-1">26、spring bean 容器的生命周期是什么样的？ <a class="header-anchor" href="#_26、spring-bean-容器的生命周期是什么样的" aria-label="Permalink to &quot;26、spring bean 容器的生命周期是什么样的？&quot;">​</a></h3><h3 id="_27、什么是-spring-ioc-容器" tabindex="-1">27、什么是 Spring IOC 容器？ <a class="header-anchor" href="#_27、什么是-spring-ioc-容器" aria-label="Permalink to &quot;27、什么是 Spring IOC 容器？&quot;">​</a></h3><h3 id="_28、actuator在springboot中的作用" tabindex="-1">28、Actuator在SpringBoot中的作用 <a class="header-anchor" href="#_28、actuator在springboot中的作用" aria-label="Permalink to &quot;28、Actuator在SpringBoot中的作用&quot;">​</a></h3><h3 id="_29、什么是凝聚力" tabindex="-1">29、什么是凝聚力？ <a class="header-anchor" href="#_29、什么是凝聚力" aria-label="Permalink to &quot;29、什么是凝聚力？&quot;">​</a></h3><h3 id="_30、如何在-springboot-中禁用-actuator-端点安全性" tabindex="-1">30、如何在 SpringBoot 中禁用 Actuator 端点安全性？ <a class="header-anchor" href="#_30、如何在-springboot-中禁用-actuator-端点安全性" aria-label="Permalink to &quot;30、如何在 SpringBoot 中禁用 Actuator 端点安全性？&quot;">​</a></h3><h3 id="_31、springboot事物的使用" tabindex="-1">31、SpringBoot事物的使用 <a class="header-anchor" href="#_31、springboot事物的使用" aria-label="Permalink to &quot;31、SpringBoot事物的使用&quot;">​</a></h3>`,55),s=[n];function i(p,l,g,E,c,d){return a(),r("div",null,s)}const b=o(t,[["render",i]]);export{u as __pageData,b as default};
