import{_ as s,o as n,c as a,V as l}from"./chunks/framework.c6d8cbec.js";const C=JSON.parse('{"title":"为什么Java字符串String是不可变的？","description":"本文深入探讨了Java String 类的不可变性及其背后的设计原则。我们将了解不可变字符串如何提高代码的安全性、性能和可维护性，以及为什么Java选择了这种设计。探索String类的内部实现，理解为何Java字符串是不可变的。","frontmatter":{"title":"为什么Java字符串String是不可变的？","shortTitle":"String为什么不可变","category":["Java核心"],"tag":["数组&字符串"],"description":"本文深入探讨了Java String 类的不可变性及其背后的设计原则。我们将了解不可变字符串如何提高代码的安全性、性能和可维护性，以及为什么Java选择了这种设计。探索String类的内部实现，理解为何Java字符串是不可变的。","head":[["meta",{"name":"keywords","content":"Java, String, 不可变, 字符串"}]]},"headers":[],"relativePath":"backend/tobetter/string/immutable.md","filePath":"backend/tobetter/string/immutable.md"}'),p={name:"backend/tobetter/string/immutable.md"},o=l("",30),e=[o];function t(c,r,y,F,i,E){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{C as __pageData,d as default};
