import{_ as a,H as n,o as l,c as p,J as o,V as e}from"./chunks/framework.c6d8cbec.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/vue/webpack.md","filePath":"frontend/vue/webpack.md"}'),c={name:"frontend/vue/webpack.md"},t=e(`<h2 id="项目中安装webpack" tabindex="-1">项目中安装<code>webpack</code> <a class="header-anchor" href="#项目中安装webpack" aria-label="Permalink to &quot;项目中安装\`webpack\`&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">webpack</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">webpack-cli</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">webpack</span><span style="color:#24292E;"> </span><span style="color:#032F62;">webpack-cli</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><h2 id="项目中使用webpack" tabindex="-1">项目中使用<code>webpack</code> <a class="header-anchor" href="#项目中使用webpack" aria-label="Permalink to &quot;项目中使用\`webpack\`&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npx</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">webpack</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">webpack</span></span></code></pre></div><h2 id="npx-运行原理" tabindex="-1">npx 运行原理 <a class="header-anchor" href="#npx-运行原理" aria-label="Permalink to &quot;npx 运行原理&quot;">​</a></h2><p><strong>在项目的依赖包<code>node_modules</code>中的<code>bin</code>目录下执行<code>webpack.cmd</code>，然后判断如果不是全局安装的<code>webpack</code>在执行依赖包下的<code>webpack</code>的<code>bin</code>的<code>webpack.js</code></strong></p><p><img src="https://raw.githubusercontent.com/GauharChan/Picture-bed/main/img/image-20191220103028428.png" alt="image-20191220103028428"></p><p><img src="https://raw.githubusercontent.com/GauharChan/Picture-bed/main/img/image-20191220102628023.png" alt="image-20191220102628023"></p><h3 id="零配置打包" tabindex="-1">零配置打包 <a class="header-anchor" href="#零配置打包" aria-label="Permalink to &quot;零配置打包&quot;">​</a></h3><blockquote><p>使用默认配置打包，必须遵循指定文件路径，文件名</p><p>默认打包项目中<code>src</code>目录下的<code>index.js</code>，输出<code>dist</code>目录，<code>dist</code>中有<code>main.js</code></p></blockquote><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><h3 id="webpack-config-js" tabindex="-1">webpack.config.js <a class="header-anchor" href="#webpack-config-js" aria-label="Permalink to &quot;webpack.config.js&quot;">​</a></h3><blockquote><p>或者叫 webpackfile.js</p></blockquote><p>在<code>node_modules</code>下的<code>webpack-cli</code>下的<code>bin</code>，<code>config</code>的<code>config-yargs.js</code>中的<code>.options\`\`config</code>中的<code>defaultDescription</code>定义的名字</p><ol><li><p>入口(entry)</p></li><li><p>输出(output)</p></li><li><p>loader</p></li><li><p>插件(plugins) // 配置中带 s 的，都是数组</p></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> path </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">path</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> htmlPlugin </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">requiire</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">html-webpack-plugin</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">module</span><span style="color:#F6F6F4;">.</span><span style="color:#97E1F1;font-style:italic;">exports</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// mode: 1.development 开发模式 代码不压缩，   2.production(默认) 生产模式(上线) 代码压缩  3.none 去除默认，空</span></span>
<span class="line"><span style="color:#F6F6F4;">  mode</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">production</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  entry</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./src/index.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  output</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// path.resolve() 解析当前相对路径为绝对路径</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// path: path.resolve(__dirname, &#39;public&#39;),</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// path.join() 拼接路径</span></span>
<span class="line"><span style="color:#F6F6F4;">    path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> path.</span><span style="color:#62E884;">join</span><span style="color:#F6F6F4;">(__dirname, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dist</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">), </span><span style="color:#7B7F8B;">// 必须是绝对路径</span></span>
<span class="line"><span style="color:#F6F6F4;">    filename</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">main.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 输出文件名字</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// watch: true  // 开启监测模式  相当于--watch</span></span>
<span class="line"><span style="color:#F6F6F4;">  devServer</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// webpack-dev-server配置</span></span>
<span class="line"><span style="color:#F6F6F4;">    open</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    port</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">5000</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    compress</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 压缩</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// contentBase: &#39;./src&#39;,</span></span>
<span class="line"><span style="color:#F6F6F4;">    hot</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  plugins</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">htmlPlugin</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">      filename</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">index.html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 定义生成文件</span></span>
<span class="line"><span style="color:#F6F6F4;">      template</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./src/index.html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 模板文件</span></span>
<span class="line"><span style="color:#F6F6F4;">    }),</span></span>
<span class="line"><span style="color:#F6F6F4;">  ],</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;path&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">htmlPlugin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">requiire</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;html-webpack-plugin&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// mode: 1.development 开发模式 代码不压缩，   2.production(默认) 生产模式(上线) 代码压缩  3.none 去除默认，空</span></span>
<span class="line"><span style="color:#24292E;">  mode: </span><span style="color:#032F62;">&quot;production&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  entry: </span><span style="color:#032F62;">&quot;./src/index.js&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  output: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// path.resolve() 解析当前相对路径为绝对路径</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// path: path.resolve(__dirname, &#39;public&#39;),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// path.join() 拼接路径</span></span>
<span class="line"><span style="color:#24292E;">    path: path.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(__dirname, </span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// 必须是绝对路径</span></span>
<span class="line"><span style="color:#24292E;">    filename: </span><span style="color:#032F62;">&quot;main.js&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 输出文件名字</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// watch: true  // 开启监测模式  相当于--watch</span></span>
<span class="line"><span style="color:#24292E;">  devServer: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// webpack-dev-server配置</span></span>
<span class="line"><span style="color:#24292E;">    open: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    port: </span><span style="color:#005CC5;">5000</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    compress: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 压缩</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// contentBase: &#39;./src&#39;,</span></span>
<span class="line"><span style="color:#24292E;">    hot: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  plugins: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">htmlPlugin</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      filename: </span><span style="color:#032F62;">&quot;index.html&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 定义生成文件</span></span>
<span class="line"><span style="color:#24292E;">      template: </span><span style="color:#032F62;">&quot;./src/index.html&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 模板文件</span></span>
<span class="line"><span style="color:#24292E;">    }),</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>平时开发中，有可能有多个配置文件(开发，上线)，可以通过<code>--config + 文件名</code>调用不同的文件，建议写在<code>package.json</code>中。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">scripts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">test</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">echo </span><span style="color:#F286C4;">\\&quot;</span><span style="color:#E7EE98;">Error: no test specified</span><span style="color:#F286C4;">\\&quot;</span><span style="color:#E7EE98;"> &amp;&amp; exit 1</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">build</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">webpack</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// 这里不用加npx npm本身就会去执行node_modules下的文件</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">d-build</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">webpack --config webpack.development.js</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;test&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;echo </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">Error: no test specified</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> &amp;&amp; exit 1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;build&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;webpack&quot;</span><span style="color:#24292E;">,  </span><span style="color:#6A737D;">// 这里不用加npx npm本身就会去执行node_modules下的文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;d-build&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;webpack --config webpack.development.js&quot;</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><p>对应的执行不同的命令</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">run</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">run</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">d-build</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">d-build</span></span></code></pre></div><h3 id="自动编译" tabindex="-1">自动编译 <a class="header-anchor" href="#自动编译" aria-label="Permalink to &quot;自动编译&quot;">​</a></h3><ol><li>webpack&#39;s Watch Mode</li><li>webpack-dev-server</li><li>webpack-dev-middleware</li></ol><h4 id="watch" tabindex="-1">watch <a class="header-anchor" href="#watch" aria-label="Permalink to &quot;watch&quot;">​</a></h4><blockquote><p>自动检测文件，打包，网页中需要手动刷新</p></blockquote><p>以<code>cli</code>的方式设置<code>watch</code>参数</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">watch</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">webpack --watch</span><span style="color:#DEE492;">&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;watch&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;webpack --watch&quot;</span></span></code></pre></div><p>在<code>webpack.config.js</code>中设置<code>watch</code>属性为<code>true</code>也是同样的效果</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">watch: </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">watch</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span></code></pre></div><h4 id="webpack-dev-server" tabindex="-1">webpack-dev-server <a class="header-anchor" href="#webpack-dev-server" aria-label="Permalink to &quot;webpack-dev-server&quot;">​</a></h4><blockquote><p>需要安装</p><p>开启一个本地<code>express</code>服务器，托管在项目的根目录，自动打包，刷新网页</p></blockquote><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">webpack-dev-server</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">webpack-dev-server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><p>运行，同样设置在<code>package.json</code> 文件中，<code>--port</code> 设置端口 <code>--hot</code>热更替，更新修改部分</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dev</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">webpack-dev-server --hot --open --port 1234</span><span style="color:#DEE492;">&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;dev&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;webpack-dev-server --hot --open --port 1234&quot;</span></span></code></pre></div><p><strong>注意：<strong>webpack-dev-server 执行后，文件生成在内存中，需要引用服务器的文件地址，所以需要更改<code>index.html</code>中引用 js 的路径。如：<code>/main.js</code>，注意是</strong>根目录</strong>.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">src</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/main.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;&lt;/</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;/main.js&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>指定访问目录，有时候，我们的 index.html 不在根目录下</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dev</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">webpack-dev-server --open --contentBase ./src</span><span style="color:#DEE492;">&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;dev&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;webpack-dev-server --open --contentBase ./src&quot;</span></span></code></pre></div><h4 id="html-插件" tabindex="-1">html 插件 <a class="header-anchor" href="#html-插件" aria-label="Permalink to &quot;html 插件&quot;">​</a></h4><p><code>npm i html-webpack-plugin -D</code></p><ol><li>devServer 时根据模板在 express 项目根目录下生成 html 文件(类似于 devServer 生成内存中的 main.js)</li><li>devServer 时自动引入 main.js</li><li>打包时会自动生成 index.html</li></ol><h3 id="loader" tabindex="-1">loader <a class="header-anchor" href="#loader" aria-label="Permalink to &quot;loader&quot;">​</a></h3><h4 id="css" tabindex="-1">css <a class="header-anchor" href="#css" aria-label="Permalink to &quot;css&quot;">​</a></h4><p>在输入文件<code>main.js</code>中<code>import</code>引入<code>css</code>文件，报错提示需要<code>loader</code></p><p>下载 loader，-D 开发的时候用</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">css-loader</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">style-loader</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">css-loader</span><span style="color:#24292E;"> </span><span style="color:#032F62;">style-loader</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><p>在配置文件<code>webpack.config.js</code>中加入配置代码</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">module: {</span></span>
<span class="line"><span style="color:#F6F6F4;">  rules: [</span></span>
<span class="line"><span style="color:#F6F6F4;">    {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// 处理css文件</span></span>
<span class="line"><span style="color:#F6F6F4;">      test</span><span style="color:#F286C4;">:</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">\\.css</span><span style="color:#F286C4;">$</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// webpack 读取loader的时候，从右到左</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// loader执行顺序是从右到左管道方式链式调用</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// css-loader：解析css文件</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// style-loader：将解析的结果写入html中，使其生效</span></span>
<span class="line"><span style="color:#F6F6F4;">      use</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">style-loader</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">css-loader</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  ];</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">module</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">rules</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 处理css文件</span></span>
<span class="line"><span style="color:#24292E;">      test:</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">css</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// webpack 读取loader的时候，从右到左</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// loader执行顺序是从右到左管道方式链式调用</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// css-loader：解析css文件</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// style-loader：将解析的结果写入html中，使其生效</span></span>
<span class="line"><span style="color:#24292E;">      use: [</span><span style="color:#032F62;">&quot;style-loader&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;css-loader&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  ];</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="less" tabindex="-1">less <a class="header-anchor" href="#less" aria-label="Permalink to &quot;less&quot;">​</a></h4><p>下载处理<code>less</code>对应的<code>loader</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">less</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">less-loader</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">less</span><span style="color:#24292E;"> </span><span style="color:#032F62;">less-loader</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><p>配置文件，在<code>rules</code>中添加</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  test:</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">\\.less</span><span style="color:#F286C4;">$</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 依赖&#39;style-loader&#39;,&#39;css-loader&#39;这两个loader</span></span>
<span class="line"><span style="color:#F6F6F4;">  use: [</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">style-loader</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">css-loader</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">less-loader</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">:</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">less</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 依赖&#39;style-loader&#39;,&#39;css-loader&#39;这两个loader</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;style-loader&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;css-loader&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;less-loader&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="sass" tabindex="-1">sass <a class="header-anchor" href="#sass" aria-label="Permalink to &quot;sass&quot;">​</a></h4><p>下载处理<code>sass</code>对应的<code>loader</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">node-sass</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">sass-loader</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node-sass</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sass-loader</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><p>配置文件，在<code>rules</code>中添加</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  test:</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">\\.s</span><span style="color:#FFB86C;">(</span><span style="color:#E7EE98;">a</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">c</span><span style="color:#FFB86C;">)</span><span style="color:#E7EE98;">ss</span><span style="color:#F286C4;">$</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 依赖&#39;style-loader&#39;,&#39;css-loader&#39;这两个loader</span></span>
<span class="line"><span style="color:#F6F6F4;">    use: [</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">style-loader</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">css-loader</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">sass-loader</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">:</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">s(a</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">c)ss</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 依赖&#39;style-loader&#39;,&#39;css-loader&#39;这两个loader</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;style-loader&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;css-loader&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;sass-loader&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><h4 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">​</a></h4><p>下载对应的<code>loader</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">file-loader</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file-loader</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><p>配置文件，在<code>rules</code>中添加</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 图片</span></span>
<span class="line"><span style="color:#F6F6F4;">  test:</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">\\.</span><span style="color:#FFB86C;">(</span><span style="color:#E7EE98;">jpg</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">png</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">gif</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">jpeg</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">bmp</span><span style="color:#FFB86C;">)</span><span style="color:#F286C4;">$</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    use: </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">file-loader</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 图片</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">:</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">(jpg</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">png</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">gif</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">jpeg</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">bmp)</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;file-loader&#39;</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><h4 id="字体图标" tabindex="-1">字体图标 <a class="header-anchor" href="#字体图标" aria-label="Permalink to &quot;字体图标&quot;">​</a></h4><p>在<code>main.js</code>引入 css</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 引入bootstrap</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">bootstrap/dist/css/bootstrap.css</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 引入bootstrap</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;bootstrap/dist/css/bootstrap.css&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>配置文件，在<code>rules</code>中添加</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 字体图标</span></span>
<span class="line"><span style="color:#F6F6F4;">  test:</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">\\.</span><span style="color:#FFB86C;">(</span><span style="color:#E7EE98;">ttf</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">woff2</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">woff</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">eot</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">svg</span><span style="color:#FFB86C;">)</span><span style="color:#F286C4;">$</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  use: </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">file-loader</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 字体图标</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">:</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">(ttf</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">woff2</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">woff</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">eot</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">svg)</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;file-loader&#39;</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><p>html</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">  &lt;</span><span style="color:#F286C4;">span</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">class</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">glyphicon glyphicon-heart</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;&lt;/</span><span style="color:#F286C4;">span</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">span</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;glyphicon glyphicon-heart&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">span</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h5 id="url-loader" tabindex="-1">url-loader <a class="header-anchor" href="#url-loader" aria-label="Permalink to &quot;url-loader&quot;">​</a></h5><blockquote><p>更高级的 loader，封装了<code>file-loader</code>所以需要下载<code>file-loader</code>一起使用</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">url-loader</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">url-loader</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><p>可以设置，图片小于多少的时候转换为 base64</p><p>limit 一般会控制在 5kb，因为图片越大，base64 占用越大，超过 5kb，使用 web 链接加载</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 图片</span></span>
<span class="line"><span style="color:#F6F6F4;">  test:</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">\\.</span><span style="color:#FFB86C;">(</span><span style="color:#E7EE98;">jpg</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">png</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">gif</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">jpeg</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">bmp</span><span style="color:#FFB86C;">)</span><span style="color:#F286C4;">$</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    use: {</span></span>
<span class="line"><span style="color:#F6F6F4;">      loader:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">url-loader</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        options:{</span></span>
<span class="line"><span style="color:#F6F6F4;">          limit: </span><span style="color:#BF9EEE;">22</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1024</span><span style="color:#F6F6F4;">   </span><span style="color:#7B7F8B;">// 表示小于22k的图片，转换为base64地址</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 图片</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">:</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">(jpg</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">png</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">gif</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">jpeg</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">bmp)</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">loader</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;url-loader&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">options</span><span style="color:#24292E;">:{</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">22</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">   </span><span style="color:#6A737D;">// 表示小于22k的图片，转换为base64地址</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><p>还也可以指定图片存放的目录, 名字</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 图片</span></span>
<span class="line"><span style="color:#F6F6F4;">  test:</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">\\.</span><span style="color:#FFB86C;">(</span><span style="color:#E7EE98;">jpg</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">png</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">gif</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">jpeg</span><span style="color:#F286C4;">|</span><span style="color:#E7EE98;">bmp</span><span style="color:#FFB86C;">)</span><span style="color:#F286C4;">$</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    use: {</span></span>
<span class="line"><span style="color:#F6F6F4;">      loader:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">url-loader</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        options:{</span></span>
<span class="line"><span style="color:#F6F6F4;">          limit: </span><span style="color:#BF9EEE;">22</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1024</span><span style="color:#F6F6F4;">,   </span><span style="color:#7B7F8B;">// 表示小于22k的图片，转换为base64地址</span></span>
<span class="line"><span style="color:#F6F6F4;">          outputPath: </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">images</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 指定输出文件夹</span></span>
<span class="line"><span style="color:#F6F6F4;">          name: </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">[name]-[hash:4].[ext]</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 图片名字自定义格式： 保留源文件名字-哈希值的前4位.源文件后缀名</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 图片</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">:</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">(jpg</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">png</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">gif</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">jpeg</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">bmp)</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">loader</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;url-loader&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">options</span><span style="color:#24292E;">:{</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">22</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">,   </span><span style="color:#6A737D;">// 表示小于22k的图片，转换为base64地址</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">outputPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;images&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 指定输出文件夹</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;[name]-[hash:4].[ext]&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 图片名字自定义格式： 保留源文件名字-哈希值的前4位.源文件后缀名</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><h4 id="babel" tabindex="-1">babel <a class="header-anchor" href="#babel" aria-label="Permalink to &quot;babel&quot;">​</a></h4><p>安装<code>loader</code></p><p>@babel/core : 核心包</p><p>@babel/preset-env : 预设语法包，env:包含大部分 es6</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">babel-loader</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@babel/core</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@babel/preset-env</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">babel-loader</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@babel/core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@babel/preset-env</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><p>配置</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// babel</span></span>
<span class="line"><span style="color:#F6F6F4;">  test:</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">\\.js</span><span style="color:#F286C4;">$</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    use:{</span></span>
<span class="line"><span style="color:#F6F6F4;">      loader: </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">babel-loader</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        options:{</span></span>
<span class="line"><span style="color:#F6F6F4;">          presets:[</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@babel/env</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">          plugins:[</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@babel/plugin-proposal-class-properties</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">]  </span><span style="color:#7B7F8B;">// 使用插件</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// 排除打包文件</span></span>
<span class="line"><span style="color:#F6F6F4;">      exclude:</span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">node_moudles</span><span style="color:#EE6666;">/</span></span>
<span class="line"><span style="color:#F6F6F4;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// babel</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">:</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">js</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">:{</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">loader</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;babel-loader&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">options</span><span style="color:#24292E;">:{</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">presets</span><span style="color:#24292E;">:[</span><span style="color:#032F62;">&#39;@babel/env&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">plugins</span><span style="color:#24292E;">:[</span><span style="color:#032F62;">&#39;@babel/plugin-proposal-class-properties&#39;</span><span style="color:#24292E;">]  </span><span style="color:#6A737D;">// 使用插件</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 排除打包文件</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">exclude</span><span style="color:#24292E;">:</span><span style="color:#032F62;">/node_moudles/</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><p>当书写的代码是比较新的规范的时候，会处于编译不了的错误，一般会有提示，下哪个包，在 babel 官网插件中可以找到更多</p><p>如提示：Add @babel/plugin-proposal-class-properties (<a href="https://git.io/vb4SL" target="_blank" rel="noreferrer">https://git.io/vb4SL</a>) to the &#39;plugins&#39; section of your Babel config to enable transformation.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@babel/plugin-proposal-class-properties</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@babel/plugin-proposal-class-properties</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><p><strong>使用 Generator 函数的时候，babel 打包后，使用 regeneratorRuntime 来实现，但 babel 并没有内置这个，所以需要下载插件</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">--save-dev</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@babel/plugin-transform-runtime</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@babel/plugin-transform-runtime</span></span></code></pre></div><p>这个插件同时依赖<a href="https://babeljs.io/docs/en/babel-runtime" target="_blank" rel="noreferrer"><code>@babel/runtime</code></a>，同时要下载</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">--save</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@babel/runtime</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@babel/runtime</span></span></code></pre></div><p>官网更推荐使用<code>.babelrc</code>配置文件，每个工具应该有他自己独立的配置文件，<code>json格式</code></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">presets</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">@babel/env</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">plugins</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">@babel/plugin-proposal-class-properties</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// &quot;@babel/plugin-transform-runtime&quot;,</span></span>
<span class="line"><span style="color:#F6F6F4;">  ]</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;presets&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;@babel/env&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;plugins&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;@babel/plugin-proposal-class-properties&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// &quot;@babel/plugin-transform-runtime&quot;,</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>在使用 es6，es7 提供的对象，数组，字符串新增的方法的时候，因为 js 是动态语言，在代码中可以随时为对象添加方法。因此 babel 默认不会转换，需要下载<code>@babel/polyfill</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@babel/polyfill</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-S</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@babel/polyfill</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-S</span></span></code></pre></div><p>哪个文件需要，就在哪里引入</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> @babel/polyfill</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> @babel/polyfill</span></span></code></pre></div><h3 id="souce-map" tabindex="-1"><a href="https://webpack.docschina.org/configuration/devtool/" target="_blank" rel="noreferrer">souce-map</a> <a class="header-anchor" href="#souce-map" aria-label="Permalink to &quot;[souce-map](https://webpack.docschina.org/configuration/devtool/)&quot;">​</a></h3><p>通过 webpack 的 devtool 选项，配置哪一种。</p><p>定义 souce-map，开发调试更方便，展示源代码，如：打印位置能准确定位</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">devtool: </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">cheap-module-eval-source-map</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">devtool</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;cheap-module-eval-source-map&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div>`,101);function r(y,F,i,E,d,u){const s=n("Banner");return l(),p("div",null,[o(s),t])}const g=a(c,[["render",r]]);export{b as __pageData,g as default};
