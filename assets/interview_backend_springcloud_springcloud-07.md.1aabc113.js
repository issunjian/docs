import{_ as o,o as r,c as a,V as e}from"./chunks/framework.c6d8cbec.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/springcloud/springcloud-07.md","filePath":"interview/backend/springcloud/springcloud-07.md"}'),t={name:"interview/backend/springcloud/springcloud-07.md"},n=e('<h3 id="_1、为什么人们会犹豫使用微服务" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E9%99%84%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#1%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BA%BA%E4%BB%AC%E4%BC%9A%E7%8A%B9%E8%B1%AB%E4%BD%BF%E7%94%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1" target="_blank" rel="noreferrer">1、为什么人们会犹豫使用微服务？</a> <a class="header-anchor" href="#_1、为什么人们会犹豫使用微服务" aria-label="Permalink to &quot;[1、为什么人们会犹豫使用微服务？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题及答案附答案汇总.md#1为什么人们会犹豫使用微服务)&quot;">​</a></h3><p>我见过许多开发者在这个问题上摸索。毕竟，在面试微服务架构师角色时，他们会被问到这个问题，所以承认它的缺点可能有点棘手。以下是一些很好的答案：</p><p>它们需要大量协作 - 微服务需要大量的合作。不同的微服务模块，可能分散在不同的团队，团队之间需要始终保持良好的同步。</p><p>他们需要建立繁重的架构 - 系统是分布式的，架构涉及很多。 他们需要过多的计划来处理操作开销 - 如果您计划使用微服务架构，则需要为操作开销做好准备。 需要熟练的专业人员，他们可以支持异构分布的微服务。</p><h3 id="_2、spring-cloud-是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E9%99%84%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#2spring-cloud-%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">2、Spring Cloud 是什么</a> <a class="header-anchor" href="#_2、spring-cloud-是什么" aria-label="Permalink to &quot;[2、Spring Cloud 是什么](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题及答案附答案汇总.md#2spring-cloud-是什么)&quot;">​</a></h3><p><strong>1、</strong> Spring Cloud是一系列框架的有序集合。它利用SpringBoot的开发便利性巧妙地简化了分布式系统基础设施的开发，如服务发现注册、配置中心、智能路由、消息总线、负载均衡、断路器、数据监控等，都可以用SpringBoot的开发风格做到一键启动和部署。</p><p><strong>2、</strong> Spring Cloud并没有重复制造轮子，它只是将各家公司开发的比较成熟、经得起实际考验的服务框架组合起来，通过SpringBoot风格进行再封装屏蔽掉了复杂的配置和实现原理，最终给开发者留出了一套简单易懂、易部署和易维护的分布式系统开发工具包。</p><h3 id="_3、为什么需要域驱动设计-ddd" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E9%99%84%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#3%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1ddd" target="_blank" rel="noreferrer">3、为什么需要域驱动设计（DDD）？</a> <a class="header-anchor" href="#_3、为什么需要域驱动设计-ddd" aria-label="Permalink to &quot;[3、为什么需要域驱动设计（DDD）？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题及答案附答案汇总.md#3为什么需要域驱动设计ddd)&quot;">​</a></h3><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0816/01/img_11.png#alt=img%5C_11.png" alt=""></p><p>图9：我们需要DDD的因素 – 微服务面试问题</p><h3 id="_4、spring-cloud和springboot版本对应关系" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E9%99%84%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#4spring-cloud%E5%92%8Cspringboot%E7%89%88%E6%9C%AC%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB" target="_blank" rel="noreferrer">4、Spring Cloud和SpringBoot版本对应关系</a> <a class="header-anchor" href="#_4、spring-cloud和springboot版本对应关系" aria-label="Permalink to &quot;[4、Spring Cloud和SpringBoot版本对应关系](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题及答案附答案汇总.md#4spring-cloud和springboot版本对应关系)&quot;">​</a></h3><table><thead><tr><th>Spring Cloud Version</th><th>SpringBoot Version</th></tr></thead><tbody><tr><td>Hoxton</td><td>2.2.x</td></tr><tr><td>Greenwich</td><td>2.1.x</td></tr><tr><td>Finchley</td><td>2.0.x</td></tr><tr><td>Edgware</td><td>1.5.x</td></tr><tr><td>Dalston</td><td></td></tr></tbody></table><h3 id="_5、spring-cloud抛弃了dubbo-的rpc通信-采用的是基于http的rest方式。" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E9%99%84%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#5spring-cloud%E6%8A%9B%E5%BC%83%E4%BA%86dubbo-%E7%9A%84rpc%E9%80%9A%E4%BF%A1%E9%87%87%E7%94%A8%E7%9A%84%E6%98%AF%E5%9F%BA%E4%BA%8Ehttp%E7%9A%84rest%E6%96%B9%E5%BC%8F%E3%80%82" target="_blank" rel="noreferrer">5、Spring Cloud抛弃了Dubbo 的RPC通信，采用的是基于HTTP的REST方式。</a> <a class="header-anchor" href="#_5、spring-cloud抛弃了dubbo-的rpc通信-采用的是基于http的rest方式。" aria-label="Permalink to &quot;[5、Spring Cloud抛弃了Dubbo 的RPC通信，采用的是基于HTTP的REST方式。](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题及答案附答案汇总.md#5spring-cloud抛弃了dubbo-的rpc通信采用的是基于http的rest方式。)&quot;">​</a></h3><p>严格来说，这两种方式各有优劣。虽然在一定程度上来说，后者牺牲了服务调用的性能，但也避免了上面提到的原生RPC带来的问题。而且REST相比RPC更为灵活，服务提供方和调用方的依赖只依靠一纸契约，不存在代码级别的强依赖，这在强调快速演化的微服务环境下，显得更为合适。</p><h3 id="_6、什么是springboot" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E9%99%84%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#6%E4%BB%80%E4%B9%88%E6%98%AFspringboot" target="_blank" rel="noreferrer">6、什么是SpringBoot？</a> <a class="header-anchor" href="#_6、什么是springboot" aria-label="Permalink to &quot;[6、什么是SpringBoot？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题及答案附答案汇总.md#6什么是springboot)&quot;">​</a></h3><p>Spring boot是微服务面试问题的主要话题。 随着新功能的加入，Spring变得越来越复杂。无论何时启动新项目，都必须添加新的构建路径或Maven依赖项。简而言之，你需要从头开始做每件事。SpringBoot是一种帮助您避免所有代码配置的解决方案。</p><h3 id="_7、微服务有什么特点" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E9%99%84%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#7%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9C%89%E4%BB%80%E4%B9%88%E7%89%B9%E7%82%B9" target="_blank" rel="noreferrer">7、微服务有什么特点？</a> <a class="header-anchor" href="#_7、微服务有什么特点" aria-label="Permalink to &quot;[7、微服务有什么特点？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题及答案附答案汇总.md#7微服务有什么特点)&quot;">​</a></h3><p>您可以列出微服务的特征，如下所示：</p><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0816/01/img_9.png#alt=img%5C_9.png" alt=""></p><p>图7：微服务的特征 – 微服务访谈问题</p><h3 id="_8、什么是spring-cloud-bus" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E9%99%84%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#8%E4%BB%80%E4%B9%88%E6%98%AFspring-cloud-bus" target="_blank" rel="noreferrer">8、什么是Spring Cloud Bus?</a> <a class="header-anchor" href="#_8、什么是spring-cloud-bus" aria-label="Permalink to &quot;[8、什么是Spring Cloud Bus?](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题及答案附答案汇总.md#8什么是spring-cloud-bus)&quot;">​</a></h3><p>spring cloud bus 将分布式的节点用轻量的消息代理连接起来，它可以用于广播配置文件的更改或者服务直接的通讯，也可用于监控。</p><p>如果修改了配置文件，发送一次请求，所有的客户端便会重新读取配置文件。</p><p><strong>使用:</strong></p><p><strong>1、</strong> 添加依赖</p><p><strong>2、</strong> 配置rabbimq</p><h3 id="_9、springboot和springcloud认识" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E9%99%84%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#9springboot%E5%92%8Cspringcloud%E8%AE%A4%E8%AF%86" target="_blank" rel="noreferrer">9、SpringBoot和springcloud认识</a> <a class="header-anchor" href="#_9、springboot和springcloud认识" aria-label="Permalink to &quot;[9、SpringBoot和springcloud认识](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题及答案附答案汇总.md#9springboot和springcloud认识)&quot;">​</a></h3><p><strong>1、</strong> SpringBoot 是 Spring 的一套快速配置脚手架，可以基于SpringBoot 快速开发单个微服务，Spring Cloud是一个基于SpringBoot实现的云应用开发工具；</p><p><strong>2、</strong> SpringBoot专注于快速、方便集成的单个微服务个体，Spring Cloud关注全局的服务治理框架；</p><p><strong>3、</strong> SpringBoot使用了默认大于配置的理念，很多集成方案已经帮你选择好了，能不配置就不配置；</p><p><strong>4、</strong> Spring Cloud很大的一部分是基于SpringBoot来实现，可以不基于SpringBoot吗？不可以。</p><h3 id="_10、链路跟踪sleuth" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E9%99%84%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#10%E9%93%BE%E8%B7%AF%E8%B7%9F%E8%B8%AAsleuth" target="_blank" rel="noreferrer">10、链路跟踪Sleuth</a> <a class="header-anchor" href="#_10、链路跟踪sleuth" aria-label="Permalink to &quot;[10、链路跟踪Sleuth](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题及答案附答案汇总.md#10链路跟踪sleuth)&quot;">​</a></h3><p>当我们项目中引入Spring Cloud Sleuth后，每次链路请求都会添加一串追踪信息，格式是[server-name, main-traceId,sub-spanId,boolean]：</p><p><strong>1、</strong> server-name：服务结点名称。</p><p><strong>2、</strong> main-traceId：一条链路唯一的ID，为TraceID。</p><p><strong>3、</strong> sub-spanId：链路中每一环的ID，为SpanID。</p><p><strong>4、</strong> boolean：是否将信息输出到Zipkin等服务收集和展示。</p><p>Sleuth的实现是基于HTTP的，为了在数据的收集过程中不能影响到正常业务，Sleuth会在每个请求的Header上添加跟踪需求的重要信息。这样在数据收集时，只需要将Header上的相关信息发送给对应的图像工具即可，图像工具根据上传的数据，按照Span对应的逻辑进行分析、展示。</p><h3 id="_11、pact在微服务架构中的用途是什么" tabindex="-1">11、PACT在微服务架构中的用途是什么？ <a class="header-anchor" href="#_11、pact在微服务架构中的用途是什么" aria-label="Permalink to &quot;11、PACT在微服务架构中的用途是什么？&quot;">​</a></h3><h3 id="_12、如何配置springboot应用程序日志记录" tabindex="-1">12、如何配置SpringBoot应用程序日志记录？ <a class="header-anchor" href="#_12、如何配置springboot应用程序日志记录" aria-label="Permalink to &quot;12、如何配置SpringBoot应用程序日志记录？&quot;">​</a></h3><h3 id="_13、我们如何进行跨功能测试" tabindex="-1">13、我们如何进行跨功能测试？ <a class="header-anchor" href="#_13、我们如何进行跨功能测试" aria-label="Permalink to &quot;13、我们如何进行跨功能测试？&quot;">​</a></h3><h3 id="_14、rest-和rpc对比" tabindex="-1">14、REST 和RPC对比 <a class="header-anchor" href="#_14、rest-和rpc对比" aria-label="Permalink to &quot;14、REST 和RPC对比&quot;">​</a></h3><h3 id="_15、什么是金丝雀释放" tabindex="-1">15、什么是金丝雀释放？ <a class="header-anchor" href="#_15、什么是金丝雀释放" aria-label="Permalink to &quot;15、什么是金丝雀释放？&quot;">​</a></h3><h3 id="_16、双因素身份验证的凭据类型有哪些" tabindex="-1">16、双因素身份验证的凭据类型有哪些？ <a class="header-anchor" href="#_16、双因素身份验证的凭据类型有哪些" aria-label="Permalink to &quot;16、双因素身份验证的凭据类型有哪些？&quot;">​</a></h3><h3 id="_17、container在微服务中的用途是什么" tabindex="-1">17、Container在微服务中的用途是什么？ <a class="header-anchor" href="#_17、container在微服务中的用途是什么" aria-label="Permalink to &quot;17、Container在微服务中的用途是什么？&quot;">​</a></h3><h3 id="_18、spring-cloud-security" tabindex="-1">18、Spring Cloud Security <a class="header-anchor" href="#_18、spring-cloud-security" aria-label="Permalink to &quot;18、Spring Cloud Security&quot;">​</a></h3><h3 id="_19、eureka缓存机制" tabindex="-1">19、eureka缓存机制： <a class="header-anchor" href="#_19、eureka缓存机制" aria-label="Permalink to &quot;19、eureka缓存机制：&quot;">​</a></h3><h3 id="_20、谈谈服务雪崩效应" tabindex="-1">20、谈谈服务雪崩效应 <a class="header-anchor" href="#_20、谈谈服务雪崩效应" aria-label="Permalink to &quot;20、谈谈服务雪崩效应&quot;">​</a></h3><h3 id="_21、什么是无所不在的语言" tabindex="-1">21、什么是无所不在的语言？ <a class="header-anchor" href="#_21、什么是无所不在的语言" aria-label="Permalink to &quot;21、什么是无所不在的语言？&quot;">​</a></h3><h3 id="_22、第一层缓存" tabindex="-1">22、第一层缓存： <a class="header-anchor" href="#_22、第一层缓存" aria-label="Permalink to &quot;22、第一层缓存：&quot;">​</a></h3><h3 id="_23、soa和微服务架构之间的主要区别是什么" tabindex="-1">23、SOA和微服务架构之间的主要区别是什么？ <a class="header-anchor" href="#_23、soa和微服务架构之间的主要区别是什么" aria-label="Permalink to &quot;23、SOA和微服务架构之间的主要区别是什么？&quot;">​</a></h3><h3 id="_24、微服务设计的基础是什么" tabindex="-1">24、微服务设计的基础是什么？ <a class="header-anchor" href="#_24、微服务设计的基础是什么" aria-label="Permalink to &quot;24、微服务设计的基础是什么？&quot;">​</a></h3><h3 id="_25、康威定律是什么" tabindex="-1">25、康威定律是什么？ <a class="header-anchor" href="#_25、康威定律是什么" aria-label="Permalink to &quot;25、康威定律是什么？&quot;">​</a></h3><h3 id="_26、合同测试你懂什么" tabindex="-1">26、合同测试你懂什么？ <a class="header-anchor" href="#_26、合同测试你懂什么" aria-label="Permalink to &quot;26、合同测试你懂什么？&quot;">​</a></h3><h3 id="_27、第二层缓存" tabindex="-1">27、第二层缓存： <a class="header-anchor" href="#_27、第二层缓存" aria-label="Permalink to &quot;27、第二层缓存：&quot;">​</a></h3><h3 id="_28、服务雪崩效应产生的原因" tabindex="-1">28、服务雪崩效应产生的原因 <a class="header-anchor" href="#_28、服务雪崩效应产生的原因" aria-label="Permalink to &quot;28、服务雪崩效应产生的原因&quot;">​</a></h3><h3 id="_29、spring-cloud解决了哪些问题" tabindex="-1">29、Spring Cloud解决了哪些问题？ <a class="header-anchor" href="#_29、spring-cloud解决了哪些问题" aria-label="Permalink to &quot;29、Spring Cloud解决了哪些问题？&quot;">​</a></h3><h3 id="_30、康威定律是什么" tabindex="-1">30、康威定律是什么？ <a class="header-anchor" href="#_30、康威定律是什么" aria-label="Permalink to &quot;30、康威定律是什么？&quot;">​</a></h3>',58),i=[n];function s(d,l,u,p,E,h){return r(),a("div",null,i)}const b=o(t,[["render",s]]);export{c as __pageData,b as default};
