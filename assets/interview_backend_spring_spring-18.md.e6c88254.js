import{_ as r,o as a,c as o,V as e}from"./chunks/framework.c6d8cbec.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/spring/spring-18.md","filePath":"interview/backend/spring/spring-18.md"}'),t={name:"interview/backend/spring/spring-18.md"},i=e('<h3 id="_1、自动装配有哪些局限性" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#1%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E6%9C%89%E5%93%AA%E4%BA%9B%E5%B1%80%E9%99%90%E6%80%A7-" target="_blank" rel="noreferrer">1、自动装配有哪些局限性 ?</a> <a class="header-anchor" href="#_1、自动装配有哪些局限性" aria-label="Permalink to &quot;[1、自动装配有哪些局限性 ?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题，常见面试题及答案汇总.md#1自动装配有哪些局限性-)&quot;">​</a></h3><p><strong>自动装配的局限性是：</strong></p><p>重写： 你仍需用 和 配置来定义依赖，意味着总要重写自动装配。</p><p>基本数据类型：你不能自动装配简单的属性，如基本数据类型，String字符串，和类。</p><p>模糊特性：自动装配不如显式装配精确，如果有可能，建议使用显式装配。</p><h3 id="_2、什么是-aop-目标对象" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#2%E4%BB%80%E4%B9%88%E6%98%AF-aop-%E7%9B%AE%E6%A0%87%E5%AF%B9%E8%B1%A1" target="_blank" rel="noreferrer">2、什么是 AOP 目标对象?</a> <a class="header-anchor" href="#_2、什么是-aop-目标对象" aria-label="Permalink to &quot;[2、什么是 AOP 目标对象?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题，常见面试题及答案汇总.md#2什么是-aop-目标对象)&quot;">​</a></h3><p>被一个或者多个切面所通知的对象。它通常是一个代理对象。也指被通知（advised）对象。</p><h3 id="_3、shiro和oauth还有cas他们之间的关系是什么-问下您公司权限是如何设计-还有就是这几个概念的区别。" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#3shiro%E5%92%8Coauth%E8%BF%98%E6%9C%89cas%E4%BB%96%E4%BB%AC%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB%E6%98%AF%E4%BB%80%E4%B9%88%E9%97%AE%E4%B8%8B%E6%82%A8%E5%85%AC%E5%8F%B8%E6%9D%83%E9%99%90%E6%98%AF%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E8%BF%98%E6%9C%89%E5%B0%B1%E6%98%AF%E8%BF%99%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%82" target="_blank" rel="noreferrer">3、shiro和oauth还有cas他们之间的关系是什么？问下您公司权限是如何设计，还有就是这几个概念的区别。</a> <a class="header-anchor" href="#_3、shiro和oauth还有cas他们之间的关系是什么-问下您公司权限是如何设计-还有就是这几个概念的区别。" aria-label="Permalink to &quot;[3、shiro和oauth还有cas他们之间的关系是什么？问下您公司权限是如何设计，还有就是这几个概念的区别。](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题，常见面试题及答案汇总.md#3shiro和oauth还有cas他们之间的关系是什么问下您公司权限是如何设计还有就是这几个概念的区别。)&quot;">​</a></h3><p>cas和oauth是一个解决单点登录的组件，shiro主要是负责权限安全方面的工作，所以功能点不一致。但往往需要单点登陆和权限控制一起来使用，所以就有 cas+shiro或者oauth+shiro这样的组合。</p><p>token一般是客户端登录后服务端生成的令牌，每次访问服务端会进行校验，一般保存到内存即可，也可以放到其他介质；Redis可以做Session共享，如果前端web服务器有几台负载，但是需要保持用户登录的状态，这场景使用比较常见。</p><p>我们公司使用oauth+shiro这样的方式来做后台权限的管理，oauth负责多后台统一登录认证，shiro负责给登录用户赋予不同的访问权限。</p><h3 id="_4、什么是spring-cloud" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#4%E4%BB%80%E4%B9%88%E6%98%AFspring-cloud" target="_blank" rel="noreferrer">4、什么是Spring Cloud？</a> <a class="header-anchor" href="#_4、什么是spring-cloud" aria-label="Permalink to &quot;[4、什么是Spring Cloud？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题，常见面试题及答案汇总.md#4什么是spring-cloud)&quot;">​</a></h3><p>在微服务中，SpringCloud是一个提供与外部系统集成的系统。它是一个敏捷的框架，可以短平快构建应用程序。与有限数量的数据处理相关联，它在微服务体系结构中起着非常重要的作用。 <strong>以下为 Spring Cloud 的核心特性</strong>：</p><p><strong>1、</strong> 版本化/分布式配置。</p><p><strong>2、</strong> 服务注册和发现。</p><p><strong>3、</strong> 服务和服务之间的调用。</p><p><strong>4、</strong> 路由。</p><p><strong>5、</strong> 断路器和负载平衡。</p><p><strong>6、</strong> 分布式消息传递。</p><h3 id="_5、谈谈服务雪崩效应" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#5%E8%B0%88%E8%B0%88%E6%9C%8D%E5%8A%A1%E9%9B%AA%E5%B4%A9%E6%95%88%E5%BA%94" target="_blank" rel="noreferrer">5、谈谈服务雪崩效应</a> <a class="header-anchor" href="#_5、谈谈服务雪崩效应" aria-label="Permalink to &quot;[5、谈谈服务雪崩效应](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题，常见面试题及答案汇总.md#5谈谈服务雪崩效应)&quot;">​</a></h3><p>雪崩效应是在大型互联网项目中，当某个服务发生宕机时，调用这个服务的其他服务也会发生宕机，大型项目的微服务之间的调用是互通的，这样就会将服务的不可用逐步扩大到各个其他服务中，从而使整个项目的服务宕机崩溃.发生雪崩效应的原因有以下几点</p><p>单个服务的代码存在bug、2请求访问量激增导致服务发生崩溃(如大型商城的枪红包，秒杀功能)、3.服务器的硬件故障也会导致部分服务不可用.</p><h3 id="_6、applicationcontext通常的实现是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#6applicationcontext%E9%80%9A%E5%B8%B8%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">6、ApplicationContext通常的实现是什么?</a> <a class="header-anchor" href="#_6、applicationcontext通常的实现是什么" aria-label="Permalink to &quot;[6、ApplicationContext通常的实现是什么?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题，常见面试题及答案汇总.md#6applicationcontext通常的实现是什么)&quot;">​</a></h3><p><strong>1、</strong> FileSystemXmlApplicationContext ：此容器从一个XML文件中加载beans的定义，XML Bean 配置文件的全路径名必须提供给它的构造函数。</p><p><strong>2、</strong> ClassPathXmlApplicationContext：此容器也从一个XML文件中加载beans的定义，这里，你需要正确设置classpath因为这个容器将在classpath里找bean配置。</p><p><strong>3、</strong> WebXmlApplicationContext：此容器加载一个XML文件，此文件定义了一个WEB应用的所有bean。</p><h3 id="_7、网关的作用是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#7%E7%BD%91%E5%85%B3%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">7、网关的作用是什么</a> <a class="header-anchor" href="#_7、网关的作用是什么" aria-label="Permalink to &quot;[7、网关的作用是什么](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题，常见面试题及答案汇总.md#7网关的作用是什么)&quot;">​</a></h3><p>统一管理微服务请求，权限控制、负载均衡、路由转发、监控、安全控制黑名单和白名单等</p><h3 id="_8、什么是spring-profiles" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#8%E4%BB%80%E4%B9%88%E6%98%AFspring-profiles" target="_blank" rel="noreferrer">8、什么是Spring Profiles？</a> <a class="header-anchor" href="#_8、什么是spring-profiles" aria-label="Permalink to &quot;[8、什么是Spring Profiles？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题，常见面试题及答案汇总.md#8什么是spring-profiles)&quot;">​</a></h3><p>Spring Profiles允许用户根据配置文件（dev，test，prod等）来注册bean。因此，当应用程序在开发中运行时，只有某些bean可以加载，而在PRODUCTION中，某些其他bean可以加载。假设我们的要求是Swagger文档仅适用于QA环境，并且禁用所有其他文档。这可以使用配置文件来完成。SpringBoot使得使用配置文件非常简单。</p><h3 id="_9、-required-注解-https-gitee-com-souyunku-devbooks-blob-master-docs-spring-spring最新面试题-常见面试题及答案汇总-md-9-required-required-注解" tabindex="-1">[9、<a href="/docs/Required.html">@Required </a> 注解](<a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#9%5B@required-%5D/required--%E6%B3%A8%E8%A7%A3" target="_blank" rel="noreferrer">https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题，常见面试题及答案汇总.md#9[@required-]/required--注解</a>) <a class="header-anchor" href="#_9、-required-注解-https-gitee-com-souyunku-devbooks-blob-master-docs-spring-spring最新面试题-常见面试题及答案汇总-md-9-required-required-注解" aria-label="Permalink to &quot;[9、[@Required ](/Required ) 注解](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题，常见面试题及答案汇总.md#9[@required-]/required--注解)&quot;">​</a></h3><p>这个注解表明bean的属性必须在配置的时候设置，通过一个bean定义的显式的属性值或通过自动装配，若@Required注解的bean属性未被设置，容器将抛出BeanInitializationException。</p><h3 id="_10、我们如何监视所有-springboot-微服务" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#10%E6%88%91%E4%BB%AC%E5%A6%82%E4%BD%95%E7%9B%91%E8%A7%86%E6%89%80%E6%9C%89-springboot-%E5%BE%AE%E6%9C%8D%E5%8A%A1" target="_blank" rel="noreferrer">10、我们如何监视所有 SpringBoot 微服务？</a> <a class="header-anchor" href="#_10、我们如何监视所有-springboot-微服务" aria-label="Permalink to &quot;[10、我们如何监视所有 SpringBoot 微服务？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题，常见面试题及答案汇总.md#10我们如何监视所有-springboot-微服务)&quot;">​</a></h3><p>SpringBoot 提供监视器端点以监控各个微服务的度量。这些端点对于获取有关应用程序的信息（如它们是否已启动）以及它们的组件（如数据库等）是否正常运行很有帮助。但是，使用监视器的一个主要缺点或困难是，我们必须单独打开应用程序的知识点以了解其状态或健康状况。想象一下涉及 50 个应用程序的微服务，管理员将不得不击中所有 50 个应用程序的执行终端。为了帮助我们处理这种情况，我们将使用位于的开源项目。 它建立在 SpringBoot Actuator 之上，它提供了一个 Web UI，使我们能够可视化多个应用程序的度量。</p><h3 id="_11、如何在-spring-中启动注解装配" tabindex="-1">11、如何在 spring 中启动注解装配？ <a class="header-anchor" href="#_11、如何在-spring-中启动注解装配" aria-label="Permalink to &quot;11、如何在 spring 中启动注解装配？&quot;">​</a></h3><h3 id="_12、什么是服务熔断" tabindex="-1">12、什么是服务熔断 <a class="header-anchor" href="#_12、什么是服务熔断" aria-label="Permalink to &quot;12、什么是服务熔断&quot;">​</a></h3><h3 id="_13、springboot-有哪些优点" tabindex="-1">13、Springboot 有哪些优点？ <a class="header-anchor" href="#_13、springboot-有哪些优点" aria-label="Permalink to &quot;13、Springboot 有哪些优点？&quot;">​</a></h3><h3 id="_14、如果想在拦截的方法里面得到从前台传入的参数-怎么得到" tabindex="-1">14、如果想在拦截的方法里面得到从前台传入的参数,怎么得到？ <a class="header-anchor" href="#_14、如果想在拦截的方法里面得到从前台传入的参数-怎么得到" aria-label="Permalink to &quot;14、如果想在拦截的方法里面得到从前台传入的参数,怎么得到？&quot;">​</a></h3><h3 id="_15、微服务同时调用多个接口-怎么支持事务的啊" tabindex="-1">15、微服务同时调用多个接口，怎么支持事务的啊？ <a class="header-anchor" href="#_15、微服务同时调用多个接口-怎么支持事务的啊" aria-label="Permalink to &quot;15、微服务同时调用多个接口，怎么支持事务的啊？&quot;">​</a></h3><h3 id="_16、访问restful微服务的方法是什么" tabindex="-1">16、访问RESTful微服务的方法是什么？ <a class="header-anchor" href="#_16、访问restful微服务的方法是什么" aria-label="Permalink to &quot;16、访问RESTful微服务的方法是什么？&quot;">​</a></h3><h3 id="_17、springboot-有哪些优点" tabindex="-1">17、SpringBoot 有哪些优点？ <a class="header-anchor" href="#_17、springboot-有哪些优点" aria-label="Permalink to &quot;17、SpringBoot 有哪些优点？&quot;">​</a></h3><h3 id="_18、springboot-的核心注解是哪个-它主要由哪几个注解组成的" tabindex="-1">18、SpringBoot 的核心注解是哪个？它主要由哪几个注解组成的？ <a class="header-anchor" href="#_18、springboot-的核心注解是哪个-它主要由哪几个注解组成的" aria-label="Permalink to &quot;18、SpringBoot 的核心注解是哪个？它主要由哪几个注解组成的？&quot;">​</a></h3><h3 id="_19、springboot-常用的-starter-有哪些" tabindex="-1">19、SpringBoot 常用的 Starter 有哪些？ <a class="header-anchor" href="#_19、springboot-常用的-starter-有哪些" aria-label="Permalink to &quot;19、SpringBoot 常用的 Starter 有哪些？&quot;">​</a></h3><h3 id="_20、soa和微服务架构之间的主要区别是什么" tabindex="-1">20、SOA和微服务架构之间的主要区别是什么？ <a class="header-anchor" href="#_20、soa和微服务架构之间的主要区别是什么" aria-label="Permalink to &quot;20、SOA和微服务架构之间的主要区别是什么？&quot;">​</a></h3><h3 id="_21、springcloud和dubbo有哪些区别" tabindex="-1">21、springcloud和dubbo有哪些区别 <a class="header-anchor" href="#_21、springcloud和dubbo有哪些区别" aria-label="Permalink to &quot;21、springcloud和dubbo有哪些区别&quot;">​</a></h3><h3 id="_22、什么是-spring-bean" tabindex="-1">22、什么是 spring bean？ <a class="header-anchor" href="#_22、什么是-spring-bean" aria-label="Permalink to &quot;22、什么是 spring bean？&quot;">​</a></h3><h3 id="_23、-autowired-注解" tabindex="-1">23、<a href="/docs/Autowired.html">@Autowired </a> 注解 <a class="header-anchor" href="#_23、-autowired-注解" aria-label="Permalink to &quot;23、[@Autowired ](/Autowired ) 注解&quot;">​</a></h3><h3 id="_24、spring-cloud-consul" tabindex="-1">24、Spring Cloud Consul <a class="header-anchor" href="#_24、spring-cloud-consul" aria-label="Permalink to &quot;24、Spring Cloud Consul&quot;">​</a></h3><h3 id="_25、springcloud由什么组成" tabindex="-1">25、SpringCloud由什么组成 <a class="header-anchor" href="#_25、springcloud由什么组成" aria-label="Permalink to &quot;25、SpringCloud由什么组成&quot;">​</a></h3><h3 id="_26、什么是依赖注入" tabindex="-1">26、什么是依赖注入？ <a class="header-anchor" href="#_26、什么是依赖注入" aria-label="Permalink to &quot;26、什么是依赖注入？&quot;">​</a></h3><h3 id="_27、springboot的启动器有哪几种" tabindex="-1">27、SpringBoot的启动器有哪几种? <a class="header-anchor" href="#_27、springboot的启动器有哪几种" aria-label="Permalink to &quot;27、SpringBoot的启动器有哪几种?&quot;">​</a></h3><h3 id="_28、什么是apache-kafka" tabindex="-1">28、什么是Apache Kafka？ <a class="header-anchor" href="#_28、什么是apache-kafka" aria-label="Permalink to &quot;28、什么是Apache Kafka？&quot;">​</a></h3><h3 id="_29、spring-cloud-bus" tabindex="-1">29、Spring Cloud Bus <a class="header-anchor" href="#_29、spring-cloud-bus" aria-label="Permalink to &quot;29、Spring Cloud Bus&quot;">​</a></h3><h3 id="_30、spring-cloud和各子项目版本对应关系" tabindex="-1">30、Spring Cloud和各子项目版本对应关系 <a class="header-anchor" href="#_30、spring-cloud和各子项目版本对应关系" aria-label="Permalink to &quot;30、Spring Cloud和各子项目版本对应关系&quot;">​</a></h3><h3 id="_31、springboot自动配置的原理" tabindex="-1">31、SpringBoot自动配置的原理 <a class="header-anchor" href="#_31、springboot自动配置的原理" aria-label="Permalink to &quot;31、SpringBoot自动配置的原理&quot;">​</a></h3>',55),n=[i];function s(E,p,l,h,d,u){return a(),o("div",null,n)}const c=r(t,[["render",s]]);export{B as __pageData,c as default};
