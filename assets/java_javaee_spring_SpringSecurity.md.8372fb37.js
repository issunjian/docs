import{_ as s,o as n,c as a,V as l}from"./chunks/framework.c6d8cbec.js";const o="/docs/assets/filters.7b747343.jpg",g=JSON.parse('{"title":"Spring Security","description":"","frontmatter":{},"headers":[],"relativePath":"java/javaee/spring/SpringSecurity.md","filePath":"java/javaee/spring/SpringSecurity.md"}'),p={name:"java/javaee/spring/SpringSecurity.md"},e=l('<h1 id="spring-security" tabindex="-1">Spring Security <a class="header-anchor" href="#spring-security" aria-label="Permalink to &quot;Spring Security&quot;">​</a></h1><p><a href="https://www.jianshu.com/p/4cee4b19ec40" target="_blank" rel="noreferrer">https://www.jianshu.com/p/4cee4b19ec40</a></p><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><p>spring security 的核心功能主要包括：</p><p>认证 （你是谁） 授权 （你能干什么） 攻击防护 （防止伪造身份）</p><p>其核心就是一组过滤器链，项目启动后将会自动配置。最核心的就是 Basic Authentication Filter 用来认证用户的身份，一个在spring security中一种过滤器处理一种认证方式。</p><p><img src="'+o+`" alt=""></p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">dependency</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">        &lt;</span><span style="color:#F286C4;">groupId</span><span style="color:#F6F6F4;">&gt;org.springframework.security&lt;/</span><span style="color:#F286C4;">groupId</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">        &lt;</span><span style="color:#F286C4;">artifactId</span><span style="color:#F6F6F4;">&gt;spring-security-test&lt;/</span><span style="color:#F286C4;">artifactId</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">        &lt;</span><span style="color:#F286C4;">scope</span><span style="color:#F6F6F4;">&gt;test&lt;/</span><span style="color:#F286C4;">scope</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;/</span><span style="color:#F286C4;">dependency</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.security&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-security-test&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;test&lt;/</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>Spring Security 的配置类，通过继承 <code>WebSecurityConfigurerAdapter</code> 类实现，可以重写一下三种方法。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">Configuration</span></span>
<span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">EnableWebSecurity</span></span>
<span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">EnableGlobalMethodSecurity</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">prePostEnabled</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">WebSecurityConfig</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">extends</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">WebSecurityConfigurerAdapter</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    @</span><span style="color:#97E1F1;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">configure</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">AuthenticationManagerBuilder</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">auth</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">throws</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Exception</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//我代表代码</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    @</span><span style="color:#97E1F1;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">configure</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">HttpSecurity</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">http</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">throws</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Exception</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//我代表代码</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    @</span><span style="color:#97E1F1;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">configure</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">WebSecurity</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">web</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">throws</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Exception</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//我代表代码</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Configuration</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EnableWebSecurity</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EnableGlobalMethodSecurity</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">prePostEnabled</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebSecurityConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebSecurityConfigurerAdapter</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">configure</span><span style="color:#24292E;">(AuthenticationManagerBuilder </span><span style="color:#E36209;">auth</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Exception {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//我代表代码</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">configure</span><span style="color:#24292E;">(HttpSecurity </span><span style="color:#E36209;">http</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Exception {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//我代表代码</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">configure</span><span style="color:#24292E;">(WebSecurity </span><span style="color:#E36209;">web</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Exception {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//我代表代码</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="配置全局信息" tabindex="-1">配置全局信息 <a class="header-anchor" href="#配置全局信息" aria-label="Permalink to &quot;配置全局信息&quot;">​</a></h3><p><code>AuthenticationManagerBuilder</code> 类用来配置全局的认证相关的信息：</p><ol><li><code>AuthenticationProvider</code> ：认证服务提供者</li><li><code>UserDetailsService</code> ：认证用户（及其权限）</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">configure</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">AuthenticationManagerBuilder</span><span style="color:#F6F6F4;"> auth) throws Exception {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 添加后门</span></span>
<span class="line"><span style="color:#F6F6F4;">        auth.</span><span style="color:#62E884;">authenticationProvider</span><span style="color:#F6F6F4;">(backdoorAuthenticationProvider);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 自定义AuthenticationProvider实例加入AuthenticationManager</span></span>
<span class="line"><span style="color:#F6F6F4;">        auth.</span><span style="color:#62E884;">userDetailsService</span><span style="color:#F6F6F4;">(backendSysUserDetailsServiceImpl).</span><span style="color:#62E884;">passwordEncoder</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">BCryptPasswordEncoder</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">        auth.</span><span style="color:#62E884;">authenticationProvider</span><span style="color:#F6F6F4;">(backendSysUserAuthenticationProvider);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">configure</span><span style="color:#24292E;">(AuthenticationManagerBuilder auth) throws Exception {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 添加后门</span></span>
<span class="line"><span style="color:#24292E;">        auth.</span><span style="color:#6F42C1;">authenticationProvider</span><span style="color:#24292E;">(backdoorAuthenticationProvider);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 自定义AuthenticationProvider实例加入AuthenticationManager</span></span>
<span class="line"><span style="color:#24292E;">        auth.</span><span style="color:#6F42C1;">userDetailsService</span><span style="color:#24292E;">(backendSysUserDetailsServiceImpl).</span><span style="color:#6F42C1;">passwordEncoder</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BCryptPasswordEncoder</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        auth.</span><span style="color:#6F42C1;">authenticationProvider</span><span style="color:#24292E;">(backendSysUserAuthenticationProvider);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><h3 id="权限控制" tabindex="-1">权限控制 <a class="header-anchor" href="#权限控制" aria-label="Permalink to &quot;权限控制&quot;">​</a></h3><p><code>HttpSecurity</code> 类负责具体的权限控制规则配置。每配置相当于 xml 配置中的一个标签。</p><p>各种具体的认证机制的相关配置，OpenIDLoginConfigurer、AnonymousConfigurer、FormLoginConfigurer、HttpBasicConfigurer LogoutConfigurer RequestMatcherConfigurer：spring mvc style、ant style、regex style HeadersConfigurer： CorsConfigurer、CsrfConfigurer SessionManagementConfigurer： PortMapperConfigurer： JeeConfigurer： X509Configurer： RememberMeConfigurer： ExpressionUrlAuthorizationConfigurer： RequestCacheConfigurer： ExceptionHandlingConfigurer： SecurityContextConfigurer： ServletApiConfigurer： ChannelSecurityConfigurer： 此模块的authenticationProvider和userDetailsService； SecurityFilterChain控制。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">configure</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">HttpSecurity</span><span style="color:#F6F6F4;"> http) throws Exception {</span></span>
<span class="line"><span style="color:#F6F6F4;">         http</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">authorizeRequests</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">antMatchers</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">                        </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/index</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">                        </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/error</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">                ).</span><span style="color:#62E884;">permitAll</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">antMatchers</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/user/**</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">hasRole</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">USER</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">antMatchers</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/admin/**</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">hasRole</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">ADMIN</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">and</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">formLogin</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">loginPage</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/login</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">defaultSuccessUrl</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/user</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#7B7F8B;">//TODO 自定义参数名称，与login.html中的参数对应</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">usernameParameter</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">myusername</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">passwordParameter</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">mypassword</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">and</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">logout</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">logoutUrl</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/logout</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">logoutSuccessUrl</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/login</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#7B7F8B;">//鉴权</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">and</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">authorizeRequests</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">                .</span><span style="color:#62E884;">withObjectPostProcessor</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ObjectPostProcessor</span><span style="color:#F6F6F4;">&lt;FilterSecurityInterceptor&gt;() {</span></span>
<span class="line"><span style="color:#F6F6F4;">                    @</span><span style="color:#97E1F1;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F6F6F4;">                    </span><span style="color:#F286C4;">public</span><span style="color:#62E884;"> &lt;</span><span style="color:#F6F6F4;">O</span><span style="color:#62E884;"> </span><span style="color:#F286C4;">extends</span><span style="color:#62E884;"> </span><span style="color:#F6F6F4;">FilterSecurityInterceptor</span><span style="color:#62E884;">&gt; </span><span style="color:#97E1F1;font-style:italic;">O</span><span style="color:#62E884;"> postProcess(</span><span style="color:#97E1F1;font-style:italic;">O</span><span style="color:#62E884;"> </span><span style="color:#FFB86C;font-style:italic;">object</span><span style="color:#62E884;">) {</span></span>
<span class="line"><span style="color:#62E884;">                        </span><span style="color:#F6F6F4;">object</span><span style="color:#62E884;">.setSecurityMetadataSource(backendSysRoleSecurityMetadataSourceImpl);</span></span>
<span class="line"><span style="color:#62E884;">                        </span><span style="color:#F6F6F4;">object</span><span style="color:#62E884;">.setAccessDecisionManager(backendSysRoleAccessDecisionManagerImpl);</span></span>
<span class="line"><span style="color:#62E884;">                        </span><span style="color:#F286C4;">return</span><span style="color:#62E884;"> object;</span></span>
<span class="line"><span style="color:#62E884;">                    }</span></span>
<span class="line"><span style="color:#F6F6F4;">                });</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">configure</span><span style="color:#24292E;">(HttpSecurity http) throws Exception {</span></span>
<span class="line"><span style="color:#24292E;">         http</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">authorizeRequests</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">antMatchers</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#032F62;">&quot;/index&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#032F62;">&quot;/error&quot;</span></span>
<span class="line"><span style="color:#24292E;">                ).</span><span style="color:#6F42C1;">permitAll</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">antMatchers</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/user/**&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">hasRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;USER&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">antMatchers</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/admin/**&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">hasRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ADMIN&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">and</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">formLogin</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">loginPage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/login&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">defaultSuccessUrl</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/user&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">//TODO 自定义参数名称，与login.html中的参数对应</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">usernameParameter</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;myusername&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">passwordParameter</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;mypassword&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">and</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">logout</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">logoutUrl</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/logout&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">logoutSuccessUrl</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/login&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">//鉴权</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">and</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">authorizeRequests</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">withObjectPostProcessor</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ObjectPostProcessor&lt;</span><span style="color:#D73A49;">FilterSecurityInterceptor</span><span style="color:#24292E;">&gt;() {</span></span>
<span class="line"><span style="color:#24292E;">                    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">O</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FilterSecurityInterceptor</span><span style="color:#24292E;">&gt; O </span><span style="color:#6F42C1;">postProcess</span><span style="color:#24292E;">(O </span><span style="color:#E36209;">object</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                        object.</span><span style="color:#6F42C1;">setSecurityMetadataSource</span><span style="color:#24292E;">(backendSysRoleSecurityMetadataSourceImpl);</span></span>
<span class="line"><span style="color:#24292E;">                        object.</span><span style="color:#6F42C1;">setAccessDecisionManager</span><span style="color:#24292E;">(backendSysRoleAccessDecisionManagerImpl);</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> object;</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><h3 id="忽略规则配置" tabindex="-1">忽略规则配置 <a class="header-anchor" href="#忽略规则配置" aria-label="Permalink to &quot;忽略规则配置&quot;">​</a></h3><p><code>WebSecurity</code> 类负责全局请求忽略规则配置（比如静态文件、注册页面）、全局 HttpFirewall 配置、是否debug配置、全局SecurityFilterChain配置、privilegeEvaluator、expressionHandler、securityInterceptor。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">Override</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">configure</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">WebSecurity</span><span style="color:#F6F6F4;"> web) throws Exception {</span></span>
<span class="line"><span style="color:#F6F6F4;">         web.</span><span style="color:#62E884;">ignoring</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">antMatchers</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/css/**</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/js/**</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">configure</span><span style="color:#24292E;">(WebSecurity web) throws Exception {</span></span>
<span class="line"><span style="color:#24292E;">         web.</span><span style="color:#6F42C1;">ignoring</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">antMatchers</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/css/**&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;/js/**&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div>`,22),t=[e];function c(r,y,F,i,E,u){return n(),a("div",null,t)}const h=s(p,[["render",c]]);export{g as __pageData,h as default};
