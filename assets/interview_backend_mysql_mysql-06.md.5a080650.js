import{_ as a,o as e,c as s,V as o}from"./chunks/framework.c6d8cbec.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/mysql/mysql-06.md","filePath":"interview/backend/mysql/mysql-06.md"}'),t={name:"interview/backend/mysql/mysql-06.md"},n=o('<h3 id="_1、对mysql的锁了解吗" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#1%E5%AF%B9mysql%E7%9A%84%E9%94%81%E4%BA%86%E8%A7%A3%E5%90%97" target="_blank" rel="noreferrer">1、对MySQL的锁了解吗</a> <a class="header-anchor" href="#_1、对mysql的锁了解吗" aria-label="Permalink to &quot;[1、对MySQL的锁了解吗](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题2021年，常见面试题及答案汇总.md#1对mysql的锁了解吗)&quot;">​</a></h3><p>当数据库有并发事务的时候，可能会产生数据的不一致，这时候需要一些机制来保证访问的次序，锁机制就是这样的一个机制。</p><p>就像酒店的房间，如果大家随意进出，就会出现多人抢夺同一个房间的情况，而在房间上装上锁，申请到钥匙的人才可以入住并且将房间锁起来，其他人只有等他使用完毕才可以再次使用。</p><h3 id="_2、mysql中有哪几种锁" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#2mysql%E4%B8%AD%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%E9%94%81" target="_blank" rel="noreferrer">2、MySQL中有哪几种锁？</a> <a class="header-anchor" href="#_2、mysql中有哪几种锁" aria-label="Permalink to &quot;[2、MySQL中有哪几种锁？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题2021年，常见面试题及答案汇总.md#2mysql中有哪几种锁)&quot;">​</a></h3><p>1.表级锁：开销小，加锁快；不会出现死锁；锁定粒度大，发生锁冲突的概率最高，并发度最低。</p><p>2.行级锁：开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低，并发度也最高。</p><p>3\\、页面锁：开销和加锁时间界于表锁和行锁之间；会出现死锁；锁定粒度界于表锁和行锁之间，并发度一般。</p><h3 id="_3、mysql一条sql加锁分析" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#3mysql%E4%B8%80%E6%9D%A1sql%E5%8A%A0%E9%94%81%E5%88%86%E6%9E%90" target="_blank" rel="noreferrer">3、MySQL一条SQL加锁分析</a> <a class="header-anchor" href="#_3、mysql一条sql加锁分析" aria-label="Permalink to &quot;[3、MySQL一条SQL加锁分析](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题2021年，常见面试题及答案汇总.md#3mysql一条sql加锁分析)&quot;">​</a></h3><p>一条SQL加锁，可以分9种情况进行：</p><p><strong>1、</strong> 组合一：id列是主键，RC隔离级别</p><p><strong>2、</strong> 组合二：id列是二级唯一索引，RC隔离级别</p><p><strong>3、</strong> 组合三：id列是二级非唯一索引，RC隔离级别</p><p><strong>4、</strong> 组合四：id列上没有索引，RC隔离级别</p><p><strong>5、</strong> 组合五：id列是主键，RR隔离级别</p><p><strong>6、</strong> 组合六：id列是二级唯一索引，RR隔离级别</p><p><strong>7、</strong> 组合七：id列是二级非唯一索引，RR隔离级别</p><p><strong>8、</strong> 组合八：id列上没有索引，RR隔离级别</p><p><strong>9、</strong> 组合九：Serializable隔离级别</p><h3 id="_4、索引能干什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#4%E7%B4%A2%E5%BC%95%E8%83%BD%E5%B9%B2%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">4、索引能干什么?</a> <a class="header-anchor" href="#_4、索引能干什么" aria-label="Permalink to &quot;[4、索引能干什么?](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题2021年，常见面试题及答案汇总.md#4索引能干什么)&quot;">​</a></h3><p>索引非常关键，尤其是当表中的数据量越来越大时，索引对于性能的影响愈发重要。 索引能够轻易将查询性能提高好几个数量级，总的来说就是可以明显的提高查询效率。</p><h3 id="_5、创建索引的三种方式" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#5%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F" target="_blank" rel="noreferrer">5、创建索引的三种方式</a> <a class="header-anchor" href="#_5、创建索引的三种方式" aria-label="Permalink to &quot;[5、创建索引的三种方式](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题2021年，常见面试题及答案汇总.md#5创建索引的三种方式)&quot;">​</a></h3><p>在执行CREATE TABLE时创建索引</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">CREATE TABLE `employee` (</span></span>\n<span class="line"><span style="color:#f6f6f4;">  `id` int(11) NOT NULL,</span></span>\n<span class="line"><span style="color:#f6f6f4;">  `name` varchar(255) DEFAULT NULL,</span></span>\n<span class="line"><span style="color:#f6f6f4;">  `age` int(11) DEFAULT NULL,</span></span>\n<span class="line"><span style="color:#f6f6f4;">  `date` datetime DEFAULT NULL,</span></span>\n<span class="line"><span style="color:#f6f6f4;">  `sex` int(1) DEFAULT NULL,</span></span>\n<span class="line"><span style="color:#f6f6f4;">  PRIMARY KEY (`id`),</span></span>\n<span class="line"><span style="color:#f6f6f4;">  KEY `idx_name` (`name`) USING BTREE</span></span>\n<span class="line"><span style="color:#f6f6f4;">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">CREATE TABLE `employee` (</span></span>\n<span class="line"><span style="color:#24292e;">  `id` int(11) NOT NULL,</span></span>\n<span class="line"><span style="color:#24292e;">  `name` varchar(255) DEFAULT NULL,</span></span>\n<span class="line"><span style="color:#24292e;">  `age` int(11) DEFAULT NULL,</span></span>\n<span class="line"><span style="color:#24292e;">  `date` datetime DEFAULT NULL,</span></span>\n<span class="line"><span style="color:#24292e;">  `sex` int(1) DEFAULT NULL,</span></span>\n<span class="line"><span style="color:#24292e;">  PRIMARY KEY (`id`),</span></span>\n<span class="line"><span style="color:#24292e;">  KEY `idx_name` (`name`) USING BTREE</span></span>\n<span class="line"><span style="color:#24292e;">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span></span></code></pre></div><p>使用ALTER TABLE命令添加索引</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">ALTER TABLE table_name ADD INDEX index_name (column);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">ALTER TABLE table_name ADD INDEX index_name (column);</span></span></code></pre></div><p>使用CREATE INDEX命令创建</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">CREATE INDEX index_name ON table_name (column);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">CREATE INDEX index_name ON table_name (column);</span></span></code></pre></div><h3 id="_6、varchar与char的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#6varchar%E4%B8%8Echar%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">6、varchar与char的区别</a> <a class="header-anchor" href="#_6、varchar与char的区别" aria-label="Permalink to &quot;[6、varchar与char的区别](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题2021年，常见面试题及答案汇总.md#6varchar与char的区别)&quot;">​</a></h3><p><strong>char的特点</strong></p><p><strong>1、</strong> char表示定长字符串，长度是固定的；</p><p><strong>2、</strong> 如果插入数据的长度小于char的固定长度时，则用空格填充；</p><p><strong>3、</strong> 因为长度固定，所以存取速度要比varchar快很多，甚至能快50%，但正因为其长度固定，所以会占据多余的空间，是空间换时间的做法；</p><p><strong>4、</strong> 对于char来说，最多能存放的字符个数为255，和编码无关</p><p><strong>varchar的特点</strong></p><p><strong>1、</strong> varchar表示可变长字符串，长度是可变的；</p><p><strong>2、</strong> 插入的数据是多长，就按照多长来存储；</p><p><strong>3、</strong> varchar在存取方面与char相反，它存取慢，因为长度不固定，但正因如此，不占据多余的空间，是时间换空间的做法；</p><p><strong>4、</strong> 对于varchar来说，最多能存放的字符个数为65532</p><p><strong>总之</strong></p><p>结合性能角度（char更快）和节省磁盘空间角度（varchar更小），具体情况还需具体来设计数据库才是妥当的做法</p><h3 id="_7、读写分离有哪些解决方案" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#7%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E6%9C%89%E5%93%AA%E4%BA%9B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" target="_blank" rel="noreferrer">7、读写分离有哪些解决方案？</a> <a class="header-anchor" href="#_7、读写分离有哪些解决方案" aria-label="Permalink to &quot;[7、读写分离有哪些解决方案？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题2021年，常见面试题及答案汇总.md#7读写分离有哪些解决方案)&quot;">​</a></h3><p>读写分离是依赖于主从复制，而主从复制又是为读写分离服务的。因为主从复制要求<code>slave</code>不能写只能读（如果对<code>slave</code>执行写操作，那么<code>show slave status</code>将会呈现<code>Slave_SQL_Running=NO</code>，此时你需要按照前面提到的手动同步一下<code>slave</code>）。</p><p><strong>方案一</strong></p><p>使用MySQL-proxy代理</p><p><strong>优点：</strong></p><p>直接实现读写分离和负载均衡，不用修改代码，master和slave用一样的帐号，MySQL官方不建议实际生产中使用</p><p><strong>缺点：</strong></p><p>降低性能， 不支持事务</p><p><strong>方案二</strong></p><p><strong>1、</strong> 使用AbstractRoutingDataSource+aop+annotation在dao层决定数据源。</p><p><strong>2、</strong> 如果采用了mybatis， 可以将读写分离放在ORM层，比如mybatis可以通过mybatis plugin拦截sql语句，所有的insert/update/delete都访问master库，所有的select 都访问salve库，这样对于dao层都是透明。 plugin实现时可以通过注解或者分析语句是读写方法来选定主从库。不过这样依然有一个问题， 也就是不支持事务， 所以我们还需要重写一下DataSourceTransactionManager， 将read-only的事务扔进读库， 其余的有读有写的扔进写库。</p><p><strong>方案三</strong></p><p><strong>1、</strong> 使用AbstractRoutingDataSource+aop+annotation在service层决定数据源，可以支持事务.</p><p><strong>2、</strong> 缺点：类内部方法通过this.xx()方式相互调用时，aop不会进行拦截，需进行特殊处理。</p><h3 id="_8、什么是幻读-脏读-不可重复读呢" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#8%E4%BB%80%E4%B9%88%E6%98%AF%E5%B9%BB%E8%AF%BB%E8%84%8F%E8%AF%BB%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB%E5%91%A2" target="_blank" rel="noreferrer">8、什么是幻读，脏读，不可重复读呢？</a> <a class="header-anchor" href="#_8、什么是幻读-脏读-不可重复读呢" aria-label="Permalink to &quot;[8、什么是幻读，脏读，不可重复读呢？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题2021年，常见面试题及答案汇总.md#8什么是幻读脏读不可重复读呢)&quot;">​</a></h3><p><strong>1、</strong> 事务A、B交替执行，事务A被事务B干扰到了，因为事务A读取到事务B未提交的数据,这就是<strong>脏读</strong></p><p><strong>2、</strong> 在一个事务范围内，两个相同的查询，读取同一条记录，却返回了不同的数据，这就是<strong>不可重复读</strong>。</p><p><strong>3、</strong> 事务A查询一个范围的结果集，另一个并发事务B往这个范围中插入/删除了数据，并静悄悄地提交，然后事务A再次查询相同的范围，两次读取得到的结果集不一样了，这就是<strong>幻读</strong>。</p><h3 id="_9、如果一个表有一列定义为timestamp-将发生什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#9%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AA%E8%A1%A8%E6%9C%89%E4%B8%80%E5%88%97%E5%AE%9A%E4%B9%89%E4%B8%BAtimestamp%E5%B0%86%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">9、如果一个表有一列定义为TIMESTAMP，将发生什么？</a> <a class="header-anchor" href="#_9、如果一个表有一列定义为timestamp-将发生什么" aria-label="Permalink to &quot;[9、如果一个表有一列定义为TIMESTAMP，将发生什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题2021年，常见面试题及答案汇总.md#9如果一个表有一列定义为timestamp将发生什么)&quot;">​</a></h3><p>每当行被更改时，时间戳字段将获取当前时间戳。</p><h3 id="_10、sql优化的一般步骤是什么-怎么看执行计划-explain-如何理解其中各个字段的含义。" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#10sql%E4%BC%98%E5%8C%96%E7%9A%84%E4%B8%80%E8%88%AC%E6%AD%A5%E9%AA%A4%E6%98%AF%E4%BB%80%E4%B9%88%E6%80%8E%E4%B9%88%E7%9C%8B%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92explain%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%85%B6%E4%B8%AD%E5%90%84%E4%B8%AA%E5%AD%97%E6%AE%B5%E7%9A%84%E5%90%AB%E4%B9%89%E3%80%82" target="_blank" rel="noreferrer">10、SQL优化的一般步骤是什么，怎么看执行计划（explain），如何理解其中各个字段的含义。</a> <a class="header-anchor" href="#_10、sql优化的一般步骤是什么-怎么看执行计划-explain-如何理解其中各个字段的含义。" aria-label="Permalink to &quot;[10、SQL优化的一般步骤是什么，怎么看执行计划（explain），如何理解其中各个字段的含义。](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题2021年，常见面试题及答案汇总.md#10sql优化的一般步骤是什么怎么看执行计划explain如何理解其中各个字段的含义。)&quot;">​</a></h3><p><strong>1、</strong> show status 命令了解各种 sql 的执行频率</p><p><strong>2、</strong> 通过慢查询日志定位那些执行效率较低的 sql 语句</p><p><strong>3、</strong> explain 分析低效 sql 的执行计划（这点非常重要，日常开发中用它分析Sql，会大大降低Sql导致的线上事故）</p><h3 id="_11、什么是非标准字符串类型" tabindex="-1">11、什么是非标准字符串类型？ <a class="header-anchor" href="#_11、什么是非标准字符串类型" aria-label="Permalink to &quot;11、什么是非标准字符串类型？&quot;">​</a></h3><h3 id="_12、主键、外键和索引的区别" tabindex="-1">12、主键、外键和索引的区别？ <a class="header-anchor" href="#_12、主键、外键和索引的区别" aria-label="Permalink to &quot;12、主键、外键和索引的区别？&quot;">​</a></h3><h3 id="_13、数据库的乐观锁和悲观锁。" tabindex="-1">13、数据库的乐观锁和悲观锁。 <a class="header-anchor" href="#_13、数据库的乐观锁和悲观锁。" aria-label="Permalink to &quot;13、数据库的乐观锁和悲观锁。&quot;">​</a></h3><h3 id="_14、列的字符串类型可以是什么" tabindex="-1">14、列的字符串类型可以是什么？ <a class="header-anchor" href="#_14、列的字符串类型可以是什么" aria-label="Permalink to &quot;14、列的字符串类型可以是什么？&quot;">​</a></h3><h3 id="_15、count-1-、count-与-count-列名-的区别" tabindex="-1">15、count(1)、count(*) 与 count(列名) 的区别？ <a class="header-anchor" href="#_15、count-1-、count-与-count-列名-的区别" aria-label="Permalink to &quot;15、count(1)、count(*) 与 count(列名) 的区别？&quot;">​</a></h3><h3 id="_16、可以使用多少列创建索引" tabindex="-1">16、可以使用多少列创建索引？ <a class="header-anchor" href="#_16、可以使用多少列创建索引" aria-label="Permalink to &quot;16、可以使用多少列创建索引？&quot;">​</a></h3><h3 id="_17、mysql数据库服务器性能分析的方法命令有哪些" tabindex="-1">17、MYSQL数据库服务器性能分析的方法命令有哪些? <a class="header-anchor" href="#_17、mysql数据库服务器性能分析的方法命令有哪些" aria-label="Permalink to &quot;17、MYSQL数据库服务器性能分析的方法命令有哪些?&quot;">​</a></h3><h3 id="_18、什么是死锁-怎么解决" tabindex="-1">18、什么是死锁？怎么解决？ <a class="header-anchor" href="#_18、什么是死锁-怎么解决" aria-label="Permalink to &quot;18、什么是死锁？怎么解决？&quot;">​</a></h3><h3 id="_19、聚集索引与非聚集索引的区别" tabindex="-1">19、聚集索引与非聚集索引的区别 <a class="header-anchor" href="#_19、聚集索引与非聚集索引的区别" aria-label="Permalink to &quot;19、聚集索引与非聚集索引的区别&quot;">​</a></h3><h3 id="_20、mysql数据库cpu飙升到500-的话他怎么处理" tabindex="-1">20、MySQL数据库cpu飙升到500%的话他怎么处理？ <a class="header-anchor" href="#_20、mysql数据库cpu飙升到500-的话他怎么处理" aria-label="Permalink to &quot;20、MySQL数据库cpu飙升到500%的话他怎么处理？&quot;">​</a></h3><h3 id="_21、innodb存储引擎的锁的算法有三种" tabindex="-1">21、InnoDB存储引擎的锁的算法有三种 <a class="header-anchor" href="#_21、innodb存储引擎的锁的算法有三种" aria-label="Permalink to &quot;21、InnoDB存储引擎的锁的算法有三种&quot;">​</a></h3><h3 id="_22、mysql有哪些数据类型" tabindex="-1">22、MySQL有哪些数据类型 <a class="header-anchor" href="#_22、mysql有哪些数据类型" aria-label="Permalink to &quot;22、MySQL有哪些数据类型&quot;">​</a></h3><h3 id="_23、b树和b-树的区别-数据库为什么使用b-树而不是b树" tabindex="-1">23、B树和B+树的区别，数据库为什么使用B+树而不是B树？ <a class="header-anchor" href="#_23、b树和b-树的区别-数据库为什么使用b-树而不是b树" aria-label="Permalink to &quot;23、B树和B+树的区别，数据库为什么使用B+树而不是B树？&quot;">​</a></h3><h3 id="_24、从锁的类别上分mysql都有哪些锁呢" tabindex="-1">24、从锁的类别上分MySQL都有哪些锁呢？ <a class="header-anchor" href="#_24、从锁的类别上分mysql都有哪些锁呢" aria-label="Permalink to &quot;24、从锁的类别上分MySQL都有哪些锁呢？&quot;">​</a></h3><h3 id="_25、什么是游标" tabindex="-1">25、什么是游标？ <a class="header-anchor" href="#_25、什么是游标" aria-label="Permalink to &quot;25、什么是游标？&quot;">​</a></h3><h3 id="_26、sql的执行顺序" tabindex="-1">26、SQL的执行顺序 <a class="header-anchor" href="#_26、sql的执行顺序" aria-label="Permalink to &quot;26、SQL的执行顺序&quot;">​</a></h3><h3 id="_27、事务的隔离级别有哪些-mysql的默认隔离级别是什么" tabindex="-1">27、事务的隔离级别有哪些？MySQL的默认隔离级别是什么？ <a class="header-anchor" href="#_27、事务的隔离级别有哪些-mysql的默认隔离级别是什么" aria-label="Permalink to &quot;27、事务的隔离级别有哪些？MySQL的默认隔离级别是什么？&quot;">​</a></h3><h3 id="_28、一条sql执行过长的时间-你如何优化-从哪些方面入手" tabindex="-1">28、一条sql执行过长的时间，你如何优化，从哪些方面入手？ <a class="header-anchor" href="#_28、一条sql执行过长的时间-你如何优化-从哪些方面入手" aria-label="Permalink to &quot;28、一条sql执行过长的时间，你如何优化，从哪些方面入手？&quot;">​</a></h3><h3 id="_29、float和double的区别是什么" tabindex="-1">29、FLOAT和DOUBLE的区别是什么？ <a class="header-anchor" href="#_29、float和double的区别是什么" aria-label="Permalink to &quot;29、FLOAT和DOUBLE的区别是什么？&quot;">​</a></h3><h3 id="_30、什么是存储过程-有哪些优缺点" tabindex="-1">30、什么是存储过程？有哪些优缺点？ <a class="header-anchor" href="#_30、什么是存储过程-有哪些优缺点" aria-label="Permalink to &quot;30、什么是存储过程？有哪些优缺点？&quot;">​</a></h3>',84),r=[n];function l(E,p,c,i,h,d){return e(),s("div",null,r)}const u=a(t,[["render",l]]);export{B as __pageData,u as default};
