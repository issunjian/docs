import{_ as e,o as r,c as a,V as o}from"./chunks/framework.c6d8cbec.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/spring/spring-19.md","filePath":"interview/backend/spring/spring-19.md"}'),t={name:"interview/backend/spring/spring-19.md"},n=o(`<h3 id="_1、spring-cloud-是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#1spring-cloud-%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">1、Spring Cloud 是什么</a> <a class="header-anchor" href="#_1、spring-cloud-是什么" aria-label="Permalink to &quot;[1、Spring Cloud 是什么](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题2021年，常见面试题及答案汇总.md#1spring-cloud-是什么)&quot;">​</a></h3><p><strong>1、</strong> Spring Cloud是一系列框架的有序集合。它利用SpringBoot的开发便利性巧妙地简化了分布式系统基础设施的开发，如服务发现注册、配置中心、智能路由、消息总线、负载均衡、断路器、数据监控等，都可以用SpringBoot的开发风格做到一键启动和部署。</p><p><strong>2、</strong> Spring Cloud并没有重复制造轮子，它只是将各家公司开发的比较成熟、经得起实际考验的服务框架组合起来，通过SpringBoot风格进行再封装屏蔽掉了复杂的配置和实现原理，最终给开发者留出了一套简单易懂、易部署和易维护的分布式系统开发工具包。</p><h3 id="_2、微服务限流-http限流-我们使用nginx的limitzone来完成" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#2%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%99%90%E6%B5%81-http%E9%99%90%E6%B5%81%EF%BC%9A%E6%88%91%E4%BB%AC%E4%BD%BF%E7%94%A8nginx%E7%9A%84limitzone%E6%9D%A5%E5%AE%8C%E6%88%90%EF%BC%9A" target="_blank" rel="noreferrer">2、微服务限流 http限流：我们使用nginx的limitzone来完成：</a> <a class="header-anchor" href="#_2、微服务限流-http限流-我们使用nginx的limitzone来完成" aria-label="Permalink to &quot;[2、微服务限流 http限流：我们使用nginx的limitzone来完成：](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题2021年，常见面试题及答案汇总.md#2微服务限流-http限流：我们使用nginx的limitzone来完成：)&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">//这个表示使用ip进行限流 zone名称为req_one 分配了10m 空间使用漏桶算法 每秒钟允许1个请求</span></span>
<span class="line"><span style="color:#f6f6f4;">limit_req_zone $binary_remote_addr zone=req_one:10m rate=1r/s; //这边burst表示可以瞬间超过20个请求 由于没有noDelay参数因此需要排队 如果超过这20个那么直接返回503</span></span>
<span class="line"><span style="color:#f6f6f4;">limit_req zone=req_three burst=20;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">//这个表示使用ip进行限流 zone名称为req_one 分配了10m 空间使用漏桶算法 每秒钟允许1个请求</span></span>
<span class="line"><span style="color:#24292e;">limit_req_zone $binary_remote_addr zone=req_one:10m rate=1r/s; //这边burst表示可以瞬间超过20个请求 由于没有noDelay参数因此需要排队 如果超过这20个那么直接返回503</span></span>
<span class="line"><span style="color:#24292e;">limit_req zone=req_three burst=20;</span></span></code></pre></div><h3 id="_3、微服务架构如何运作" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#3%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%A6%82%E4%BD%95%E8%BF%90%E4%BD%9C" target="_blank" rel="noreferrer">3、微服务架构如何运作？</a> <a class="header-anchor" href="#_3、微服务架构如何运作" aria-label="Permalink to &quot;[3、微服务架构如何运作？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题2021年，常见面试题及答案汇总.md#3微服务架构如何运作)&quot;">​</a></h3><p>微服务架构具有以下组件：</p><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0816/01/img_5.png#alt=img%5C_5.png" alt=""></p><p>图5：微服务 架构 – 微服务面试问题</p><p>客户端 – 来自不同设备的不同用户发送请求。</p><p>身份提供商 – 验证用户或客户身份并颁发安全令牌。</p><p>API网关 – 处理客户端请求。</p><p>静态内容 – 容纳系统的所有内容。</p><p>管理 – 在节点上平衡服务并识别故障。</p><p>服务发现 – 查找微服务之间通信路径的指南。</p><p>内容交付网络 – 代理服务器及其数据中心的分布式网络。</p><p>远程服务 – 启用驻留在IT设备网络上的远程访问信息。</p><h3 id="_4、rest-和rpc对比" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#4rest-%E5%92%8Crpc%E5%AF%B9%E6%AF%94" target="_blank" rel="noreferrer">4、REST 和RPC对比</a> <a class="header-anchor" href="#_4、rest-和rpc对比" aria-label="Permalink to &quot;[4、REST 和RPC对比](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题2021年，常见面试题及答案汇总.md#4rest-和rpc对比)&quot;">​</a></h3><p><strong>1、</strong> RPC主要的缺陷是服务提供方和调用方式之间的依赖太强，需要对每一个微服务进行接口的定义，并通过持续继承发布，严格版本控制才不会出现冲突。</p><p><strong>2、</strong> REST是轻量级的接口，服务的提供和调用不存在代码之间的耦合，只需要一个约定进行规范。</p><h3 id="_5、解释基于xml-schema方式的切面实现。" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#5%E8%A7%A3%E9%87%8A%E5%9F%BA%E4%BA%8Exml-schema%E6%96%B9%E5%BC%8F%E7%9A%84%E5%88%87%E9%9D%A2%E5%AE%9E%E7%8E%B0%E3%80%82" target="_blank" rel="noreferrer">5、解释基于XML Schema方式的切面实现。</a> <a class="header-anchor" href="#_5、解释基于xml-schema方式的切面实现。" aria-label="Permalink to &quot;[5、解释基于XML Schema方式的切面实现。](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题2021年，常见面试题及答案汇总.md#5解释基于xml-schema方式的切面实现。)&quot;">​</a></h3><p>在这种情况下，切面由常规类以及基于XML的配置实现。</p><h3 id="_6、区分构造函数注入和-setter-注入。" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#6%E5%8C%BA%E5%88%86%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E6%B3%A8%E5%85%A5%E5%92%8C-setter-%E6%B3%A8%E5%85%A5%E3%80%82" target="_blank" rel="noreferrer">6、区分构造函数注入和 setter 注入。</a> <a class="header-anchor" href="#_6、区分构造函数注入和-setter-注入。" aria-label="Permalink to &quot;[6、区分构造函数注入和 setter 注入。](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题2021年，常见面试题及答案汇总.md#6区分构造函数注入和-setter-注入。)&quot;">​</a></h3><table><thead><tr><th>构造函数注入</th><th>setter 注入</th></tr></thead><tbody><tr><td>没有部分注入</td><td>有部分注入</td></tr><tr><td>不会覆盖 setter 属性</td><td>会覆盖 setter 属性</td></tr><tr><td>任意修改都会创建一个新实例</td><td>任意修改不会创建一个新实例</td></tr><tr><td>适用于设置很多属性</td><td>适用于设置少量属性</td></tr></tbody></table><h3 id="_7、springboot-实现热部署有哪几种方式" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#7springboot-%E5%AE%9E%E7%8E%B0%E7%83%AD%E9%83%A8%E7%BD%B2%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F" target="_blank" rel="noreferrer">7、SpringBoot 实现热部署有哪几种方式？</a> <a class="header-anchor" href="#_7、springboot-实现热部署有哪几种方式" aria-label="Permalink to &quot;[7、SpringBoot 实现热部署有哪几种方式？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题2021年，常见面试题及答案汇总.md#7springboot-实现热部署有哪几种方式)&quot;">​</a></h3><p>主要有两种方式：</p><p><strong>1、</strong> Spring Loaded</p><p><strong>2、</strong> Spring-boot-devtools</p><h3 id="_8、什么是代理" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#8%E4%BB%80%E4%B9%88%E6%98%AF%E4%BB%A3%E7%90%86" target="_blank" rel="noreferrer">8、什么是代理?</a> <a class="header-anchor" href="#_8、什么是代理" aria-label="Permalink to &quot;[8、什么是代理?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题2021年，常见面试题及答案汇总.md#8什么是代理)&quot;">​</a></h3><p>代理是通知目标对象后创建的对象。从客户端的角度看，代理对象和目标对象是一样的。</p><h3 id="_9、springboot支持什么前端模板" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#9springboot%E6%94%AF%E6%8C%81%E4%BB%80%E4%B9%88%E5%89%8D%E7%AB%AF%E6%A8%A1%E6%9D%BF" target="_blank" rel="noreferrer">9、SpringBoot支持什么前端模板，</a> <a class="header-anchor" href="#_9、springboot支持什么前端模板" aria-label="Permalink to &quot;[9、SpringBoot支持什么前端模板，](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题2021年，常见面试题及答案汇总.md#9springboot支持什么前端模板)&quot;">​</a></h3><p>thymeleaf，freemarker，jsp，官方不推荐JSP会有限制</p><h3 id="_10、什么是客户证书" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#10%E4%BB%80%E4%B9%88%E6%98%AF%E5%AE%A2%E6%88%B7%E8%AF%81%E4%B9%A6" target="_blank" rel="noreferrer">10、什么是客户证书？</a> <a class="header-anchor" href="#_10、什么是客户证书" aria-label="Permalink to &quot;[10、什么是客户证书？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新面试题2021年，常见面试题及答案汇总.md#10什么是客户证书)&quot;">​</a></h3><p>客户端系统用于向远程服务器发出经过身份验证的请求的一种数字证书称为客户端证书。客户端证书在许多相互认证设计中起着非常重要的作用，为请求者的身份提供了强有力的保证。</p><h3 id="_11、什么是断路器" tabindex="-1">11、什么是断路器 <a class="header-anchor" href="#_11、什么是断路器" aria-label="Permalink to &quot;11、什么是断路器&quot;">​</a></h3><h3 id="_12、springboot-的核心注解是哪个-它主要由哪几个注解组成的" tabindex="-1">12、SpringBoot 的核心注解是哪个？它主要由哪几个注解组成的？ <a class="header-anchor" href="#_12、springboot-的核心注解是哪个-它主要由哪几个注解组成的" aria-label="Permalink to &quot;12、SpringBoot 的核心注解是哪个？它主要由哪几个注解组成的？&quot;">​</a></h3><h3 id="_13、springboot和springcloud的区别" tabindex="-1">13、SpringBoot和SpringCloud的区别？ <a class="header-anchor" href="#_13、springboot和springcloud的区别" aria-label="Permalink to &quot;13、SpringBoot和SpringCloud的区别？&quot;">​</a></h3><h3 id="_14、spring-、springboot-和-spring-cloud-的关系" tabindex="-1">14、Spring 、SpringBoot 和 Spring Cloud 的关系? <a class="header-anchor" href="#_14、spring-、springboot-和-spring-cloud-的关系" aria-label="Permalink to &quot;14、Spring 、SpringBoot 和 Spring Cloud 的关系?&quot;">​</a></h3><h3 id="_15、eureka怎么实现高可用" tabindex="-1">15、Eureka怎么实现高可用 <a class="header-anchor" href="#_15、eureka怎么实现高可用" aria-label="Permalink to &quot;15、Eureka怎么实现高可用&quot;">​</a></h3><h3 id="_16、解释不同方式的自动装配-。" tabindex="-1">16、解释不同方式的自动装配 。 <a class="header-anchor" href="#_16、解释不同方式的自动装配-。" aria-label="Permalink to &quot;16、解释不同方式的自动装配 。&quot;">​</a></h3><h3 id="_17、什么是spring-mvc框架的控制器" tabindex="-1">17、什么是Spring MVC框架的控制器？ <a class="header-anchor" href="#_17、什么是spring-mvc框架的控制器" aria-label="Permalink to &quot;17、什么是Spring MVC框架的控制器？&quot;">​</a></h3><h3 id="_18、什么是spring-cloud" tabindex="-1">18、什么是Spring Cloud？ <a class="header-anchor" href="#_18、什么是spring-cloud" aria-label="Permalink to &quot;18、什么是Spring Cloud？&quot;">​</a></h3><h3 id="_19、springboot-的核心配置文件有哪几个-它们的区别是什么" tabindex="-1">19、SpringBoot 的核心配置文件有哪几个？它们的区别是什么？ <a class="header-anchor" href="#_19、springboot-的核心配置文件有哪几个-它们的区别是什么" aria-label="Permalink to &quot;19、SpringBoot 的核心配置文件有哪几个？它们的区别是什么？&quot;">​</a></h3><h3 id="_20、你更倾向用那种事务管理类型" tabindex="-1">20、你更倾向用那种事务管理类型？ <a class="header-anchor" href="#_20、你更倾向用那种事务管理类型" aria-label="Permalink to &quot;20、你更倾向用那种事务管理类型？&quot;">​</a></h3><h3 id="_21、我们如何进行跨功能测试" tabindex="-1">21、我们如何进行跨功能测试？ <a class="header-anchor" href="#_21、我们如何进行跨功能测试" aria-label="Permalink to &quot;21、我们如何进行跨功能测试？&quot;">​</a></h3><h3 id="_22、接口限流方法" tabindex="-1">22、接口限流方法？ <a class="header-anchor" href="#_22、接口限流方法" aria-label="Permalink to &quot;22、接口限流方法？&quot;">​</a></h3><h3 id="_23、负载均衡的意义是什么" tabindex="-1">23、负载均衡的意义是什么? <a class="header-anchor" href="#_23、负载均衡的意义是什么" aria-label="Permalink to &quot;23、负载均衡的意义是什么?&quot;">​</a></h3><h3 id="_24、在-spring-initializer-中-如何改变一个项目的包名字" tabindex="-1">24、在 Spring Initializer 中，如何改变一个项目的包名字？ <a class="header-anchor" href="#_24、在-spring-initializer-中-如何改变一个项目的包名字" aria-label="Permalink to &quot;24、在 Spring Initializer 中，如何改变一个项目的包名字？&quot;">​</a></h3><h3 id="_25、-qualifier-注解有什么用" tabindex="-1">25、<a href="/docs/Qualifier.html">@Qualifier </a> 注解有什么用？ <a class="header-anchor" href="#_25、-qualifier-注解有什么用" aria-label="Permalink to &quot;25、[@Qualifier ](/Qualifier ) 注解有什么用？&quot;">​</a></h3><h3 id="_26、spring-支持集中-bean-scope" tabindex="-1">26、spring 支持集中 bean scope？ <a class="header-anchor" href="#_26、spring-支持集中-bean-scope" aria-label="Permalink to &quot;26、spring 支持集中 bean scope？&quot;">​</a></h3><h3 id="_27、eureka的缺点" tabindex="-1">27、eureka的缺点： <a class="header-anchor" href="#_27、eureka的缺点" aria-label="Permalink to &quot;27、eureka的缺点：&quot;">​</a></h3><h3 id="_28、核心容器-应用上下文-模块。" tabindex="-1">28、核心容器（应用上下文) 模块。 <a class="header-anchor" href="#_28、核心容器-应用上下文-模块。" aria-label="Permalink to &quot;28、核心容器（应用上下文) 模块。&quot;">​</a></h3><h3 id="_29、spring-cloud-openfeign" tabindex="-1">29、Spring Cloud OpenFeign <a class="header-anchor" href="#_29、spring-cloud-openfeign" aria-label="Permalink to &quot;29、Spring Cloud OpenFeign&quot;">​</a></h3><h3 id="_30、什么是-spring-配置文件" tabindex="-1">30、什么是 Spring 配置文件？ <a class="header-anchor" href="#_30、什么是-spring-配置文件" aria-label="Permalink to &quot;30、什么是 Spring 配置文件？&quot;">​</a></h3><h3 id="_31、springboot-打成的-jar-和普通的-jar-有什么区别" tabindex="-1">31、SpringBoot 打成的 jar 和普通的 jar 有什么区别 ? <a class="header-anchor" href="#_31、springboot-打成的-jar-和普通的-jar-有什么区别" aria-label="Permalink to &quot;31、SpringBoot 打成的 jar 和普通的 jar 有什么区别 ?&quot;">​</a></h3>`,55),i=[n];function s(E,l,p,h,d,g){return r(),a("div",null,i)}const B=e(t,[["render",s]]);export{c as __pageData,B as default};
