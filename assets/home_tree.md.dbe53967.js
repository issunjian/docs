import{_ as s,o as a,c as n,V as l}from"./chunks/framework.c6d8cbec.js";const p="/docs/assets/tree.253d1b37.jpg",e="/docs/assets/tree1.03eb88c9.jpg",h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"home/tree.md","filePath":"home/tree.md"}'),o={name:"home/tree.md"},t=l('<p>一、开发中，经常碰到需要组装类似于菜单结构的数据：</p><img src="'+p+'"><p>现将基于java，后端组装树的代码分享出来。</p><p>①：先模拟全部数据，以常见的省市区为基础数据</p><img src="'+e+`"><p>②使用java代码递归组装树：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**parentCode:定级父编码，treeList所有数据*/</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">List</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">AreaVO</span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getChildren</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> parentCode,</span><span style="color:#97E1F1;font-style:italic;">List</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">AreaVO</span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> treeList){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">List</span><span style="color:#F6F6F4;">&lt;AreaVO&gt; list </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ArrayList</span><span style="color:#F6F6F4;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#F6F6F4;">        treeList.</span><span style="color:#62E884;">forEach</span><span style="color:#F6F6F4;">((resource)</span><span style="color:#97E1F1;font-style:italic;">-&gt;</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(Objects.</span><span style="color:#62E884;">equals</span><span style="color:#F6F6F4;">(parentCode,resource.</span><span style="color:#62E884;">getParentAreaCode</span><span style="color:#F6F6F4;">())){</span></span>
<span class="line"><span style="color:#F6F6F4;">                resource.</span><span style="color:#62E884;">setChildList</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">getChildren</span><span style="color:#F6F6F4;">(resource.</span><span style="color:#62E884;">getAreaCode</span><span style="color:#F6F6F4;">(),treeList));</span></span>
<span class="line"><span style="color:#F6F6F4;">                list.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(resource);</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">        });</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> list;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**parentCode:定级父编码，treeList所有数据*/</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> List</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">AreaVO</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getChildren</span><span style="color:#24292E;">(String parentCode,List</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">AreaVO</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> treeList){</span></span>
<span class="line"><span style="color:#24292E;">        List&lt;</span><span style="color:#D73A49;">AreaVO</span><span style="color:#24292E;">&gt; list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">        treeList.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((resource)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(parentCode,resource.</span><span style="color:#6F42C1;">getParentAreaCode</span><span style="color:#24292E;">())){</span></span>
<span class="line"><span style="color:#24292E;">                resource.</span><span style="color:#6F42C1;">setChildList</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getChildren</span><span style="color:#24292E;">(resource.</span><span style="color:#6F42C1;">getAreaCode</span><span style="color:#24292E;">(),treeList));</span></span>
<span class="line"><span style="color:#24292E;">                list.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(resource);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> list;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><p>以上便是组装树，下面是打开树</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">private List&lt;AreaVO&gt; forTree(List&lt;AreaVO&gt; children,List&lt;AreaVO&gt; allLists){</span></span>
<span class="line"><span style="color:#f6f6f4;">        for (AreaVO child : children) {</span></span>
<span class="line"><span style="color:#f6f6f4;">            allLists.add(child);</span></span>
<span class="line"><span style="color:#f6f6f4;">            if(CollUtil.isNotEmpty(child.getChildList())){</span></span>
<span class="line"><span style="color:#f6f6f4;">                System.out.println(&quot;递归子节点&quot;);</span></span>
<span class="line"><span style="color:#f6f6f4;">                forTree(child.getChildList(),allLists);</span></span>
<span class="line"><span style="color:#f6f6f4;">            }</span></span>
<span class="line"><span style="color:#f6f6f4;">        }</span></span>
<span class="line"><span style="color:#f6f6f4;">        return allLists;</span></span>
<span class="line"><span style="color:#f6f6f4;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">private List&lt;AreaVO&gt; forTree(List&lt;AreaVO&gt; children,List&lt;AreaVO&gt; allLists){</span></span>
<span class="line"><span style="color:#24292e;">        for (AreaVO child : children) {</span></span>
<span class="line"><span style="color:#24292e;">            allLists.add(child);</span></span>
<span class="line"><span style="color:#24292e;">            if(CollUtil.isNotEmpty(child.getChildList())){</span></span>
<span class="line"><span style="color:#24292e;">                System.out.println(&quot;递归子节点&quot;);</span></span>
<span class="line"><span style="color:#24292e;">                forTree(child.getChildList(),allLists);</span></span>
<span class="line"><span style="color:#24292e;">            }</span></span>
<span class="line"><span style="color:#24292e;">        }</span></span>
<span class="line"><span style="color:#24292e;">        return allLists;</span></span>
<span class="line"><span style="color:#24292e;">    }</span></span></code></pre></div><p>以上便是全部代码，或许还有更加简便的方式，欢迎指正和补充</p>`,10),r=[t];function c(i,y,F,d,f,E){return a(),n("div",null,r)}const C=s(o,[["render",c]]);export{h as __pageData,C as default};
