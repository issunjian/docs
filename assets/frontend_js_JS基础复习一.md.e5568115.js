import{_ as s,o as a,c as n,V as l}from"./chunks/framework.c6d8cbec.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/js/JS基础复习一.md","filePath":"frontend/js/JS基础复习一.md"}'),p={name:"frontend/js/JS基础复习一.md"},o=l(`<h3 id="_1-算术运算符" tabindex="-1">1.算术运算符 <a class="header-anchor" href="#_1-算术运算符" aria-label="Permalink to &quot;1.算术运算符&quot;">​</a></h3><p><strong>隐式类型转换</strong></p><blockquote><p>除了<strong>加法</strong>和其他<em>字符串</em>运算时，它先将其他值转为字符串，在进行拼接；其他运算它先将其他值转为<em>数字</em>，在进行运算</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">5</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;">//5</span></span>
<span class="line"><span style="color:#F6F6F4;">a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;">// 9</span></span>
<span class="line"><span style="color:#F6F6F4;">a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;">//10</span></span>
<span class="line"><span style="color:#F6F6F4;">a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">undefined</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;">// NaN</span></span>
<span class="line"><span style="color:#F6F6F4;">a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;">// 10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;5&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//5</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 9</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//10</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// NaN</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 10</span></span></code></pre></div><h3 id="_2-赋值运算符" tabindex="-1">2.赋值运算符 <a class="header-anchor" href="#_2-赋值运算符" aria-label="Permalink to &quot;2.赋值运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span></span>
<span class="line"><span style="color:#F6F6F4;">a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> a </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;">// a += 10  (*= 	/=   %=		**=)</span></span>
<span class="line"><span style="color:#7B7F8B;">//	??= 只有当a为undefined或null才会进行赋值</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// a += 10  (*= 	/=   %=		**=)</span></span>
<span class="line"><span style="color:#6A737D;">//	??= 只有当a为undefined或null才会进行赋值</span></span></code></pre></div><h3 id="_3-运算符" tabindex="-1">3..运算符 <a class="header-anchor" href="#_3-运算符" aria-label="Permalink to &quot;3..运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">+</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">123</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;">// 123</span></span>
<span class="line"><span style="color:#F6F6F4;">a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">123</span></span>
<span class="line"><span style="color:#F6F6F4;">b </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;">a </span><span style="color:#7B7F8B;">//-123</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">+</span><span style="color:#032F62;">&#39;123&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 123</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span></span>
<span class="line"><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">a </span><span style="color:#6A737D;">//-123</span></span></code></pre></div><h3 id="_4-自增和自减" tabindex="-1">4.自增和自减 <a class="header-anchor" href="#_4-自增和自减" aria-label="Permalink to &quot;4.自增和自减&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//	++ 使用后回事原来的变量立刻增加1</span></span>
<span class="line"><span style="color:#F6F6F4;">a</span><span style="color:#F286C4;">++</span></span>
<span class="line"><span style="color:#F6F6F4;">a</span><span style="color:#F286C4;">--</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">//前自增:返回自增前的值</span></span>
<span class="line"><span style="color:#7B7F8B;">//后自增:返回自增后的值</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//	++ 使用后回事原来的变量立刻增加1</span></span>
<span class="line"><span style="color:#24292E;">a</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">a</span><span style="color:#D73A49;">--</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//前自增:返回自增前的值</span></span>
<span class="line"><span style="color:#6A737D;">//后自增:返回自增后的值</span></span></code></pre></div><h3 id="_5-逻辑运算符" tabindex="-1">5.逻辑运算符 <a class="header-anchor" href="#_5-逻辑运算符" aria-label="Permalink to &quot;5.逻辑运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">   </span><span style="color:#7B7F8B;">//逻辑非:对布尔值值取反,对非布尔值值取反,会先将其转为布尔值值再取反,可运用于隐式转布尔值   !!123 -&gt; true</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span></span>
<span class="line"><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">//逻辑与:左右都为true返回true,否则返回false;非布尔值运算,会先转为布尔值后运算,但是最终返回原值</span></span>
<span class="line"><span style="color:#F6F6F4;">    	</span><span style="color:#7B7F8B;">//-	第一个值为(falsy),则直接返回第一个值的原值1,如果第一个值为ture,则直接返回第二个值</span></span>
<span class="line"><span style="color:#F6F6F4;">    	</span><span style="color:#BF9EEE;">NaN</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">NaN</span></span>
<span class="line"><span style="color:#F6F6F4;">		</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;"> 		</span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">undefined</span><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">undefined</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;"> 		</span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">//逻辑或:左右有true,则不看第二个值,则返回true的原值,否则返回false 	</span></span>
<span class="line"><span style="color:#F6F6F4;">      	</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">		</span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;">	 </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">	</span></span>
<span class="line"><span style="color:#F6F6F4;">		</span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> {a </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">}	</span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;">	 {a </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">!</span><span style="color:#24292E;">   </span><span style="color:#6A737D;">//逻辑非:对布尔值值取反,对非布尔值值取反,会先将其转为布尔值值再取反,可运用于隐式转布尔值   !!123 -&gt; true</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">//逻辑与:左右都为true返回true,否则返回false;非布尔值运算,会先转为布尔值后运算,但是最终返回原值</span></span>
<span class="line"><span style="color:#24292E;">    	</span><span style="color:#6A737D;">//-	第一个值为(falsy),则直接返回第一个值的原值1,如果第一个值为ture,则直接返回第二个值</span></span>
<span class="line"><span style="color:#24292E;">    	</span><span style="color:#005CC5;">NaN</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">	</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NaN</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> 		</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">	</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">undefined</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> 		</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">||</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">//逻辑或:左右有true,则不看第二个值,则返回true的原值,否则返回false 	</span></span>
<span class="line"><span style="color:#24292E;">      	</span><span style="color:#005CC5;">12</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">		</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">	 </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">	</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> {a : </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">}	</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">	 {a : </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_6-关系运算符" tabindex="-1">6.关系运算符 <a class="header-anchor" href="#_6-关系运算符" aria-label="Permalink to &quot;6.关系运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//用来检查两个值的关系是否成立,成立返回true,否则返回false (多个比较用&amp;&amp;)</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">&lt;=</span></span>
<span class="line"><span style="color:#7B7F8B;">// 非数值与数值比较会先非数值转为数值再比较  7 &lt; &#39;10&#39; -&gt;  true</span></span>
<span class="line"><span style="color:#7B7F8B;">//	两端为字符串则逐个比较字符的Unicode编码	 </span></span>
<span class="line"><span style="color:#F6F6F4;">   </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">a</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">b</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">		</span></span>
<span class="line"><span style="color:#F6F6F4;">   </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">abc</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">b</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">(比完第一位则结束)</span></span>
<span class="line"><span style="color:#F6F6F4;">   </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">12</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">2</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//用来检查两个值的关系是否成立,成立返回true,否则返回false (多个比较用&amp;&amp;)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">	</span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;">	</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">	</span><span style="color:#D73A49;">&lt;=</span></span>
<span class="line"><span style="color:#6A737D;">// 非数值与数值比较会先非数值转为数值再比较  7 &lt; &#39;10&#39; -&gt;  true</span></span>
<span class="line"><span style="color:#6A737D;">//	两端为字符串则逐个比较字符的Unicode编码	 </span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">		</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#032F62;">&#39;abc&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">(比完第一位则结束)</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#032F62;">&#39;12&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">	</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span></code></pre></div><h3 id="_7-相等运算符" tabindex="-1">7.相等运算符 <a class="header-anchor" href="#_7-相等运算符" aria-label="Permalink to &quot;7.相等运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">==/!=</span><span style="color:#F6F6F4;">	</span><span style="color:#7B7F8B;">//用来比较两个值是否相等/不相等,不同类型会转为相同类型再比较	</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">2</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#7B7F8B;">//null和undefined进行相等比较会返回true(null == undefined -&gt; true)</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#7B7F8B;">//NaN不和任何值相等,包括它自身</span></span>
<span class="line"><span style="color:#F286C4;">===/!==</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;">//检查两个值是否全等/不全等,不会自动类型转换</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">2</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#7B7F8B;">//null === undefined -&gt; false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">==/!=</span><span style="color:#24292E;">	</span><span style="color:#6A737D;">//用来比较两个值是否相等/不相等,不同类型会转为相同类型再比较	</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">	</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">//null和undefined进行相等比较会返回true(null == undefined -&gt; true)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">//NaN不和任何值相等,包括它自身</span></span>
<span class="line"><span style="color:#D73A49;">===/!==</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//检查两个值是否全等/不全等,不会自动类型转换</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">	</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">//null === undefined -&gt; false</span></span></code></pre></div><h3 id="_8-条件运算符" tabindex="-1">8.条件运算符 <a class="header-anchor" href="#_8-条件运算符" aria-label="Permalink to &quot;8.条件运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">表达式 </span><span style="color:#F286C4;">?</span><span style="color:#F6F6F4;"> 表达式1 </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> 表达式2	</span><span style="color:#7B7F8B;">//let max = a &gt; b ? a : b</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">表达式 </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> 表达式1 </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 表达式2	</span><span style="color:#6A737D;">//let max = a &gt; b ? a : b</span></span></code></pre></div><h3 id="_9-控制语句" tabindex="-1">9.控制语句 <a class="header-anchor" href="#_9-控制语句" aria-label="Permalink to &quot;9.控制语句&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">{	}</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(){	}</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;">{	}</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;">//不加{}if只会控制紧随其后的一条语句</span></span>
<span class="line"><span style="color:#F6F6F4;"> </span></span>
<span class="line"><span style="color:#F286C4;">switch</span><span style="color:#F6F6F4;">(表达式){</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">case</span><span style="color:#F6F6F4;"> 表达式:</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">break</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">...</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">default</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">...</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//表达式进行全等比较,满足则执行代码,否则比较其他case后的表达式</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">{	}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(){	}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{	}</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//不加{}if只会控制紧随其后的一条语句</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;">(表达式){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> 表达式:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">break</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">default</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//表达式进行全等比较,满足则执行代码,否则比较其他case后的表达式</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_10-循环语句" tabindex="-1">10.循环语句 <a class="header-anchor" href="#_10-循环语句" aria-label="Permalink to &quot;10.循环语句&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//循环三要素 1.初始化变量	2.条件表达式	3.更新表达式</span></span>
<span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;">(条件表达式){</span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F286C4;">do</span><span style="color:#F6F6F4;">{	</span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">	}</span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;">(表达式)	</span><span style="color:#7B7F8B;">//先执行一次循环体,再判断条件是否执行循环体</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">;i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">){ </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;"> } </span><span style="color:#7B7F8B;">//for(;;)死循环</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//循环三要素 1.初始化变量	2.条件表达式	3.更新表达式</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;">(条件表达式){</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">do</span><span style="color:#24292E;">{	</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">	}</span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(表达式)	</span><span style="color:#6A737D;">//先执行一次循环体,再判断条件是否执行循环体</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){ </span><span style="color:#D73A49;">...</span><span style="color:#24292E;"> } </span><span style="color:#6A737D;">//for(;;)死循环</span></span></code></pre></div><blockquote><p><strong>break与continue</strong>:broken_heart:终止离它最近的循环, break立即循环停止; continue跳过当前循环,继续下一次循环</p></blockquote><h3 id="_11-数据类型" tabindex="-1">11.数据类型 <a class="header-anchor" href="#_11-数据类型" aria-label="Permalink to &quot;11.数据类型&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//原始值(7种):</span></span>
<span class="line"><span style="color:#F6F6F4;">	Number,String,Boolean,Null,Undefined,BigInt,Symbol</span></span>
<span class="line"><span style="color:#7B7F8B;">//引用值(对象)</span></span>
<span class="line"><span style="color:#F6F6F4;">	Object</span></span>
<span class="line"><span style="color:#F6F6F4;">    {</span></span>
<span class="line"><span style="color:#F6F6F4;">        [</span><span style="color:#62E884;">Symbol</span><span style="color:#F6F6F4;">()]:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">此值不可枚举</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//原始值(7种):</span></span>
<span class="line"><span style="color:#24292E;">	Number,String,Boolean,Null,Undefined,BigInt,Symbol</span></span>
<span class="line"><span style="color:#6A737D;">//引用值(对象)</span></span>
<span class="line"><span style="color:#24292E;">	Object</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        [</span><span style="color:#6F42C1;">Symbol</span><span style="color:#24292E;">()]:</span><span style="color:#032F62;">&#39;此值不可枚举&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div>`,25),e=[o];function t(c,r,y,F,i,E){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{C as __pageData,u as default};
