import{_ as e,o as a,c as r,V as o}from"./chunks/framework.c6d8cbec.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/spring/spring-01.md","filePath":"interview/backend/spring/spring-01.md"}'),n={name:"interview/backend/spring/spring-01.md"},t=o('<h3 id="_1、spring-mvc的主要组件" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#1spring-mvc%E7%9A%84%E4%B8%BB%E8%A6%81%E7%BB%84%E4%BB%B6" target="_blank" rel="noreferrer">1、Spring MVC的主要组件？</a> <a class="header-anchor" href="#_1、spring-mvc的主要组件" aria-label="Permalink to &quot;[1、Spring MVC的主要组件？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题，中级面试题，大汇总.md#1spring-mvc的主要组件)&quot;">​</a></h3><p><strong>1、</strong> 前端控制器 DispatcherServlet（不需要程序员开发）</p><p><strong>作用：</strong></p><p>接收请求、响应结果，相当于转发器，有了DispatcherServlet 就减少了其它组件之间的耦合度。</p><p><strong>2、</strong> 处理器映射器HandlerMapping（不需要程序员开发）</p><p><strong>作用：</strong></p><p>根据请求的URL来查找Handler</p><p><strong>3、</strong> 处理器适配器HandlerAdapter</p><p><strong>注意：</strong></p><p>在编写Handler的时候要按照HandlerAdapter要求的规则去编写，这样适配器HandlerAdapter才可以正确的去执行Handler。</p><p><strong>4、</strong> 处理器Handler（需要程序员开发）</p><p><strong>5、</strong> 视图解析器 ViewResolver（不需要程序员开发）</p><p><strong>作用：</strong></p><p>进行视图的解析，根据视图逻辑名解析成真正的视图（view）</p><p><strong>6、</strong> 视图View（需要程序员开发jsp）</p><p>View是一个接口， 它的实现类支持不同的视图类型（jsp，freemarker，pdf等等）</p><h3 id="_2、什么是hystrix-它如何实现容错" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#2%E4%BB%80%E4%B9%88%E6%98%AFhystrix%E5%AE%83%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%AE%B9%E9%94%99" target="_blank" rel="noreferrer">2、什么是Hystrix？它如何实现容错？</a> <a class="header-anchor" href="#_2、什么是hystrix-它如何实现容错" aria-label="Permalink to &quot;[2、什么是Hystrix？它如何实现容错？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题，中级面试题，大汇总.md#2什么是hystrix它如何实现容错)&quot;">​</a></h3><p>Hystrix是一个延迟和容错库，旨在隔离远程系统，服务和第三方库的访问点，当出现故障是不可避免的故障时，停止级联故障并在复杂的分布式系统中实现弹性。</p><p>通常对于使用微服务架构开发的系统，涉及到许多微服务。这些微服务彼此协作。</p><p>思考以下微服务</p><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0814/02/img_2.png#alt=img%5C_2.png" alt=""></p><p>假设如果上图中的微服务9失败了，那么使用传统方法我们将传播一个异常。但这仍然会导致整个系统崩溃。</p><p>随着微服务数量的增加，这个问题变得更加复杂。微服务的数量可以高达1000.这是hystrix出现的地方 我们将使用Hystrix在这种情况下的Fallback方法功能。我们有两个服务employee-consumer使用由employee-consumer公开的服务。</p><p>简化图如下所示</p><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0814/02/img_3.png#alt=img%5C_3.png" alt=""></p><p>现在假设由于某种原因，employee-producer公开的服务会抛出异常。我们在这种情况下使用Hystrix定义了一个回退方法。这种后备方法应该具有与公开服务相同的返回类型。如果暴露服务中出现异常，则回退方法将返回一些值。</p><h3 id="_3、什么是-javaconfig" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#3%E4%BB%80%E4%B9%88%E6%98%AF-javaconfig" target="_blank" rel="noreferrer">3、什么是 JavaConfig？</a> <a class="header-anchor" href="#_3、什么是-javaconfig" aria-label="Permalink to &quot;[3、什么是 JavaConfig？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题，中级面试题，大汇总.md#3什么是-javaconfig)&quot;">​</a></h3><p>Spring JavaConfig 是 Spring 社区的产品，Spring 3、0引入了他，它提供了配置 Spring IOC 容器的纯Java 方法。因此它有助于避免使用 XML 配置。使用 JavaConfig 的优点在于：</p><p>面向对象的配置。由于配置被定义为 JavaConfig 中的类，因此用户可以充分利用 Java 中的面向对象功能。一个配置类可以继承另一个，重写它的<a href="/docs/Bean.html">@Bean </a> 方法等。</p><p>减少或消除 XML 配置。基于依赖注入原则的外化配置的好处已被证明。但是，许多开发人员不希望在 XML 和 Java 之间来回切换。JavaConfig 为开发人员提供了一种纯 Java 方法来配置与 XML 配置概念相似的 Spring 容器。从技术角度来讲，只使用 JavaConfig 配置类来配置容器是可行的，但实际上很多人认为将JavaConfig 与 XML 混合匹配是理想的。</p><p>类型安全和重构友好。JavaConfig 提供了一种类型安全的方法来配置 Spring容器。由于 Java 5、0 对泛型的支持，现在可以按类型而不是按名称检索 bean，不需要任何强制转换或基于字符串的查找。</p><p><strong>常用的Java config：</strong></p><p>@Configuration：在类上打上写下此注解，表示这个类是配置类</p><p>@ComponentScan：在配置类上添加 <a href="/docs/ComponentScan.html">@ComponentScan </a> 注解。该注解默认会扫描该类所在的包下所有的配置类，相当于之前的 &lt;context:component-scan &gt;。</p><p>@Bean：bean的注入：相当于以前的&lt; bean id=&quot;objectMapper&quot; class=&quot;org、codehaus、jackson、map、ObjectMapper&quot; /&gt;</p><p>@EnableWebMvc：相当于xml的&lt;mvc:annotation-driven &gt;</p><p>@ImportResource： 相当于xml的 &lt; import resource=&quot;applicationContext-cache、xml&quot;&gt;</p><h3 id="_4、springboot-中如何实现定时任务" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#4springboot-%E4%B8%AD%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-" target="_blank" rel="noreferrer">4、SpringBoot 中如何实现定时任务 ?</a> <a class="header-anchor" href="#_4、springboot-中如何实现定时任务" aria-label="Permalink to &quot;[4、SpringBoot 中如何实现定时任务 ?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题，中级面试题，大汇总.md#4springboot-中如何实现定时任务-)&quot;">​</a></h3><p>定时任务也是一个常见的需求，SpringBoot 中对于定时任务的支持主要还是来自 Spring 框架。</p><p>在 SpringBoot 中使用定时任务主要有两种不同的方式，一个就是使用 Spring 中的 <a href="/docs/Scheduled.html">@Scheduled </a> 注解，另一个则是使用第三方框架 Quartz。</p><p>使用 Spring 中的 <a href="/docs/Scheduled.html">@Scheduled </a> 的方式主要通过 <a href="/docs/Scheduled.html">@Scheduled </a> 注解来实现。</p><p>使用 Quartz ，则按照 Quartz 的方式，定义 Job 和 Trigger 即可。</p><h3 id="_5、springboot-配置加载顺序" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#5springboot-%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F" target="_blank" rel="noreferrer">5、SpringBoot 配置加载顺序?</a> <a class="header-anchor" href="#_5、springboot-配置加载顺序" aria-label="Permalink to &quot;[5、SpringBoot 配置加载顺序?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题，中级面试题，大汇总.md#5springboot-配置加载顺序)&quot;">​</a></h3><p><strong>1、</strong> properties文件 2、YAML文件 3、系统环境变量 4、命令行参数</p><h3 id="_6、康威定律是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#6%E5%BA%B7%E5%A8%81%E5%AE%9A%E5%BE%8B%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">6、康威定律是什么？</a> <a class="header-anchor" href="#_6、康威定律是什么" aria-label="Permalink to &quot;[6、康威定律是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题，中级面试题，大汇总.md#6康威定律是什么)&quot;">​</a></h3><p>康威定律指出，“设计系统的组织，其产生的设计等同于组织之内、组织之间的沟通结构。” 面试官可能会问反微服务面试问题，比如康威定律与微服务的关系。一些松散耦合的api形成了微服务的体系结构。这种结构非常适合小团队实现自治组件的方式。这种体系结构使组织在重组其工作流程时更加灵活。</p><h3 id="_7、springboot有哪些优点" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#7springboot%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%98%E7%82%B9" target="_blank" rel="noreferrer">7、SpringBoot有哪些优点？</a> <a class="header-anchor" href="#_7、springboot有哪些优点" aria-label="Permalink to &quot;[7、SpringBoot有哪些优点？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题，中级面试题，大汇总.md#7springboot有哪些优点)&quot;">​</a></h3><p>减少开发，测试时间和努力。</p><p>使用JavaConfig有助于避免使用XML。</p><p>避免大量的Maven导入和各种版本冲突。</p><p>提供意见发展方法。</p><p>通过提供默认值快速开始开发。</p><p>没有单独的Web服务器需要。这意味着你不再需要启动Tomcat，Glassfish或其他任何东西。</p><p>需要更少的配置 因为没有web.xml文件。只需添加用@ Configuration注释的类，然后添加用@Bean注释的方法，Spring将自动加载对象并像以前一样对其进行管理。您甚至可以将@Autowired添加到bean方法中，以使Spring自动装入需要的依赖关系中。基于环境的配置 使用这些属性，您可以将您正在使用的环境传递到应用程序：-Dspring.profiles.active = {enviornment}。在加载主应用程序属性文件后，Spring将在（application{environment} .properties）中加载后续的应用程序属性文件。</p><h3 id="_8、什么是-freemarker-模板" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#8%E4%BB%80%E4%B9%88%E6%98%AF-freemarker-%E6%A8%A1%E6%9D%BF" target="_blank" rel="noreferrer">8、什么是 FreeMarker 模板？</a> <a class="header-anchor" href="#_8、什么是-freemarker-模板" aria-label="Permalink to &quot;[8、什么是 FreeMarker 模板？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题，中级面试题，大汇总.md#8什么是-freemarker-模板)&quot;">​</a></h3><p>FreeMarker 是一个基于 Java 的模板引擎，最初专注于使用 MVC 软件架构进行动态网页生成。使用 Freemarker 的主要优点是表示层和业务层的完全分离。程序员可以处理应用程序代码，而设计人员可以处理 html 页面设计。最后使用freemarker 可以将这些结合起来，给出最终的输出页面。</p><h3 id="_9、spring-cloud-config" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#9spring-cloud-config" target="_blank" rel="noreferrer">9、Spring Cloud Config</a> <a class="header-anchor" href="#_9、spring-cloud-config" aria-label="Permalink to &quot;[9、Spring Cloud Config](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题，中级面试题，大汇总.md#9spring-cloud-config)&quot;">​</a></h3><p>Config能够管理所有微服务的配置文件</p><p>集中配置管理工具，分布式系统中统一的外部配置管理，默认使用Git来存储配置，可以支持客户端配置的刷新及加密、解密操作。</p><h3 id="_10、什么是-springboot" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E4%B8%AD%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#10%E4%BB%80%E4%B9%88%E6%98%AF-springboot" target="_blank" rel="noreferrer">10、什么是 SpringBoot？</a> <a class="header-anchor" href="#_10、什么是-springboot" aria-label="Permalink to &quot;[10、什么是 SpringBoot？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题，中级面试题，大汇总.md#10什么是-springboot)&quot;">​</a></h3><p>SpringBoot 是 Spring 开源组织下的子项目，是 Spring 组件一站式解决方案，主要是简化了使用 Spring 的难度，简省了繁重的配置，提供了各种启动器，开发者能快速上手。</p><h3 id="_11、spring-cloud-openfeign" tabindex="-1">11、Spring Cloud OpenFeign <a class="header-anchor" href="#_11、spring-cloud-openfeign" aria-label="Permalink to &quot;11、Spring Cloud OpenFeign&quot;">​</a></h3><h3 id="_12、springboot-支持哪些日志框架-推荐和默认的日志框架是哪个" tabindex="-1">12、SpringBoot 支持哪些日志框架？推荐和默认的日志框架是哪个？ <a class="header-anchor" href="#_12、springboot-支持哪些日志框架-推荐和默认的日志框架是哪个" aria-label="Permalink to &quot;12、SpringBoot 支持哪些日志框架？推荐和默认的日志框架是哪个？&quot;">​</a></h3><h3 id="_13、如何使用-springboot-实现全局异常处理" tabindex="-1">13、如何使用 SpringBoot 实现全局异常处理？ <a class="header-anchor" href="#_13、如何使用-springboot-实现全局异常处理" aria-label="Permalink to &quot;13、如何使用 SpringBoot 实现全局异常处理？&quot;">​</a></h3><h3 id="_14、什么是javaconfig" tabindex="-1">14、什么是JavaConfig？ <a class="header-anchor" href="#_14、什么是javaconfig" aria-label="Permalink to &quot;14、什么是JavaConfig？&quot;">​</a></h3><h3 id="_15、为什么在微服务中需要reports报告和dashboards仪表板" tabindex="-1">15、为什么在微服务中需要Reports报告和Dashboards仪表板？ <a class="header-anchor" href="#_15、为什么在微服务中需要reports报告和dashboards仪表板" aria-label="Permalink to &quot;15、为什么在微服务中需要Reports报告和Dashboards仪表板？&quot;">​</a></h3><h3 id="_16、微服务的端到端测试意味着什么" tabindex="-1">16、微服务的端到端测试意味着什么？ <a class="header-anchor" href="#_16、微服务的端到端测试意味着什么" aria-label="Permalink to &quot;16、微服务的端到端测试意味着什么？&quot;">​</a></h3><h3 id="_17、什么是spring的依赖注入" tabindex="-1">17、什么是Spring的依赖注入？ <a class="header-anchor" href="#_17、什么是spring的依赖注入" aria-label="Permalink to &quot;17、什么是Spring的依赖注入？&quot;">​</a></h3><h3 id="_18、哪些是重要的bean生命周期方法-你能重载它们吗" tabindex="-1">18、哪些是重要的bean生命周期方法？ 你能重载它们吗？ <a class="header-anchor" href="#_18、哪些是重要的bean生命周期方法-你能重载它们吗" aria-label="Permalink to &quot;18、哪些是重要的bean生命周期方法？ 你能重载它们吗？&quot;">​</a></h3><h3 id="_19、什么是-springboot-启动类注解" tabindex="-1">19、什么是 SpringBoot 启动类注解： <a class="header-anchor" href="#_19、什么是-springboot-启动类注解" aria-label="Permalink to &quot;19、什么是 SpringBoot 启动类注解：&quot;">​</a></h3><h3 id="_20、webapplicationcontext" tabindex="-1">20、WebApplicationContext <a class="header-anchor" href="#_20、webapplicationcontext" aria-label="Permalink to &quot;20、WebApplicationContext&quot;">​</a></h3><h3 id="_21、springboot-支持哪些日志框架-推荐和默认的日志框架是哪个" tabindex="-1">21、SpringBoot 支持哪些日志框架？推荐和默认的日志框架是哪个？ <a class="header-anchor" href="#_21、springboot-支持哪些日志框架-推荐和默认的日志框架是哪个" aria-label="Permalink to &quot;21、SpringBoot 支持哪些日志框架？推荐和默认的日志框架是哪个？&quot;">​</a></h3><h3 id="_22、使用-springboot-开发分布式微服务时-我们面临什么问题" tabindex="-1">22、使用 SpringBoot 开发分布式微服务时，我们面临什么问题 <a class="header-anchor" href="#_22、使用-springboot-开发分布式微服务时-我们面临什么问题" aria-label="Permalink to &quot;22、使用 SpringBoot 开发分布式微服务时，我们面临什么问题&quot;">​</a></h3><h3 id="_23、什么是基于注解的容器配置" tabindex="-1">23、什么是基于注解的容器配置? <a class="header-anchor" href="#_23、什么是基于注解的容器配置" aria-label="Permalink to &quot;23、什么是基于注解的容器配置?&quot;">​</a></h3><h3 id="_24、什么是springboot" tabindex="-1">24、什么是SpringBoot <a class="header-anchor" href="#_24、什么是springboot" aria-label="Permalink to &quot;24、什么是SpringBoot&quot;">​</a></h3><h3 id="_25、可以通过多少种方式完成依赖注入" tabindex="-1">25、可以通过多少种方式完成依赖注入？ <a class="header-anchor" href="#_25、可以通过多少种方式完成依赖注入" aria-label="Permalink to &quot;25、可以通过多少种方式完成依赖注入？&quot;">​</a></h3><h3 id="_26、怎样在方法里面得到request-或者session" tabindex="-1">26、怎样在方法里面得到Request,或者Session？ <a class="header-anchor" href="#_26、怎样在方法里面得到request-或者session" aria-label="Permalink to &quot;26、怎样在方法里面得到Request,或者Session？&quot;">​</a></h3><h3 id="_27、eureka和zookeeper都可以提供服务注册与发现的功能-请说说两个的区别" tabindex="-1">27、eureka和zookeeper都可以提供服务注册与发现的功能，请说说两个的区别？ <a class="header-anchor" href="#_27、eureka和zookeeper都可以提供服务注册与发现的功能-请说说两个的区别" aria-label="Permalink to &quot;27、eureka和zookeeper都可以提供服务注册与发现的功能，请说说两个的区别？&quot;">​</a></h3><h3 id="_28、设计微服务的最佳实践是什么" tabindex="-1">28、设计微服务的最佳实践是什么？ <a class="header-anchor" href="#_28、设计微服务的最佳实践是什么" aria-label="Permalink to &quot;28、设计微服务的最佳实践是什么？&quot;">​</a></h3><h3 id="_29、您对mike-cohn的测试金字塔了解多少" tabindex="-1">29、您对Mike Cohn的测试金字塔了解多少？ <a class="header-anchor" href="#_29、您对mike-cohn的测试金字塔了解多少" aria-label="Permalink to &quot;29、您对Mike Cohn的测试金字塔了解多少？&quot;">​</a></h3><h3 id="_30、服务雪崩" tabindex="-1">30、服务雪崩？ <a class="header-anchor" href="#_30、服务雪崩" aria-label="Permalink to &quot;30、服务雪崩？&quot;">​</a></h3><h3 id="_31、spingmvc中的控制器的注解一般用哪个-有没有别的注解可以替代" tabindex="-1">31、SpingMvc中的控制器的注解一般用哪个,有没有别的注解可以替代？ <a class="header-anchor" href="#_31、spingmvc中的控制器的注解一般用哪个-有没有别的注解可以替代" aria-label="Permalink to &quot;31、SpingMvc中的控制器的注解一般用哪个,有没有别的注解可以替代？&quot;">​</a></h3>',82),i=[t];function p(s,g,l,h,E,c){return a(),r("div",null,i)}const B=e(n,[["render",p]]);export{u as __pageData,B as default};
