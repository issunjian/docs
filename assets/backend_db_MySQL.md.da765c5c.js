import{_ as s,o as a,c as n,V as p}from"./chunks/framework.c6d8cbec.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"backend/db/MySQL.md","filePath":"backend/db/MySQL.md"}'),l={name:"backend/db/MySQL.md"},o=p(`<h2 id="数据库开发-mysql" tabindex="-1">数据库开发-MySQL <a class="header-anchor" href="#数据库开发-mysql" aria-label="Permalink to &quot;数据库开发-MySQL&quot;">​</a></h2><p>目标</p><ol><li>能够<strong>说出</strong> 为什么要使用数据库以及常见的几种数据库管理系统 🍐</li><li>能够<strong>说出</strong> 数据库的存在形式 🍐</li><li>能够<strong>操作</strong> Mysql 安装成功并且登陆成功</li><li>能够使用 Navicat 操作数据库 ✏️</li><li>能够使用 DML 添加数据，删除数据，修改数据 ✏️</li><li>能够使用 DQL 查询数据 ✏️ ❤️</li></ol><p>知识储备</p><ol><li>理解数据要持久化存储的需求</li><li>有用过excel表格存储数据的经历</li><li>有使用过wps软件操作excel表格的经历</li></ol><p>前言</p><p><strong>GIF动画教程</strong> 📹 👇</p><p><img src="http://image.yangeit.cn/i/2023/04/04/GIF_mysql_desc_01.gif" alt="image-20221205001241294"></p><p>image-20221205001241294</p><ol><li>一般将<strong>web应用程序分为三层</strong>，即：<a href="http://image.yangeit.cn/i/2023/04/05/image-20221204194207812.png" target="_blank" rel="noreferrer">Controller、Service、Daoopen in new window</a></li><li>在真实的企业开发中呢，都会采用数据库来<strong>存储和管理</strong>数据(数据库：英文为 DataBase，简称DB,它是存储和管理数据的仓库) <ul><li>像我们日常访问的电商网站京东，企业内部的管理系统OA、ERP、CRM这类的系统，以及大家每天都会刷的头条、抖音类的app，那这些大家所看到的数据，其实都是存储在数据库中的。</li></ul></li><li>SQL（<strong>S</strong>tructured <strong>Q</strong>uery <strong>L</strong>anguage，简称SQL）：<strong>结构化查询语言</strong>，它是操作关系型数据库的编程语言，定义了一套操作关系型数据库的统一标准。<strong>我们学习数据库开发，最为重要的就是学习SQL语句</strong></li><li>排名前十的数据库：<img src="http://www.yangeit.cn:21010/assets/image-20221205120408757-f999f865.png" alt="image-20221205120408757"></li></ol><p>结论</p><p><strong>只要我们学会了SQL语句，就可以通过SQL语句来操作Mysql</strong>🎯，也可以通过SQL语句来操作其他关系型数据库，如oracle等</p><p><strong>课程内容拆解为3部分知识点：</strong></p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205122937131-377da561.png" alt="image-20221205122937131"></p><p>image-20221205122937131</p><h2 id="_1-mysql概述-✏️-🍐" tabindex="-1">1. MySQL概述 ✏️ 🍐 <a class="header-anchor" href="#_1-mysql概述-✏️-🍐" aria-label="Permalink to &quot;1\\. MySQL概述 ✏️ 🍐&quot;">​</a></h2><p><img src="http://www.yangeit.cn:21010/assets/image-20220610191829748-af4a2726.png" alt="image-20220610191829748"></p><p>image-20220610191829748</p><p>官网：<a href="https://dev.mysql.com/" target="_blank" rel="noreferrer">https://dev.mysql.com/open in new window</a></p><h3 id="_1-1-安装-✏️" tabindex="-1">1.1 安装 ✏️ <a class="header-anchor" href="#_1-1-安装-✏️" aria-label="Permalink to &quot;1.1 安装 ✏️&quot;">​</a></h3><h4 id="_1-1-1-版本" tabindex="-1">1.1.1 版本 <a class="header-anchor" href="#_1-1-1-版本" aria-label="Permalink to &quot;1.1.1 版本&quot;">​</a></h4><p>MySQL官方提供了两个版本：</p><ul><li>商业版本（MySQL Enterprise Edition） <ul><li>该版本是收费的，我们可以使用30天。 官方会提供对应的技术支持。</li></ul></li><li>社区版本（MySQL Community Server） 👈 <ul><li>该版本是<strong>免费的</strong>，但是MySQL不会提供任何的技术支持。</li></ul></li></ul><blockquote><p>本节，采用的是MySQL的社区版本（8.0.31）</p></blockquote><h4 id="_1-1-3-连接" tabindex="-1">1.1.3 连接 <a class="header-anchor" href="#_1-1-3-连接" aria-label="Permalink to &quot;1.1.3 连接&quot;">​</a></h4><p>MySQL服务器启动完毕后，然后再使用如下指令，来连接MySQL服务器：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">mysql -u用户名 -p密码 [-h数据库服务器的IP地址 -P端口号]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mysql -u用户名 -p密码 [-h数据库服务器的IP地址 -P端口号]</span></span></code></pre></div><blockquote><p>-h 参数不加，默认连接的是本地 127.0.0.1 的MySQL服务器</p><p>-P 参数不加，默认连接的端口号是 3306</p></blockquote><p><strong>上述指令，可以有两种形式：</strong></p><ul><li>密码直接在-p参数之后直接指定 （这种方式不安全，密码直接以明文形式出现在命令行）</li></ul><p><img src="http://www.yangeit.cn:21010/assets/image-20221205143139656-fed4d1f8.png" alt="image-20221205143139656"></p><p>image-20221205143139656</p><ul><li>密码在-p回车之后，在命令行中输入密码，然后回车</li></ul><p><img src="http://www.yangeit.cn:21010/assets/image-20221205143418632-2e54f84f.png" alt="image-20221205143418632"></p><p>image-20221205143418632</p><h4 id="_1-1-4-企业使用方式-了解" tabindex="-1">1.1.4 企业使用方式(了解) <a class="header-anchor" href="#_1-1-4-企业使用方式-了解" aria-label="Permalink to &quot;1.1.4 企业使用方式(了解)&quot;">​</a></h4><ol><li>上述的MySQL服务器我们是安装在本地的，在真实的企业开发中，MySQL数据库服务器是不会在我们本地安装的，是在公司的服务器上安装的，</li><li>服务器还需要放置在专门的IDC机房中的，IDC机房需要保证恒温、恒湿、恒压，而且还要保证网络、电源的可靠性(备用电源及网络)。</li></ol><p><strong>GIF动画教程</strong> 📹 👇 <img src="http://image.yangeit.cn/i/2023/04/04/GIF_mysql_desc_02.gif" alt="image-20221205143418632"></p><h3 id="_1-2-数据模型" tabindex="-1">1.2 数据模型 <a class="header-anchor" href="#_1-2-数据模型" aria-label="Permalink to &quot;1.2 数据模型&quot;">​</a></h3><p>数据模型</p><p>知悉Mysql数据库当中到底是<strong>如何来存储和管理数据</strong>的</p><ul><li>mysql数据库是关系型数据库</li></ul><p><strong>关系型数据库（RDBMS）</strong></p><p>概念：建立在关系模型基础上，由多张相互连接的<strong>二维表</strong>组成的数据库。</p><p>而<strong>所谓二维表，指的是由行和列组成的表</strong>，如下图：</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205145028667-a82c6209.png" alt="image-20221205145028667"></p><p>image-20221205145028667</p><p>二维表的优点：</p><ul><li>使用表存储数据，格式统一，便于维护</li><li>使用SQL语言操作，标准统一，使用方便，可用于复杂查询</li></ul><blockquote><p>我们之前提到的MySQL、Oracle、DB2、SQLServer这些都是属于关系型数据库，里面都是基于二维表存储数据的。</p><p>结论：基于二维表存储数据的数据库就成为关系型数据库，不是基于二维表存储数据的数据库，就是非关系型数据库（比如大家后面要学习的<a href="http://www.yangeit.cn:21010/takeoutproject_optimize2021/dredis01.html" target="_blank" rel="noreferrer">Redis</a>，就属于非关系型数据库）。</p></blockquote><p><strong>2). 数据模型</strong></p><p>MySQL是关系型数据库，是基于二维表进行数据存储的，具体的结构图下:</p><p><strong>GIF动画教程</strong> 📹 👇 <img src="http://image.yangeit.cn/i/2023/04/04/GIF_mysql_desc_03.gif" alt="image-202208291117414ss19"></p><ul><li>通过MySQL客户端连接数据库管理系统DBMS，然后通过DBMS操作数据库</li><li>使用MySQL客户端，向数据库管理系统发送一条SQL语句，由数据库管理系统根据SQL语句指令去操作数据库中的表结构及数据</li><li>一个数据库服务器中可以创建多个数据库，一个数据库中也可以包含多张表，而一张表中又可以包含多行记录。</li></ul><blockquote><p>在Mysql数据库服务器当中存储数据，你需要：</p><ol><li>先去创建数据库（可以创建多个数据库，之间是相互独立的）</li><li>在数据库下再去创建数据表（一个数据库下可以创建多张表）</li><li>再将数据存放在数据表中（一张表可以存储多行数据）</li></ol></blockquote><p>课堂作业</p><p>🎻 0. mysql数据库管理系统，是哪个公司的？有什么特性？</p><p>🎻 1. mysql数据库管理系统，数据库，表，字段之间存在什么关系？</p><p>🎻 2. 要往mysql数据库中插入数据或者查询数据，需要用什么语言？</p><h3 id="_1-3-sql简介" tabindex="-1">1.3 SQL简介 <a class="header-anchor" href="#_1-3-sql简介" aria-label="Permalink to &quot;1.3 SQL简介&quot;">​</a></h3><p>SQL：结构化查询语言，使用SQL可以操作任何关系型数据库</p><p><strong>SQL通用语法</strong></p><p>1、SQL语句可以单行或多行书写，<strong>以分号结尾</strong>。</p><p>点击查看图解</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205151656214-132a49ec.png" alt="image-20221205151656214"></p><p>image-20221205151656214</p><p>2、SQL语句可以使用<strong>空格/缩进</strong>来增强语句的可读性。</p><p>点击查看图解</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205151953441-f6a8e6df.png" alt="image-20221205151953441"></p><p>image-20221205151953441</p><p>3、<strong>MySQL</strong>数据库的SQL语句<strong>不区分大小写。</strong>(注：oracle数据库区分)</p><p>点击查看图解</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205152112070-469789c0.png" alt="image-20221205152112070"></p><p>image-20221205152112070</p><p>4、注释：</p><ul><li>单行注释：-- 注释内容 或 # 注释内容(MySQL特有)</li><li>多行注释： /<em>注释内容</em>/</li></ul><blockquote><p>以上就是SQL语句的通用语法，这些通用语法大家目前先有一个直观的认识，我们后面在讲解每一类SQL语句的时候，还会再来强调通用语法。</p></blockquote><p><strong>分类</strong></p><p>SQL语句根据其功能被分为四大类：DDL、DML、DQL、DCL</p><table><thead><tr><th><strong>分类</strong></th><th><strong>全称</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>DDL</td><td>Data Definition Language</td><td>数据定义语言，用来定义数据库对象(数据库，表，字段)</td></tr><tr><td>DML</td><td>Data Manipulation Language</td><td>数据操作语言，用来对数据库表中的数据进行增删改</td></tr><tr><td>DQL</td><td>Data Query Language</td><td>数据查询语言，用来查询数据库中表的记录 👈</td></tr><tr><td>DCL</td><td>Data Control Language</td><td>数据控制语言，用来创建数据库用户、控制数据库的访问权限</td></tr></tbody></table><p><img src="http://www.yangeit.cn:21010/assets/image-20221205152804250-738c79ea.png" alt="image-20221205152804250"></p><p>image-20221205152804250</p><blockquote><p>实际在用户使用过程中，查询往往多于插入和修改以及删除</p></blockquote><p><a href="http://mysql.jsrun.net/" target="_blank" rel="noreferrer">sql在线练习网站open in new window</a> 👍 很好用</p><h2 id="_2-数据库设计-ddl-🍐" tabindex="-1">2. 数据库设计-DDL 🍐 <a class="header-anchor" href="#_2-数据库设计-ddl-🍐" aria-label="Permalink to &quot;2\\. 数据库设计-DDL 🍐&quot;">​</a></h2><p>下面我们就正式的进入到SQL语句的学习，在学习之前先给大家介绍一下我们要开发一个项目，整个开发流程是什么样的，以及在流程当中哪些环节会涉及到数据库。</p><h3 id="_2-1-项目开发流程" tabindex="-1">2.1 项目开发流程 <a class="header-anchor" href="#_2-1-项目开发流程" aria-label="Permalink to &quot;2.1 项目开发流程&quot;">​</a></h3><p><img src="http://www.yangeit.cn:21010/assets/image-20220829112953742-1a1d45b9.png" alt="image-20220829112953742"></p><p>image-20220829112953742</p><p><strong>需求文档</strong>：</p><ul><li>在我们开发一个项目或者项目当中的某个模块之前，会先会拿到产品经理给我们提供的<a href="http://www.yangeit.cn:21010/shareres/yuanxing/tlias/%E5%91%98%E5%B7%A5%E7%AE%A1%E7%90%86.html" target="_blank" rel="noreferrer">页面原型及需求文档open in new window</a> 👈</li></ul><p><img src="http://www.yangeit.cn:21010/assets/image-20221205154101142-d7d7946f.png" alt="image-20221205154101142"></p><p>image-20221205154101142</p><p><strong>设计</strong>：</p><ul><li>拿到产品原型和需求文档之后，我们首先要做的不是编码，而是要<strong>先进行项目的设计</strong>，其中就包括<strong>概要设计、详细设计、接口设计、数据库设计</strong>等等。</li><li>数据库设计根据产品原型以及需求文档，要分析<strong>各个模块涉及到的表结构以及表结构之间的关系</strong>，以及表结构的详细信息。最终我们需要将数据库以及数据库当中的表结构设计创建出来。</li></ul><p><strong>开发/测试</strong>：</p><ul><li>参照页面原型和需求进行编码，实现业务功能。在这个过程当中，我们就需要来操作设计出来的数据库表结构，来完成业务的增删改查操作等。</li></ul><p><strong>部署上线</strong>：</p><ul><li>在项目的功能开发测试完成之后，项目就可以上线运行了，后期如果项目遇到性能瓶颈，还需要对项目进行优化。优化很重要的一个部分就是数据库的优化，包括数据库当中索引的建立、SQL 的优化、分库分表等操作。</li></ul><p>在上述的流程当中，针对于数据库来说，主要包括三个阶段：</p><ol><li>数据库设计阶段 <ul><li>参照页面原型以及需求文档<strong>设计数据库表结构</strong></li></ul></li><li>数据库操作阶段 <ul><li>根据业务功能的实现，编写SQL语句对数据表中的数据进行增删改查操作</li></ul></li><li>数据库优化阶段 <ul><li>通过数据库的优化来提高数据库的访问性能。优化手段：索引、SQL优化、分库分表等</li></ul></li></ol><p>接下来我们就先来学习第一部分数据库的设计，而数据库的设计就是来定义数据库，定义表结构以及表中的字段。</p><h3 id="_2-2-数据库操作" tabindex="-1">2.2 数据库操作 <a class="header-anchor" href="#_2-2-数据库操作" aria-label="Permalink to &quot;2.2 数据库操作&quot;">​</a></h3><p>DDL英文全称是Data Definition Language(数据定义语言)，用来定义数据库对象(数据库、表)</p><p>DDL中数据库的常见操作：<strong>查询、创建、使用、删除</strong></p><h4 id="_2-2-1-查询数据库" tabindex="-1">2.2.1 查询数据库 <a class="header-anchor" href="#_2-2-1-查询数据库" aria-label="Permalink to &quot;2.2.1 查询数据库&quot;">​</a></h4><p><strong>查询所有数据库：</strong></p><blockquote><p>记得输入密码和用户名先连接数据库</p></blockquote><p>命令行中执行效果如下：</p><p><img src="http://www.yangeit.cn:21010/assets/image-20220829124104154-a04fc71c.png" alt="image-20220829124104154"></p><p>image-20220829124104154</p><p><strong>查询当前数据库：</strong></p><p>命令行中执行效果如果：</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205174615074-64fed93d.png" alt="image-20221205174615074"></p><p>image-20221205174615074</p><blockquote><p>我们要操作某一个数据库，必须要切换到对应的数据库中。</p><p>通过指令：select database() ，就可以查询到当前所处的数据库</p></blockquote><h4 id="_2-2-2-创建数据库" tabindex="-1">2.2.2 创建数据库 <a class="header-anchor" href="#_2-2-2-创建数据库" aria-label="Permalink to &quot;2.2.2 创建数据库&quot;">​</a></h4><p><strong>语法：</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">create</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">database</span><span style="color:#F6F6F4;"> [ if not exists ] 数据库名;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">database</span><span style="color:#24292E;"> [ if not exists ] 数据库名;</span></span></code></pre></div><p>案例： 创建一个itcast数据库。</p><p>命令行执行效果如下：</p><p><img src="http://www.yangeit.cn:21010/assets/image-20220829124219427-bcaa2960.png" alt="image-20220829124219427"></p><p>image-20220829124219427</p><p>注意：在同一个数据库服务器中，不能创建两个名称相同的数据库，否则将会报错。</p><p><img src="http://www.yangeit.cn:21010/assets/image-20220829124250514-6e027f40.png" alt="image-20220829124250514"></p><p>image-20220829124250514</p><ul><li>可以使用if not exists来避免这个问题</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">-- 数据库不存在,则创建该数据库；如果存在则不创建</span></span>
<span class="line"><span style="color:#F286C4;">create</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">database</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">if</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">not</span><span style="color:#F6F6F4;"> extists itcast;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 数据库不存在,则创建该数据库；如果存在则不创建</span></span>
<span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">database</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> extists itcast;</span></span></code></pre></div><p>命令行执行效果如下： <img src="http://www.yangeit.cn:21010/assets/image-20220829124326741-6657730b.png" alt="image-20220829124326741"></p><h4 id="_2-2-3-使用数据库" tabindex="-1">2.2.3 使用数据库 <a class="header-anchor" href="#_2-2-3-使用数据库" aria-label="Permalink to &quot;2.2.3 使用数据库&quot;">​</a></h4><p><strong>语法：</strong></p><blockquote><p>我们要操作某一个数据库下的表时，就需要通过该指令，切换到对应的数据库下，否则不能操作。</p></blockquote><p>案例：切换到itcast数据</p><p>命令执行效果如下：</p><p><img src="http://www.yangeit.cn:21010/assets/image-20220829124929708-cec68159.png" alt="image-20220829124929708"></p><p>image-20220829124929708</p><h4 id="_2-2-4-删除数据库" tabindex="-1">2.2.4 删除数据库 <a class="header-anchor" href="#_2-2-4-删除数据库" aria-label="Permalink to &quot;2.2.4 删除数据库&quot;">​</a></h4><p><strong>语法：</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">drop</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">database</span><span style="color:#F6F6F4;"> [ if exists ] 数据库名 ;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">drop</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">database</span><span style="color:#24292E;"> [ if exists ] 数据库名 ;</span></span></code></pre></div><blockquote><p>如果删除一个不存在的数据库，将会报错。</p><p>可以加上参数 if exists ，如果数据库存在，再执行删除，否则不执行删除。</p></blockquote><p>案例：删除itcast数据库</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">drop</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">database</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">exists</span><span style="color:#F6F6F4;"> itcast; </span><span style="color:#7B7F8B;">-- itcast数据库存在时删除</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">drop</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">database</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">exists</span><span style="color:#24292E;"> itcast; </span><span style="color:#6A737D;">-- itcast数据库存在时删除</span></span></code></pre></div><p>命令执行效果如下：</p><p><img src="http://www.yangeit.cn:21010/assets/image-20220829125006142-8ddabb25.png" alt="image-20220829125006142"></p><p>image-20220829125006142</p><blockquote><p>说明：上述语法中的database，也可以替换成 schema</p><ul><li>如：create schema db01;</li><li>如：show schemas;</li></ul><p><img src="http://www.yangeit.cn:21010/assets/image-20221205180608004-aa1b9538.png" alt="image-20221205180608004"></p><p>image-20221205180608004</p></blockquote><p>课堂作业</p><p>🎻 1.使用sql的ddl语言 创建一个名字为 <code>javawebdb</code>的数据库</p><h3 id="_2-3-图形化工具-✏️" tabindex="-1">2.3 图形化工具 ✏️ <a class="header-anchor" href="#_2-3-图形化工具-✏️" aria-label="Permalink to &quot;2.3 图形化工具 ✏️&quot;">​</a></h3><p>为了提高开发效率，都会借助于现成的图形化管理工具来操作数据库</p><p><strong>在命令行当中来敲这些SQL语句很不方便，主要的原因有以下 3 点：</strong></p><ol><li>没有任何代码提示。（全靠记忆，容易敲错字母造成执行报错）</li><li>操作繁琐，影响开发效率。（所有的功能操作都是通过SQL语句来完成的）</li><li>编写过的SQL代码无法保存。</li></ol><p><strong>目前MySQL主流的图形化界面工具有以下几种：</strong></p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205184802646-f6fbe35f.png" alt="image-20221205184802646"></p><p>image-20221205184802646</p><p><strong>DataGrip是JetBrains旗下的一款数据库管理工具</strong>，是管理和开发MySQL、Oracle、PostgreSQL的理想解决方案。</p><p>官网： <a href="https://www.jetbrains.com/zh-cn/datagrip/" target="_blank" rel="noreferrer">https://www.jetbrains.com/zh-cn/datagrip/open in new window</a></p><p>安装： 参考资料中提供的《DataGrip安装手册》</p><blockquote><p>说明：DataGrip这款工具可以不用安装，因为Jetbrains公司已经将DataGrip这款工具的功能已经集成到了 IDEA当中，所以我们就可以使用IDEA来作为一款图形化界面工具来操作Mysql数据库。</p></blockquote><p>点击查看Idea连接数据库</p><h5 id="_2-2-3-1-连接数据库" tabindex="-1">2.2.3.1 连接数据库 <a class="header-anchor" href="#_2-2-3-1-连接数据库" aria-label="Permalink to &quot;2.2.3.1 连接数据库&quot;">​</a></h5><p>1、打开IDEA自带的Database</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205190929756-7f2ab80f.png" alt="image-20221205190929756"></p><p>image-20221205190929756</p><p>2、配置MySQL</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205191143072-cda2ce47.png" alt="image-20221205191143072"></p><p>image-20221205191143072</p><p>3、输入相关信息</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205192606038-9fc153e1.png" alt="image-20221205192606038"></p><p>image-20221205192606038</p><p>4、下载MySQL连接驱动</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205192847190-a0deccb6.png" alt="image-20221205192847190"></p><p>image-20221205192847190</p><p>5、测试数据库连接</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205193304124-8a0cf256.png" alt="image-20221205193304124"></p><p>image-20221205193304124</p><p>6、保存配置</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205193409856-895ace6e.png" alt="image-20221205193409856"></p><p>image-20221205193409856</p><p>默认情况下，连接上了MySQL数据库之后， 数据库并没有全部展示出来。 需要选择要展示哪些数据库。具体操作如下：</p><p><img src="http://www.yangeit.cn:21010/assets/8-c4afb2cb.gif" alt=""></p><p>点击查看Idea操作数据库</p><h5 id="_2-2-3-2-操作数据库" tabindex="-1">2.2.3.2 操作数据库 <a class="header-anchor" href="#_2-2-3-2-操作数据库" aria-label="Permalink to &quot;2.2.3.2 操作数据库&quot;">​</a></h5><p><strong>创建数据库：</strong></p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205195346655-a0765e48.png" alt="image-20221205195346655"></p><p>image-20221205195346655</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205195510716-a6e038e7.png" alt="image-20221205195510716"></p><p>image-20221205195510716</p><blockquote><p>有了图形化界面工具后，就可以方便的使用图形化工具：创建数据库，创建表、修改表等DDL操作。</p><p>其实工具底层也是通过DDL语句操作的数据库，只不过这些SQL语句是图形化界面工具帮我们自动完成的。</p></blockquote><p><strong>查看所有数据库：</strong></p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205195128343-05904dc8.png" alt="image-20221205195128343"></p><p>image-20221205195128343</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205195833439-d08a58cf.png" alt="image-20221205195833439"></p><p>image-20221205195833439</p><p><strong>其实navcat也蛮好用的👍，经济宽裕的小伙伴，可以购买正版试试，如果要试用</strong>，可以查看文档<a href="http://www.yangeit.cn:21010/takeoutproject2021/day00.html" target="_blank" rel="noreferrer">Navcat使用教程</a></p><h3 id="_2-3-表操作-✏️-🍐" tabindex="-1">2.3 表操作 ✏️ 🍐 <a class="header-anchor" href="#_2-3-表操作-✏️-🍐" aria-label="Permalink to &quot;2.3 表操作 ✏️ 🍐&quot;">​</a></h3><p>表结构的操作也是包含四个部分：创建表、查询表、修改表、删除表。</p><h4 id="_2-3-1-创建" tabindex="-1">2.3.1 创建 <a class="header-anchor" href="#_2-3-1-创建" aria-label="Permalink to &quot;2.3.1 创建&quot;">​</a></h4><h5 id="_2-3-1-1-语法" tabindex="-1">2.3.1.1 语法 <a class="header-anchor" href="#_2-3-1-1-语法" aria-label="Permalink to &quot;2.3.1.1 语法&quot;">​</a></h5><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">create</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">表名</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;"> 字段1  字段1类型 [约束]  [comment  字段1注释 ],</span></span>
<span class="line"><span style="color:#F6F6F4;"> 字段2  字段2类型 [约束]  [comment  字段2注释 ],</span></span>
<span class="line"><span style="color:#F6F6F4;"> ......</span></span>
<span class="line"><span style="color:#F6F6F4;"> 字段n  字段n类型 [约束]  [comment  字段n注释 ] </span></span>
<span class="line"><span style="color:#F6F6F4;">) [ comment  表注释 ] ;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;">  </span><span style="color:#6F42C1;">表名</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;"> 字段1  字段1类型 [约束]  [comment  字段1注释 ],</span></span>
<span class="line"><span style="color:#24292E;"> 字段2  字段2类型 [约束]  [comment  字段2注释 ],</span></span>
<span class="line"><span style="color:#24292E;"> ......</span></span>
<span class="line"><span style="color:#24292E;"> 字段n  字段n类型 [约束]  [comment  字段n注释 ] </span></span>
<span class="line"><span style="color:#24292E;">) [ comment  表注释 ] ;</span></span></code></pre></div><blockquote><p>注意： [ ] 中的内容为可选参数； 最后一个字段后面没有逗号</p></blockquote><p>案例：创建tb_user表</p><ul><li>对应的结构如下：</li></ul><p><img src="http://www.yangeit.cn:21010/assets/image-20220829143005524-77edd787.png" alt="image-20220829143005524"></p><p>image-20220829143005524</p><ul><li>建表语句：</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">create</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">tb_user</span><span style="color:#F6F6F4;"> (</span></span>
<span class="line"><span style="color:#F6F6F4;">    id </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ID,唯一标识</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,   # id是一行数据的唯一标识（不能重复）</span></span>
<span class="line"><span style="color:#F6F6F4;">    username </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">) comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">用户名</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">name</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">) comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">姓名</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    age </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">年龄</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    gender </span><span style="color:#F286C4;">char</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">) comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">性别</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">) comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">用户表</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tb_user</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    id </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;ID,唯一标识&#39;</span><span style="color:#24292E;">,   # id是一行数据的唯一标识（不能重复）</span></span>
<span class="line"><span style="color:#24292E;">    username </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;用户名&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;姓名&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;年龄&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    gender </span><span style="color:#D73A49;">char</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;性别&#39;</span></span>
<span class="line"><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;用户表&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><blockquote><p>数据表创建完成，接下来我们还需要测试一下是否可以往这张表结构当中来存储数据。</p></blockquote><p>双击打开tb_user表结构，大家会发现里面没有数据：</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205211008929-67a3fb41.png" alt="image-20221205211008929"></p><p>image-20221205211008929</p><p>添加数据：</p><p><img src="http://www.yangeit.cn:21010/assets/9-754ced3d.gif" alt=""></p><p>此时我们再插入一条数据：</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205214447060-f4c72605.png" alt="image-20221205214447060"></p><p>image-20221205214447060</p><p>我们之前提到过：id字段是一行数据的唯一标识，不能有重复值。但是现在数据表中有两个相同的id值，这是为什么呢？</p><ul><li>其实我们现在创建表结构的时候， id这个字段我们只加了一个备注信息说明它是一个唯一标识，但是在数据库层面呢，并没有去限制字段存储的数据。所以id这个字段没有起到唯一标识的作用。</li></ul><blockquote><p>想要限制字段所存储的数据，就需要用到数据库中的约束。</p></blockquote><p>点击查看数据库中的约束</p><h5 id="_2-3-1-2-约束" tabindex="-1">2.3.1.2 约束 <a class="header-anchor" href="#_2-3-1-2-约束" aria-label="Permalink to &quot;2.3.1.2 约束&quot;">​</a></h5><p>概念：所谓约束就是作用在表中字段上的规则，用于限制存储在表中的数据。</p><p>作用：就是来保证数据库当中数据的正确性、有效性和完整性。（后面的学习会验证这些）</p><p>在MySQL数据库当中，提供了以下5种约束：</p><table><thead><tr><th><strong>约束</strong></th><th><strong>描述</strong></th><th><strong>关键字</strong></th></tr></thead><tbody><tr><td>非空约束</td><td>限制该字段值不能为null</td><td>not null</td></tr><tr><td>唯一约束</td><td>保证字段的所有数据都是唯一、不重复的</td><td>unique</td></tr><tr><td>主键约束</td><td>主键是一行数据的唯一标识，要求非空且唯一</td><td>primary key</td></tr><tr><td>默认约束</td><td>保存数据时，如果未指定该字段值，则采用默认值</td><td>default</td></tr><tr><td>外键约束多表中讲解</td><td>让两张表的数据建立连接，保证数据的一致性和完整性</td><td>foreign key</td></tr></tbody></table><blockquote><p>注意：约束是作用于表中字段上的，可以在创建表/修改表的时候添加约束。</p></blockquote><p>案例：创建tb_user表</p><ul><li>对应的结构如下：</li></ul><p><img src="http://www.yangeit.cn:21010/assets/image-20220829143005524-77edd787.png" alt="image-20220829143005524"></p><p>image-20220829143005524</p><blockquote><p>在上述的表结构中:</p><ul><li><p>id 是一行数据的唯一标识</p></li><li><p>username 用户名字段是非空且唯一的</p></li><li><p>name 姓名字段是不允许存储空值的</p></li><li><p>gender 性别字段是有默认值，默认为男</p></li></ul></blockquote><ul><li>建表语句：</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">create</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">tb_user</span><span style="color:#F6F6F4;"> (</span></span>
<span class="line"><span style="color:#F6F6F4;">    id </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">primary key</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ID,唯一标识</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span></span>
<span class="line"><span style="color:#F6F6F4;">    username </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">not null</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">unique</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">用户名</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">name</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">not null</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">姓名</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    age </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">年龄</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    gender </span><span style="color:#F286C4;">char</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">男</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">性别</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">) comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">用户表</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tb_user</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    id </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">primary key</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;ID,唯一标识&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    username </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">unique</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;用户名&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;姓名&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;年龄&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    gender </span><span style="color:#D73A49;">char</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;男&#39;</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;性别&#39;</span></span>
<span class="line"><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;用户表&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><blockquote><p>数据表创建完成，接下来测试一下表中字段上的约束是否生效</p></blockquote><p><img src="http://www.yangeit.cn:21010/assets/image-20221205215309011-df009870.png" alt="image-20221205215309011"></p><p>image-20221205215309011</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205215632599-e225091c.png" alt="image-20221205215632599"></p><p>image-20221205215632599</p><p>大家有没有发现一个问题：id字段下存储的值，如果由我们自己来维护会比较麻烦(必须保证值的唯一性)。MySQL数据库为了解决这个问题，给我们提供了一个关键字：auto_increment（自动增长）</p><blockquote><p>主键自增：auto_increment</p><ul><li>每次插入新的行记录时，数据库自动生成id字段(主键)下的值</li><li>具有auto_increment的数据列是一个正数序列开始增长(从1开始自增)</li></ul></blockquote><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">create</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">tb_user</span><span style="color:#F6F6F4;"> (</span></span>
<span class="line"><span style="color:#F6F6F4;">    id </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">primary key</span><span style="color:#F6F6F4;"> auto_increment comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ID,唯一标识</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, #主键自动增长</span></span>
<span class="line"><span style="color:#F6F6F4;">    username </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">not null</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">unique</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">用户名</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">name</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">not null</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">姓名</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    age </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">年龄</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    gender </span><span style="color:#F286C4;">char</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">男</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">性别</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">) comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">用户表</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tb_user</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    id </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">primary key</span><span style="color:#24292E;"> auto_increment comment </span><span style="color:#032F62;">&#39;ID,唯一标识&#39;</span><span style="color:#24292E;">, #主键自动增长</span></span>
<span class="line"><span style="color:#24292E;">    username </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">unique</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;用户名&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;姓名&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;年龄&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    gender </span><span style="color:#D73A49;">char</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;男&#39;</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;性别&#39;</span></span>
<span class="line"><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;用户表&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>测试：主键自增</p><p><img src="http://www.yangeit.cn:21010/assets/10-e3cad601.gif" alt=""></p><p><strong>Idea中约束修改GIF动画教程</strong> 📹 👇 <img src="http://image.yangeit.cn/i/2023/04/05/GIF_mysql_ddl_yueshu.gif" alt=""></p><p>点击查看数据库中的数据类型</p><h5 id="_2-3-1-3-数据类型" tabindex="-1">2.3.1.3 数据类型 <a class="header-anchor" href="#_2-3-1-3-数据类型" aria-label="Permalink to &quot;2.3.1.3 数据类型&quot;">​</a></h5><p>在上面建表语句中，我们在指定字段的数据类型时，用到了int 、varchar、char，那么在MySQL中除了以上的数据类型，还有哪些常见的数据类型呢？ 接下来,我们就来详细介绍一下MySQL的数据类型。</p><p>MySQL中的数据类型有很多，主要分为三类：数值类型、字符串类型、日期时间类型。</p><p><strong>数值类型</strong></p><table><thead><tr><th>类型</th><th>大小</th><th>有符号(SIGNED)范围</th><th>无符号(UNSIGNED)范围</th><th>描述</th></tr></thead><tbody><tr><td>TINYINT</td><td>1byte</td><td>(-128，127)</td><td>(0，255)</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2bytes</td><td>(-32768，32767)</td><td>(0，65535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3bytes</td><td>(-8388608，8388607)</td><td>(0，16777215)</td><td>大整数值</td></tr><tr><td>INT/INTEGER</td><td>4bytes</td><td>(-2147483648，2147483647)</td><td>(0，4294967295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8bytes</td><td>(-263，263-1)</td><td>(0，2^64-1)</td><td>极大整数值</td></tr><tr><td>FLOAT</td><td>4bytes</td><td>(-3.402823466 E+38，3.402823466351 E+38)</td><td>0 和 (1.175494351 E-38，3.402823466 E+38)</td><td>单精度浮点数值</td></tr><tr><td>DOUBLE</td><td>8bytes</td><td>(-1.7976931348623157 E+308，1.7976931348623157 E+308)</td><td>0 和 (2.2250738585072014 E-308，1.7976931348623157 E+308)</td><td>双精度浮点数值</td></tr><tr><td>DECIMAL</td><td></td><td>依赖于M(精度)和D(标度)的值</td><td>依赖于M(精度)和D(标度)的值</td><td>小数值(精确定点数)</td></tr></tbody></table><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">示例: </span></span>
<span class="line"><span style="color:#F6F6F4;">    年龄字段 </span><span style="color:#7B7F8B;">---不会出现负数, 而且人的年龄不会太大</span></span>
<span class="line"><span style="color:#F6F6F4;"> age </span><span style="color:#F286C4;">tinyint</span><span style="color:#F6F6F4;"> unsigned</span></span>
<span class="line"><span style="color:#F6F6F4;"> </span></span>
<span class="line"><span style="color:#F6F6F4;"> 分数 </span><span style="color:#7B7F8B;">---总分100分, 最多出现一位小数</span></span>
<span class="line"><span style="color:#F6F6F4;"> score double(</span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">示例: </span></span>
<span class="line"><span style="color:#24292E;">    年龄字段 </span><span style="color:#6A737D;">---不会出现负数, 而且人的年龄不会太大</span></span>
<span class="line"><span style="color:#24292E;"> age </span><span style="color:#D73A49;">tinyint</span><span style="color:#24292E;"> unsigned</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> 分数 </span><span style="color:#6A737D;">---总分100分, 最多出现一位小数</span></span>
<span class="line"><span style="color:#24292E;"> score double(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>字符串类型</strong></p><table><thead><tr><th>类型</th><th>大小</th><th>描述</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255 bytes</td><td>定长字符串(需要指定长度)</td></tr><tr><td>VARCHAR</td><td>0-65535 bytes</td><td>变长字符串(需要指定长度)</td></tr><tr><td>TINYBLOB</td><td>0-255 bytes</td><td>不超过255个字符的二进制数据</td></tr><tr><td>TINYTEXT</td><td>0-255 bytes</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535 bytes</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535 bytes</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215 bytes</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215 bytes</td><td>中等长度文本数据</td></tr><tr><td>LONGBLOB</td><td>0-4 294 967 295 bytes</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295 bytes</td><td>极大文本数据</td></tr></tbody></table><p>char 与 varchar 都可以描述字符串，char是定长字符串，指定长度多长，就占用多少个字符，和字段值的长度无关 。而varchar是变长字符串，指定的长度为最大占用长度 。相对来说，char的性能会更高些。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">示例： </span></span>
<span class="line"><span style="color:#F6F6F4;">    用户名 username </span><span style="color:#7B7F8B;">---长度不定, 最长不会超过50</span></span>
<span class="line"><span style="color:#F6F6F4;"> username </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;"> </span></span>
<span class="line"><span style="color:#F6F6F4;"> 手机号 phone </span><span style="color:#7B7F8B;">---固定长度为11</span></span>
<span class="line"><span style="color:#F6F6F4;"> phone </span><span style="color:#F286C4;">char</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">示例： </span></span>
<span class="line"><span style="color:#24292E;">    用户名 username </span><span style="color:#6A737D;">---长度不定, 最长不会超过50</span></span>
<span class="line"><span style="color:#24292E;"> username </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> 手机号 phone </span><span style="color:#6A737D;">---固定长度为11</span></span>
<span class="line"><span style="color:#24292E;"> phone </span><span style="color:#D73A49;">char</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>日期时间类型</strong></p><table><thead><tr><th>类型</th><th>大小</th><th>范围</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01 至 9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>-838:59:59 至 838:59:59</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901 至 2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>1000-01-01 00:00:00 至 9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4</td><td>1970-01-01 00:00:01 至 2038-01-19 03:14:07</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">示例: </span></span>
<span class="line"><span style="color:#F6F6F4;"> 生日字段  birthday </span><span style="color:#7B7F8B;">---生日只需要年月日  </span></span>
<span class="line"><span style="color:#F6F6F4;"> birthday </span><span style="color:#F286C4;">date</span></span>
<span class="line"><span style="color:#F6F6F4;"> </span></span>
<span class="line"><span style="color:#F6F6F4;"> 创建时间 createtime </span><span style="color:#7B7F8B;">--- 需要精确到时分秒</span></span>
<span class="line"><span style="color:#F6F6F4;"> createtime  </span><span style="color:#F286C4;">datetime</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">示例: </span></span>
<span class="line"><span style="color:#24292E;"> 生日字段  birthday </span><span style="color:#6A737D;">---生日只需要年月日  </span></span>
<span class="line"><span style="color:#24292E;"> birthday </span><span style="color:#D73A49;">date</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> 创建时间 createtime </span><span style="color:#6A737D;">--- 需要精确到时分秒</span></span>
<span class="line"><span style="color:#24292E;"> createtime  </span><span style="color:#D73A49;">datetime</span></span></code></pre></div><h5 id="_2-3-1-4-案例" tabindex="-1">2.3.1.4 案例 <a class="header-anchor" href="#_2-3-1-4-案例" aria-label="Permalink to &quot;2.3.1.4 案例&quot;">​</a></h5><p>需求：根据产品原型/需求创建表((设计合理的数据类型、长度、约束)</p><blockquote><p>参考资料中提供的《黑马-tlias智能学习辅助系统》页面原型，设计员工管理模块的表结构</p><p>暂不考虑所属部门字段</p></blockquote><p>产品原型及需求如下：</p><p><img src="http://www.yangeit.cn:21010/assets/image-20220829151032029-a8b6aabf.png" alt="image-20220829151032029"></p><p>image-20220829151032029</p><p><img src="http://www.yangeit.cn:21010/assets/image-20220829151228102-56e9dcdf.png" alt=""></p><p><img src="http://www.yangeit.cn:21010/assets/image-20220829151245450-7884ed15.png" alt=""></p><p><strong>步骤：</strong></p><ol><li><p>阅读产品原型及需求文档，看看里面涉及到哪些字段。</p></li><li><p>查看需求文档说明，确认各个字段的类型以及字段存储数据的长度限制。</p></li><li><p>在页面原型中描述的基础字段的基础上，再增加额外的基础字段。</p></li></ol><p>使用SQL创建表：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">create</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">emp</span><span style="color:#F6F6F4;"> (</span></span>
<span class="line"><span style="color:#F6F6F4;">  id </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> unsigned </span><span style="color:#F286C4;">primary key</span><span style="color:#F6F6F4;"> auto_increment comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ID</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  username </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">not null</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">unique</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">用户名</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">password</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">32</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">123456</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">密码</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">name</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">not null</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">姓名</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  gender </span><span style="color:#F286C4;">tinyint</span><span style="color:#F6F6F4;"> unsigned </span><span style="color:#F286C4;">not null</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">性别, 说明: 1 男, 2 女</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">image</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">300</span><span style="color:#F6F6F4;">) comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">图像</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  job </span><span style="color:#F286C4;">tinyint</span><span style="color:#F6F6F4;"> unsigned comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">职位, 说明: 1 班主任,2 讲师, 3 学工主管, 4 教研主管</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  entrydate </span><span style="color:#F286C4;">date</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">入职时间</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  create_time </span><span style="color:#F286C4;">datetime</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">not null</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">创建时间</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  update_time </span><span style="color:#F286C4;">datetime</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">not null</span><span style="color:#F6F6F4;"> comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">修改时间</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">) comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">员工表</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">emp</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">  id </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> unsigned </span><span style="color:#D73A49;">primary key</span><span style="color:#24292E;"> auto_increment comment </span><span style="color:#032F62;">&#39;ID&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  username </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">unique</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;用户名&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">password</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;123456&#39;</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;密码&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;姓名&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  gender </span><span style="color:#D73A49;">tinyint</span><span style="color:#24292E;"> unsigned </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;性别, 说明: 1 男, 2 女&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">image</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">300</span><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;图像&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  job </span><span style="color:#D73A49;">tinyint</span><span style="color:#24292E;"> unsigned comment </span><span style="color:#032F62;">&#39;职位, 说明: 1 班主任,2 讲师, 3 学工主管, 4 教研主管&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  entrydate </span><span style="color:#D73A49;">date</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;入职时间&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  create_time </span><span style="color:#D73A49;">datetime</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;创建时间&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  update_time </span><span style="color:#D73A49;">datetime</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> comment </span><span style="color:#032F62;">&#39;修改时间&#39;</span></span>
<span class="line"><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;员工表&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>除了使用SQL语句创建表外，我们还可以借助于图形化界面来创建表结构，这种创建方式会更加直观、更加方便。</p><p>操作步骤如下：</p><ol><li>在指定操作的数据库上，右键New ==&gt; Table</li></ol><p><img src="http://www.yangeit.cn:21010/assets/image-20221205230447721-cd227bb1.png" alt="image-20221205230447721"></p><p>image-20221205230447721</p><ol start="2"><li>编辑表结构的相关信息</li></ol><p><img src="http://www.yangeit.cn:21010/assets/image-20221205231846161-11812eec.png" alt="image-20221205231846161"></p><p>image-20221205231846161</p><h5 id="_2-3-1-5-设计表流程" tabindex="-1">2.3.1.5 设计表流程 <a class="header-anchor" href="#_2-3-1-5-设计表流程" aria-label="Permalink to &quot;2.3.1.5 设计表流程&quot;">​</a></h5><p>通过上面的案例，我们明白了，设计一张表，基本的流程如下：</p><ol><li><p>阅读页面原型及需求文档</p></li><li><p>基于页面原则和需求文档，确定原型字段(类型、长度限制、约束)</p></li><li><p>再增加表设计所需要的业务基础字段(id主键、插入时间、修改时间)</p></li></ol><p><img src="http://www.yangeit.cn:21010/assets/image-20221205232253088-7c3eb5c8.png" alt="image-20221205232253088"></p><p>image-20221205232253088</p><blockquote><p>说明：</p><ul><li><p>create_time：记录的是当前这条数据插入的时间。</p></li><li><p>update_time：记录当前这条数据最后更新的时间。</p></li></ul></blockquote><h4 id="_2-3-2-查询" tabindex="-1">2.3.2 查询 <a class="header-anchor" href="#_2-3-2-查询" aria-label="Permalink to &quot;2.3.2 查询&quot;">​</a></h4><blockquote><p>关于表结构的查询操作，工作中一般都是直接基于<strong>图形化界面操作</strong>。</p></blockquote><p><strong>查询当前数据库所有表</strong></p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205233746548-89a092f0.png" alt="image-20221205233746548"></p><p>image-20221205233746548</p><p><strong>查看指定表结构</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">desc</span><span style="color:#F6F6F4;"> 表名 ;#可以查看指定表的字段、字段的类型、是否可以为NULL、是否存在默认值等信息</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">desc</span><span style="color:#24292E;"> 表名 ;#可以查看指定表的字段、字段的类型、是否可以为NULL、是否存在默认值等信息</span></span></code></pre></div><p><img src="http://www.yangeit.cn:21010/assets/image-20221205234114053-4ffe02ef.png" alt="image-20221205234114053"></p><p>image-20221205234114053</p><p><strong>查询指定表的建表语句</strong></p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205234334696-394eab70.png" alt="image-20221205234334696"></p><p>image-20221205234334696</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205234444906-8a552fc8.png" alt="image-20221205234444906"></p><p>image-20221205234444906</p><h4 id="_2-3-3-修改" tabindex="-1">2.3.3 修改 <a class="header-anchor" href="#_2-3-3-修改" aria-label="Permalink to &quot;2.3.3 修改&quot;">​</a></h4><blockquote><p>关于表结构的修改操作，工作中一般都是直接基于<strong>图形化界面操作</strong>。</p></blockquote><p><strong>添加字段</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">alter</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> 表名 </span><span style="color:#F286C4;">add</span><span style="color:#F6F6F4;">  字段名  类型(长度)  [comment 注释]  [约束];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">alter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> 表名 </span><span style="color:#D73A49;">add</span><span style="color:#24292E;">  字段名  类型(长度)  [comment 注释]  [约束];</span></span></code></pre></div><p>案例： 为tb_emp表添加字段qq，字段类型为 varchar(11)</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">alter</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> tb_emp </span><span style="color:#F286C4;">add</span><span style="color:#F6F6F4;">  qq  </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">) comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">QQ号码</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">alter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> tb_emp </span><span style="color:#D73A49;">add</span><span style="color:#24292E;">  qq  </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;QQ号码&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><blockquote><p>图形化操作：添加字段</p></blockquote><p><img src="http://www.yangeit.cn:21010/assets/image-20221205235542272-1a028144.png" alt="image-20221205235542272"></p><p>image-20221205235542272</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221205235657807-a1bb85ab.png" alt="image-20221205235657807"></p><p>image-20221205235657807</p><p><strong>修改数据类型</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">alter</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> 表名 </span><span style="color:#F286C4;">modify</span><span style="color:#F6F6F4;">  字段名  新数据类型(长度);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">alter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> 表名 </span><span style="color:#D73A49;">modify</span><span style="color:#24292E;">  字段名  新数据类型(长度);</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">alter</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> 表名 change  旧字段名  新字段名  类型(长度)  [comment 注释]  [约束];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">alter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> 表名 change  旧字段名  新字段名  类型(长度)  [comment 注释]  [约束];</span></span></code></pre></div><p>案例：修改qq字段的字段类型，将其长度由11修改为13</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">alter</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> tb_emp </span><span style="color:#F286C4;">modify</span><span style="color:#F6F6F4;"> qq </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">13</span><span style="color:#F6F6F4;">) comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">QQ号码</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">alter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> tb_emp </span><span style="color:#D73A49;">modify</span><span style="color:#24292E;"> qq </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;QQ号码&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>案例：修改qq字段名为 qq_num，字段类型varchar(13)</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">alter</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> tb_emp change qq qq_num </span><span style="color:#F286C4;">varchar</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">13</span><span style="color:#F6F6F4;">) comment </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">QQ号码</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">alter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> tb_emp change qq qq_num </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">) comment </span><span style="color:#032F62;">&#39;QQ号码&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><blockquote><p>图形化操作：修改数据类型和字段名</p></blockquote><p><img src="http://www.yangeit.cn:21010/assets/image-20221205235950010-4aaf07b4.png" alt="image-20221205235950010"></p><p>image-20221205235950010</p><p><img src="http://www.yangeit.cn:21010/assets/image-20221206000030734-345053d8.png" alt="image-20221206000030734"></p><p>image-20221206000030734</p><p><strong>删除字段</strong></p><p>案例：删除tb_emp表中的qq_num字段</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">alter</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> tb_emp </span><span style="color:#F286C4;">drop</span><span style="color:#F6F6F4;"> qq_num;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">alter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> tb_emp </span><span style="color:#D73A49;">drop</span><span style="color:#24292E;"> qq_num;</span></span></code></pre></div><blockquote><p>图形化操作：删除字段</p></blockquote><p><img src="http://www.yangeit.cn:21010/assets/image-20221206000159237-a2413c4b.png" alt="image-20221206000159237"></p><p>image-20221206000159237</p><p><strong>修改表名</strong></p><p>案例：将当前的tb_emp表的表名修改为emp</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">rename </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> tb_emp </span><span style="color:#F286C4;">to</span><span style="color:#F6F6F4;"> emp;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">rename </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> tb_emp </span><span style="color:#D73A49;">to</span><span style="color:#24292E;"> emp;</span></span></code></pre></div><blockquote><p>图形化操作：修改表名</p></blockquote><p><img src="http://www.yangeit.cn:21010/assets/image-20221206000636659-e8d104f6.png" alt="image-20221206000636659"></p><p>image-20221206000636659</p><h4 id="_2-3-4-删除" tabindex="-1">2.3.4 删除 <a class="header-anchor" href="#_2-3-4-删除" aria-label="Permalink to &quot;2.3.4 删除&quot;">​</a></h4><blockquote><p>关于表结构的删除操作，工作中一般都是直接基于<strong>图形化界面操作</strong>。</p></blockquote><p>删除表语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">drop</span><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> [ if exists ]  表名;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">drop</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> [ if exists ]  表名;</span></span></code></pre></div><blockquote><p>if exists ：只有表名存在时才会删除该表，表名不存在，则不执行删除操作(如果不加该参数项，删除一张不存在的表，执行将会报错)。</p></blockquote><p>案例：如果tb_emp表存在，则删除tb_emp表</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">drop</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">table</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">exists</span><span style="color:#F6F6F4;"> tb_emp;  </span><span style="color:#7B7F8B;">-- 在删除表时，表中的全部数据也会被删除。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">drop</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">exists</span><span style="color:#24292E;"> tb_emp;  </span><span style="color:#6A737D;">-- 在删除表时，表中的全部数据也会被删除。</span></span></code></pre></div><blockquote><p>图形化操作：删除表</p></blockquote><p><img src="http://www.yangeit.cn:21010/assets/image-20221206001026916-656776f5.png" alt="image-20221206001026916"></p><p>image-20221206001026916</p><h2 id="_3-数据库操作-dml-✏️-🍐" tabindex="-1">3. 数据库操作-DML ✏️ 🍐 <a class="header-anchor" href="#_3-数据库操作-dml-✏️-🍐" aria-label="Permalink to &quot;3\\. 数据库操作-DML ✏️ 🍐&quot;">​</a></h2><p>DML英文全称是Data Manipulation Language(数据操作语言)，用来对数据库中表的数据记录进行增、删、改操作。</p><ul><li>添加数据（INSERT）</li><li>修改数据（UPDATE）</li><li>删除数据（DELETE）</li></ul><h3 id="_3-1-增加-insert" tabindex="-1">3.1 增加(insert) <a class="header-anchor" href="#_3-1-增加-insert" aria-label="Permalink to &quot;3.1 增加(insert)&quot;">​</a></h3><p>insert语法：</p><ul><li><p>向指定字段添加数据</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">insert into</span><span style="color:#F6F6F4;"> 表名 (字段名1, 字段名2) </span><span style="color:#F286C4;">values</span><span style="color:#F6F6F4;"> (值1, 值2);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">insert into</span><span style="color:#24292E;"> 表名 (字段名1, 字段名2) </span><span style="color:#D73A49;">values</span><span style="color:#24292E;"> (值1, 值2);</span></span></code></pre></div></li><li><p>全部字段添加数据</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">insert into</span><span style="color:#F6F6F4;"> 表名 </span><span style="color:#F286C4;">values</span><span style="color:#F6F6F4;"> (值1, 值2, ...);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">insert into</span><span style="color:#24292E;"> 表名 </span><span style="color:#D73A49;">values</span><span style="color:#24292E;"> (值1, 值2, ...);</span></span></code></pre></div></li><li><p>批量添加数据（指定字段）</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">insert into</span><span style="color:#F6F6F4;"> 表名 (字段名1, 字段名2) </span><span style="color:#F286C4;">values</span><span style="color:#F6F6F4;"> (值1, 值2), (值1, 值2);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">insert into</span><span style="color:#24292E;"> 表名 (字段名1, 字段名2) </span><span style="color:#D73A49;">values</span><span style="color:#24292E;"> (值1, 值2), (值1, 值2);</span></span></code></pre></div></li><li><p>批量添加数据（全部字段）</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">insert into</span><span style="color:#F6F6F4;"> 表名 </span><span style="color:#F286C4;">values</span><span style="color:#F6F6F4;"> (值1, 值2, ...), (值1, 值2, ...);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">insert into</span><span style="color:#24292E;"> 表名 </span><span style="color:#D73A49;">values</span><span style="color:#24292E;"> (值1, 值2, ...), (值1, 值2, ...);</span></span></code></pre></div></li></ul><p><strong>案例1：向tb_emp表的username、name、gender字段插入数据</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">-- 因为设计表时create_time, update_time两个字段不能为NULL，所以也做为要插入的字段</span></span>
<span class="line"><span style="color:#F286C4;">insert into</span><span style="color:#F6F6F4;"> tb_emp(username, </span><span style="color:#F286C4;">name</span><span style="color:#F6F6F4;">, gender, create_time, update_time)</span></span>
<span class="line"><span style="color:#F286C4;">values</span><span style="color:#F6F6F4;"> (</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">wuji</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">张无忌</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">now</span><span style="color:#F6F6F4;">(), </span><span style="color:#F286C4;">now</span><span style="color:#F6F6F4;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 因为设计表时create_time, update_time两个字段不能为NULL，所以也做为要插入的字段</span></span>
<span class="line"><span style="color:#D73A49;">insert into</span><span style="color:#24292E;"> tb_emp(username, </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">, gender, create_time, update_time)</span></span>
<span class="line"><span style="color:#D73A49;">values</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;wuji&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;张无忌&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">now</span><span style="color:#24292E;">(), </span><span style="color:#D73A49;">now</span><span style="color:#24292E;">());</span></span></code></pre></div><p><strong>案例2：向tb_emp表的所有字段插入数据</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">insert into</span><span style="color:#F6F6F4;"> tb_emp(id, username, </span><span style="color:#F286C4;">password</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">name</span><span style="color:#F6F6F4;">, gender, </span><span style="color:#F286C4;">image</span><span style="color:#F6F6F4;">, job, entrydate, create_time, update_time)</span></span>
<span class="line"><span style="color:#F286C4;">values</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">null</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">zhirou</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">123</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">周芷若</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">1.jpg</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">2010-01-01</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">now</span><span style="color:#F6F6F4;">(), </span><span style="color:#F286C4;">now</span><span style="color:#F6F6F4;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">insert into</span><span style="color:#24292E;"> tb_emp(id, username, </span><span style="color:#D73A49;">password</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">, gender, </span><span style="color:#D73A49;">image</span><span style="color:#24292E;">, job, entrydate, create_time, update_time)</span></span>
<span class="line"><span style="color:#D73A49;">values</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">null</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;zhirou&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;123&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;周芷若&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;1.jpg&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2010-01-01&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">now</span><span style="color:#24292E;">(), </span><span style="color:#D73A49;">now</span><span style="color:#24292E;">());</span></span></code></pre></div><p><strong>案例3：批量向tb_emp表的username、name、gender字段插入数据</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">insert into</span><span style="color:#F6F6F4;"> tb_emp(username, </span><span style="color:#F286C4;">name</span><span style="color:#F6F6F4;">, gender, create_time, update_time)</span></span>
<span class="line"><span style="color:#F286C4;">values</span><span style="color:#F6F6F4;"> (</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">weifuwang</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">韦一笑</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">now</span><span style="color:#F6F6F4;">(), </span><span style="color:#F286C4;">now</span><span style="color:#F6F6F4;">()),</span></span>
<span class="line"><span style="color:#F6F6F4;">       (</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">fengzi</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">张三疯</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">now</span><span style="color:#F6F6F4;">(), </span><span style="color:#F286C4;">now</span><span style="color:#F6F6F4;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">insert into</span><span style="color:#24292E;"> tb_emp(username, </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">, gender, create_time, update_time)</span></span>
<span class="line"><span style="color:#D73A49;">values</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;weifuwang&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;韦一笑&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">now</span><span style="color:#24292E;">(), </span><span style="color:#D73A49;">now</span><span style="color:#24292E;">()),</span></span>
<span class="line"><span style="color:#24292E;">       (</span><span style="color:#032F62;">&#39;fengzi&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;张三疯&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">now</span><span style="color:#24292E;">(), </span><span style="color:#D73A49;">now</span><span style="color:#24292E;">());</span></span></code></pre></div><blockquote><p>图形化操作：双击tb_emp表查看数据</p></blockquote><p><img src="http://www.yangeit.cn:21010/assets/image-20221206002807531-1d5eff56.png" alt="image-20221206002807531"></p><p>image-20221206002807531</p><p><strong>Insert操作的注意事项：</strong> 👈</p><ol><li><p>插入数据时，指定的字段顺序需要与值的顺序是一一对应的。</p></li><li><p>字符串和日期型数据应该包含在引号中。</p></li><li><p>插入的数据大小，应该在字段的规定范围内。</p></li></ol><h3 id="_3-2-修改-update" tabindex="-1">3.2 修改(update) <a class="header-anchor" href="#_3-2-修改-update" aria-label="Permalink to &quot;3.2 修改(update)&quot;">​</a></h3><p>update语法：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">update</span><span style="color:#F6F6F4;"> 表名 </span><span style="color:#F286C4;">set</span><span style="color:#F6F6F4;"> 字段名1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> 值1 , 字段名2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> 值2 , .... [where 条件] ;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">update</span><span style="color:#24292E;"> 表名 </span><span style="color:#D73A49;">set</span><span style="color:#24292E;"> 字段名1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> 值1 , 字段名2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> 值2 , .... [where 条件] ;</span></span></code></pre></div><p><strong>案例1：将tb_emp表中id为1的员工，姓名name字段更新为&#39;张三&#39;</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">update</span><span style="color:#F6F6F4;"> tb_emp </span><span style="color:#F286C4;">set</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">name=</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">张三</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,update_time</span><span style="color:#F286C4;">=now</span><span style="color:#F6F6F4;">() </span><span style="color:#F286C4;">where</span><span style="color:#F6F6F4;"> id</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">update</span><span style="color:#24292E;"> tb_emp </span><span style="color:#D73A49;">set</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name=</span><span style="color:#032F62;">&#39;张三&#39;</span><span style="color:#24292E;">,update_time</span><span style="color:#D73A49;">=now</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> id</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><p><strong>案例2：将tb_emp表的所有员工入职日期更新为&#39;2010-01-01&#39;</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">update</span><span style="color:#F6F6F4;"> tb_emp </span><span style="color:#F286C4;">set</span><span style="color:#F6F6F4;"> entrydate</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">2010-01-01</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,update_time</span><span style="color:#F286C4;">=now</span><span style="color:#F6F6F4;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">update</span><span style="color:#24292E;"> tb_emp </span><span style="color:#D73A49;">set</span><span style="color:#24292E;"> entrydate</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;2010-01-01&#39;</span><span style="color:#24292E;">,update_time</span><span style="color:#D73A49;">=now</span><span style="color:#24292E;">();</span></span></code></pre></div><p><img src="http://www.yangeit.cn:21010/assets/image-20221206004425527-ae0ad0ea.png" alt="image-20221206004425527"></p><p>image-20221206004425527</p><blockquote><p><strong>注意事项:</strong></p><ol><li><p>修改语句的条件可以有，也可以没有，如果没有条件，则会修改整张表的所有数据。</p></li><li><p>在修改数据时，一般需要同时修改公共字段update_time，将其修改为当前操作时间。</p></li></ol></blockquote><h3 id="_3-3-删除-delete" tabindex="-1">3.3 删除(delete) <a class="header-anchor" href="#_3-3-删除-delete" aria-label="Permalink to &quot;3.3 删除(delete)&quot;">​</a></h3><p>delete语法：</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">delete</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> 表名  [where  条件] ;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">delete</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> 表名  [where  条件] ;</span></span></code></pre></div><p><strong>案例1：删除tb_emp表中id为1的员工</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">delete</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> tb_emp </span><span style="color:#F286C4;">where</span><span style="color:#F6F6F4;"> id </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">delete</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> tb_emp </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><p><strong>案例2：删除tb_emp表中所有员工</strong></p><blockquote><p>注意事项:</p><p>• DELETE 语句的条件可以有，也可以没有，如果没有条件，则会删除整张表的所有数据。</p><p>• DELETE 语句不能删除某一个字段的值(可以使用UPDATE，将该字段值置为NULL即可)。</p><p>• 当进行删除全部数据操作时，会提示询问是否确认删除所有数据，直接点击Execute即可。</p></blockquote><p>课后作业</p><p>🚩 1. 重点完成上述的课堂作业</p><ol><li><p>晚自习第一节课的前30分钟，总结完毕之后，每个同学先必须梳理今日知识点 (记得写不知道的，以及感恩三件事)；整理好的笔记可以发给组长，组长交给班长，意在培养大家总结的能力）</p></li><li><p>晚自习第一节课的后30分钟开始练习（记住：程序员是代码堆起来的）：</p><ul><li>先要把今天的所有案例或者课堂练习，如果没练完的，练完他</li><li>独立书写今日作业</li></ul></li><li><p>剩余的时间：预习第二天的知识，预习的时候一定要注意：</p></li></ol><ul><li>预习不是学习，不要死看第二天的视频（很容易出现看了白看，为了看视频而看视频）</li><li>预习看第二天的笔记，把笔记中标注重要的知识，可以找到预习视频，先看一遍，如果不懂的 ，记住做好标注。</li></ul>`,381),e=[o];function t(c,r,i,y,F,d){return a(),n("div",null,e)}const m=s(l,[["render",t]]);export{E as __pageData,m as default};
