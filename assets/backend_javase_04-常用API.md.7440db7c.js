import{_ as s,o as n,c as a,V as l}from"./chunks/framework.c6d8cbec.js";const p="/docs/assets/1667402173587.c58e40c6.png",o="/docs/assets/1667398959905.44d81a10.png",e="/docs/assets/1667399304240.c69b8039.png",t="/docs/assets/1667399443159.7034a610.png",c="/docs/assets/1667399510543.40ecff18.png",r="/docs/assets/1667399804244.8523533b.png",y="/docs/assets/1667400116263.015ab196.png",F="/docs/assets/1667400242406.12792bd9.png",i="/docs/assets/1667400365583.25ba469c.png",E="/docs/assets/1667400465054.0e8740b5.png",d="/docs/assets/1667400655334.a12119e7.png",u="/docs/assets/1667400888534.8e108555.png",D="/docs/assets/1667401284295.e9a90b95.png",C="/docs/assets/1667401373923.9c6f96c5.png",m="/docs/assets/1667401511710.34e3247b.png",B="/docs/assets/1667401564173.07f8ce21.png",A="/docs/assets/1667401637360.f35c684b.png",g="/docs/assets/1667401886743.3584855a.png",f="/docs/assets/1667401938724.8cc6b18f.png",j=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"backend/javase/04-常用API.md","filePath":"backend/javase/04-常用API.md"}'),b={name:"backend/javase/04-常用API.md"},S=l(`<h2 id="常用api" tabindex="-1">常用API <a class="header-anchor" href="#常用api" aria-label="Permalink to &quot;常用API&quot;">​</a></h2><h2 id="一、-stringbuilder类" tabindex="-1">一、 StringBuilder类 <a class="header-anchor" href="#一、-stringbuilder类" aria-label="Permalink to &quot;一、 StringBuilder类&quot;">​</a></h2><ul><li>StringBuilder代表可变字符串对象，相当于是一个容器，它里面的字符串是可以改变的，就是用来操作字符串的。</li><li>好处：StringBuilder比String更合适做字符串的修改操作，效率更高，代码也更加简洁。</li></ul><p><strong>1.1 StringBuilder方法演示</strong></p><p>接下来我们用代码演示一下StringBuilder的用法</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">StringBuilder</span><span style="color:#F6F6F4;"> sb </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">StringBuilder</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">itehima</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//1.拼接内容</span></span>
<span class="line"><span style="color:#F6F6F4;">        sb.</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        sb.</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">黑马</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        sb.</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//2.append方法，支持临时编程</span></span>
<span class="line"><span style="color:#F6F6F4;">        sb.</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">666</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">黑马2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">).</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">666</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(sb); </span><span style="color:#7B7F8B;">//打印：12黑马666黑马2666</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//3.反转操作</span></span>
<span class="line"><span style="color:#F6F6F4;">        sb.</span><span style="color:#62E884;">reverse</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(sb); </span><span style="color:#7B7F8B;">//打印：6662马黑666马黑21</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//4.返回字符串的长度</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(sb.</span><span style="color:#62E884;">length</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//5.StringBuilder还可以转换为字符串</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> s </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sb.</span><span style="color:#62E884;">toString</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(s); </span><span style="color:#7B7F8B;">//打印：6662马黑666马黑21</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        StringBuilder sb </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringBuilder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;itehima&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//1.拼接内容</span></span>
<span class="line"><span style="color:#24292E;">        sb.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        sb.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;黑马&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        sb.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//2.append方法，支持临时编程</span></span>
<span class="line"><span style="color:#24292E;">        sb.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">666</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;黑马2&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">666</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(sb); </span><span style="color:#6A737D;">//打印：12黑马666黑马2666</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//3.反转操作</span></span>
<span class="line"><span style="color:#24292E;">        sb.</span><span style="color:#6F42C1;">reverse</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(sb); </span><span style="color:#6A737D;">//打印：6662马黑666马黑21</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//4.返回字符串的长度</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(sb.</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//5.StringBuilder还可以转换为字符串</span></span>
<span class="line"><span style="color:#24292E;">        String s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sb.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(s); </span><span style="color:#6A737D;">//打印：6662马黑666马黑21</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>为什么要用StringBuilder对字符串进行操作呢？因为它的效率比String更高，我们可以下面两段代码验证一下。 <img src="`+p+`"></p><p>经过我的验证，直接使用Stirng拼接100万次，等了1分钟，还没结束，我等不下去了；但是使用StringBuilder做拼接，不到1秒钟出结果了。</p><p><strong>1.2 StringBuilder应用案例</strong></p><p>接下来，我们通过一个案例把StringBuilder运用下，案例需求如下图所示</p><p>代码如下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> str </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getArrayData</span><span style="color:#F6F6F4;">( </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[]{</span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">22</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">33</span><span style="color:#F6F6F4;">});</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(str);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">//方法作用：将int数组转换为指定格式的字符串</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getArrayData</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">arr</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//1.判断数组是否为null</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(arr</span><span style="color:#F286C4;">==</span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//2.如果数组不为null，再遍历，并拼接数组中的元素</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">StringBuilder</span><span style="color:#F6F6F4;"> sb </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">StringBuilder</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">[</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">arr.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(i</span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;">arr.legnth</span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">                sb.</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(arr[i]).</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">]</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);;</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">                sb.</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(arr[i]).</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//3、把StirngBuilder转换为String，并返回。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> sb.</span><span style="color:#62E884;">toString</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        String str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getArrayData</span><span style="color:#24292E;">( </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[]{</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">22</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">33</span><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(str);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//方法作用：将int数组转换为指定格式的字符串</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getArrayData</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//1.判断数组是否为null</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(arr</span><span style="color:#D73A49;">==</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//2.如果数组不为null，再遍历，并拼接数组中的元素</span></span>
<span class="line"><span style="color:#24292E;">        StringBuilder sb </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringBuilder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;[&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">arr.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">arr.legnth</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">                sb.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(arr[i]).</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;]&quot;</span><span style="color:#24292E;">);;</span></span>
<span class="line"><span style="color:#24292E;">            }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">                sb.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(arr[i]).</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//3、把StirngBuilder转换为String，并返回。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sb.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="二、stringjoiner类" tabindex="-1">二、StringJoiner类 <a class="header-anchor" href="#二、stringjoiner类" aria-label="Permalink to &quot;二、StringJoiner类&quot;">​</a></h2><p>接下来，我们学习一个类叫做StringJoiner，学习这个类干嘛用呢？是因为我们前面使用StringBuilder拼接字符串的时，代码写起来还是有一点麻烦，而StringJoiner号称是拼接神器，不仅效率高，而且代码简洁。</p><p>下面演示一下StringJoiner的基本使用</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">StringJoiner</span><span style="color:#F6F6F4;"> s </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">StringJoiner</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        s.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">java1</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        s.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">java2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        s.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">java3</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(s); </span><span style="color:#7B7F8B;">//结果为： java1,java2,java3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//参数1：间隔符</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//参数2：开头</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//参数3：结尾</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">StringJoiner</span><span style="color:#F6F6F4;"> s1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">StringJoiner</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">[</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">]</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        s1.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">java1</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        s1.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">java2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        s1.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">java3</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(s1); </span><span style="color:#7B7F8B;">//结果为： [java1,java2,java3]</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        StringJoiner s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringJoiner</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        s.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;java1&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        s.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;java2&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        s.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;java3&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(s); </span><span style="color:#6A737D;">//结果为： java1,java2,java3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//参数1：间隔符</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//参数2：开头</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//参数3：结尾</span></span>
<span class="line"><span style="color:#24292E;">        StringJoiner s1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringJoiner</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;[&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;]&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        s1.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;java1&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        s1.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;java2&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        s1.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;java3&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(s1); </span><span style="color:#6A737D;">//结果为： [java1,java2,java3]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>使用StirngJoiner改写前面把数组转换为字符串的案例</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> str </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getArrayData</span><span style="color:#F6F6F4;">( </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[]{</span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">22</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">33</span><span style="color:#F6F6F4;">});</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(str);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">//方法作用：将int数组转换为指定格式的字符串</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getArrayData</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">arr</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//1.判断数组是否为null</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(arr</span><span style="color:#F286C4;">==</span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//2.如果数组不为null，再遍历，并拼接数组中的元素</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">StringJoiner</span><span style="color:#F6F6F4;"> s </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">StringJoiner</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">[</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">]</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">arr.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">//加&quot;&quot;是因为add方法的参数要的是String类型</span></span>
<span class="line"><span style="color:#F6F6F4;">            s.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(String.</span><span style="color:#62E884;">valueOf</span><span style="color:#F6F6F4;">(arr[i]));</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//3、把StringJoiner转换为String，并返回。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> s.</span><span style="color:#62E884;">toString</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        String str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getArrayData</span><span style="color:#24292E;">( </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[]{</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">22</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">33</span><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(str);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//方法作用：将int数组转换为指定格式的字符串</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getArrayData</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//1.判断数组是否为null</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(arr</span><span style="color:#D73A49;">==</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//2.如果数组不为null，再遍历，并拼接数组中的元素</span></span>
<span class="line"><span style="color:#24292E;">        StringJoiner s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringJoiner</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;, &quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;[&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;]&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">arr.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//加&quot;&quot;是因为add方法的参数要的是String类型</span></span>
<span class="line"><span style="color:#24292E;">            s.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(String.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(arr[i]));</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//3、把StringJoiner转换为String，并返回。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> s.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="三、math类" tabindex="-1">三、Math类 <a class="header-anchor" href="#三、math类" aria-label="Permalink to &quot;三、Math类&quot;">​</a></h2><p>Math是数学的意思，该类提供了很多个进行数学运算的方法，如求绝对值，求最大值，四舍五入等，话不多说，直接上代码。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">MathTest</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 目标：了解下Math类提供的常见方法。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、public static int abs(int a)：取绝对值（拿到的结果一定是正数）</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//    public static double abs(double a)</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">abs</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 12</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">abs</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">123</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 123</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">abs</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">3.14</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 3.14</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、public static double ceil(double a): 向上取整</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">ceil</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">4.0000001</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 5.0</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">ceil</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">4.0</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 4.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、public static double floor(double a): 向下取整</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">floor</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">4.999999</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 4.0</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">floor</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">4.0</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 4.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 4、public static long round(double a)：四舍五入</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">round</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">3.4999</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 3</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">round</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">3.50001</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 5、public static int max(int a, int b)：取较大值</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//   public static int min(int a, int b)：取较小值</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">max</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 20</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">min</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 6、 public static double pow(double a, double b)：取次方</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">pow</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 2的3次方   8.0</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">pow</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 3的2次方   9.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 7、public static double random()： 取随机数 [0.0 , 1.0) (包前不包后)</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(Math.</span><span style="color:#62E884;">random</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MathTest</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 目标：了解下Math类提供的常见方法。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、public static int abs(int a)：取绝对值（拿到的结果一定是正数）</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//    public static double abs(double a)</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">abs</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 12</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">abs</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">123</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 123</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">abs</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">3.14</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 3.14</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、public static double ceil(double a): 向上取整</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">ceil</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4.0000001</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 5.0</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">ceil</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4.0</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 4.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、public static double floor(double a): 向下取整</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4.999999</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 4.0</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">floor</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4.0</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 4.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 4、public static long round(double a)：四舍五入</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">round</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3.4999</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 3</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">round</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3.50001</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 5、public static int max(int a, int b)：取较大值</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//   public static int min(int a, int b)：取较小值</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 20</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 6、 public static double pow(double a, double b)：取次方</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">pow</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 2的3次方   8.0</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">pow</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 3的2次方   9.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 7、public static double random()： 取随机数 [0.0 , 1.0) (包前不包后)</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">random</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="四、-system类" tabindex="-1">四、 System类 <a class="header-anchor" href="#四、-system类" aria-label="Permalink to &quot;四、 System类&quot;">​</a></h2><p>接下来，学习一个System类，这是系统类，提供了一些获取获取系统数据的方法。比如获取系统时间。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * 目标：了解下System类的常见方法。</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">SystemTest</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、public static void exit(int status):</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//   终止当前运行的Java虚拟机。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//   该参数用作状态代码; 按照惯例，非零状态代码表示异常终止。</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.</span><span style="color:#62E884;">exit</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">); </span><span style="color:#7B7F8B;">// 人为的终止虚拟机。(不要使用)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、public static long currentTimeMillis():</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//    获取当前系统的时间</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//    返回的是long类型的时间毫秒值：指的是从1970-1-1 0:0:0开始走到此刻的总的毫秒值，1s = 1000ms</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> time </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> System.</span><span style="color:#62E884;">currentTimeMillis</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(time);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1000000</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">输出了：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> i);</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> time2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> System.</span><span style="color:#62E884;">currentTimeMillis</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">((time2 </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> time) </span><span style="color:#F286C4;">/</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1000.0</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">s</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 目标：了解下System类的常见方法。</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SystemTest</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、public static void exit(int status):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//   终止当前运行的Java虚拟机。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//   该参数用作状态代码; 按照惯例，非零状态代码表示异常终止。</span></span>
<span class="line"><span style="color:#24292E;">        System.</span><span style="color:#6F42C1;">exit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 人为的终止虚拟机。(不要使用)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、public static long currentTimeMillis():</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//    获取当前系统的时间</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//    返回的是long类型的时间毫秒值：指的是从1970-1-1 0:0:0开始走到此刻的总的毫秒值，1s = 1000ms</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> time </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(time);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000000</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;输出了：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> i);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> time2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">((time2 </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> time) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000.0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="五、runtime类" tabindex="-1">五、Runtime类 <a class="header-anchor" href="#五、runtime类" aria-label="Permalink to &quot;五、Runtime类&quot;">​</a></h2><p>接下来，我们再学习一个Java的运行时类，叫Runtime类。这个类可以用来获取JVM的一些信息，也可以用这个类去执行其他的程序。话不多少，上代码。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> *  目标：了解下Runtime的几个常见方法。</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">RuntimeTest</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">throws</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">IOException</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;font-style:italic;">InterruptedException</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、public static Runtime getRuntime() 返回与当前Java应用程序关联的运行时对象。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Runtime</span><span style="color:#F6F6F4;"> r </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Runtime.</span><span style="color:#62E884;">getRuntime</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、public void exit(int status) 终止当前运行的虚拟机,该参数用作状态代码; 按照惯例，非零状态代码表示异常终止。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// r.exit(0);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、public int availableProcessors(): 获取虚拟机能够使用的处理器数。</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(r.</span><span style="color:#62E884;">availableProcessors</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 4、public long totalMemory() 返回Java虚拟机中的内存总量。</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(r.</span><span style="color:#62E884;">totalMemory</span><span style="color:#F6F6F4;">()</span><span style="color:#F286C4;">/</span><span style="color:#BF9EEE;">1024.0</span><span style="color:#F286C4;">/</span><span style="color:#BF9EEE;">1024.0</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">MB</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">); </span><span style="color:#7B7F8B;">// 1024 = 1K     1024 * 1024 = 1M</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 5、public long freeMemory() 返回Java虚拟机中的可用内存量</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(r.</span><span style="color:#62E884;">freeMemory</span><span style="color:#F6F6F4;">()</span><span style="color:#F286C4;">/</span><span style="color:#BF9EEE;">1024.0</span><span style="color:#F286C4;">/</span><span style="color:#BF9EEE;">1024.0</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">MB</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 6、public Process exec(String command) 启动某个程序，并返回代表该程序的对象。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// r.exec(&quot;D:\\\\soft\\\\XMind\\\\XMind.exe&quot;);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Process</span><span style="color:#F6F6F4;"> p </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> r.</span><span style="color:#62E884;">exec</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">QQ</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        Thread.</span><span style="color:#62E884;">sleep</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">5000</span><span style="color:#F6F6F4;">); </span><span style="color:#7B7F8B;">// 让程序在这里暂停5s后继续往下走！！</span></span>
<span class="line"><span style="color:#F6F6F4;">        p.</span><span style="color:#62E884;">destroy</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 销毁！关闭程序！</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> *  目标：了解下Runtime的几个常见方法。</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RuntimeTest</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> IOException, InterruptedException {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、public static Runtime getRuntime() 返回与当前Java应用程序关联的运行时对象。</span></span>
<span class="line"><span style="color:#24292E;">        Runtime r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Runtime.</span><span style="color:#6F42C1;">getRuntime</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、public void exit(int status) 终止当前运行的虚拟机,该参数用作状态代码; 按照惯例，非零状态代码表示异常终止。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// r.exit(0);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、public int availableProcessors(): 获取虚拟机能够使用的处理器数。</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(r.</span><span style="color:#6F42C1;">availableProcessors</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 4、public long totalMemory() 返回Java虚拟机中的内存总量。</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(r.</span><span style="color:#6F42C1;">totalMemory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1024.0</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1024.0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;MB&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 1024 = 1K     1024 * 1024 = 1M</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 5、public long freeMemory() 返回Java虚拟机中的可用内存量</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(r.</span><span style="color:#6F42C1;">freeMemory</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1024.0</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1024.0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;MB&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 6、public Process exec(String command) 启动某个程序，并返回代表该程序的对象。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// r.exec(&quot;D:\\\\soft\\\\XMind\\\\XMind.exe&quot;);</span></span>
<span class="line"><span style="color:#24292E;">        Process p </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> r.</span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;QQ&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        Thread.</span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5000</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 让程序在这里暂停5s后继续往下走！！</span></span>
<span class="line"><span style="color:#24292E;">        p.</span><span style="color:#6F42C1;">destroy</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 销毁！关闭程序！</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="六、bigdecimal类" tabindex="-1">六、BigDecimal类 <a class="header-anchor" href="#六、bigdecimal类" aria-label="Permalink to &quot;六、BigDecimal类&quot;">​</a></h2><p>各位同学，接下来我们学习的这个类叫BigDecimal，至于它是干什么用的，我们先不说。我们先看一段代码，看这个代码有什么问题？再说BigDeimal这个类是干什么用的，这样会更好理解一些。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">0.1</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0.2</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">1.0</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0.32</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">1.015</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">1.301</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">/</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0.1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1.0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.32</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1.015</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1.301</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>运行以上代码，我们会发现，结果并和我们想看到的不太一样。如下图所示</p><img src="`+o+`"><p>为了解决计算精度损失的问题，Java给我们提供了BigDecimal类，它提供了一些方法可以对数据进行四则运算，而且不丢失精度，同时还可以保留指定的小数位。下面看代码，演示一下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test2</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 目标：掌握BigDecimal进行精确运算的方案。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0.1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> b </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0.2</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、把浮点型数据封装成BigDecimal对象，再来参与运算。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// a、public BigDecimal(double val) 得到的BigDecimal对象是无法精确计算浮点型数据的。 注意：不推荐使用这个，</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// b、public BigDecimal(String val)  得到的BigDecimal对象是可以精确计算浮点型数据的。 可以使用。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// c、public static BigDecimal valueOf(double val): 通过这个静态方法得到的BigDecimal对象是可以精确运算的。是最好的方案。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">BigDecimal</span><span style="color:#F6F6F4;"> a1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> BigDecimal.</span><span style="color:#62E884;">valueOf</span><span style="color:#F6F6F4;">(a);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">BigDecimal</span><span style="color:#F6F6F4;"> b1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> BigDecimal.</span><span style="color:#62E884;">valueOf</span><span style="color:#F6F6F4;">(b);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、public BigDecimal add(BigDecimal augend): 加法</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">BigDecimal</span><span style="color:#F6F6F4;"> c1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> a1.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(b1);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(c1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、public BigDecimal subtract(BigDecimal augend): 减法</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">BigDecimal</span><span style="color:#F6F6F4;"> c2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> a1.</span><span style="color:#62E884;">subtract</span><span style="color:#F6F6F4;">(b1);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(c2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 4、public BigDecimal multiply(BigDecimal augend): 乘法</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">BigDecimal</span><span style="color:#F6F6F4;"> c3 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> a1.</span><span style="color:#62E884;">multiply</span><span style="color:#F6F6F4;">(b1);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(c3);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 5、public BigDecimal divide(BigDecimal b): 除法</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">BigDecimal</span><span style="color:#F6F6F4;"> c4 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> a1.</span><span style="color:#62E884;">divide</span><span style="color:#F6F6F4;">(b1);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(c4);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">//        BigDecimal d1 = BigDecimal.valueOf(0.1);</span></span>
<span class="line"><span style="color:#7B7F8B;">//        BigDecimal d2 = BigDecimal.valueOf(0.3);</span></span>
<span class="line"><span style="color:#7B7F8B;">//        BigDecimal d3 = d1.divide(d2);</span></span>
<span class="line"><span style="color:#7B7F8B;">//        System.out.println(d3);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 6、public BigDecimal divide(另一个BigDecimal对象，精确几位，舍入模式) : 除法，可以设置精确几位。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">BigDecimal</span><span style="color:#F6F6F4;"> d1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> BigDecimal.</span><span style="color:#62E884;">valueOf</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">0.1</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">BigDecimal</span><span style="color:#F6F6F4;"> d2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> BigDecimal.</span><span style="color:#62E884;">valueOf</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">0.3</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">BigDecimal</span><span style="color:#F6F6F4;"> d3 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> d1.</span><span style="color:#62E884;">divide</span><span style="color:#F6F6F4;">(d2,  </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">, RoundingMode.HALF_UP); </span><span style="color:#7B7F8B;">// 0.33</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(d3);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 7、public double doubleValue() : 把BigDecimal对象又转换成double类型的数据。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//print(d3);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//print(c1);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> db1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> d3.</span><span style="color:#62E884;">doubleValue</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> db2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> c1.</span><span style="color:#62E884;">doubleValue</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(db1);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(db2);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">a</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(a);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 目标：掌握BigDecimal进行精确运算的方案。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、把浮点型数据封装成BigDecimal对象，再来参与运算。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// a、public BigDecimal(double val) 得到的BigDecimal对象是无法精确计算浮点型数据的。 注意：不推荐使用这个，</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// b、public BigDecimal(String val)  得到的BigDecimal对象是可以精确计算浮点型数据的。 可以使用。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// c、public static BigDecimal valueOf(double val): 通过这个静态方法得到的BigDecimal对象是可以精确运算的。是最好的方案。</span></span>
<span class="line"><span style="color:#24292E;">        BigDecimal a1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> BigDecimal.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(a);</span></span>
<span class="line"><span style="color:#24292E;">        BigDecimal b1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> BigDecimal.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(b);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、public BigDecimal add(BigDecimal augend): 加法</span></span>
<span class="line"><span style="color:#24292E;">        BigDecimal c1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a1.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(b1);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(c1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、public BigDecimal subtract(BigDecimal augend): 减法</span></span>
<span class="line"><span style="color:#24292E;">        BigDecimal c2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a1.</span><span style="color:#6F42C1;">subtract</span><span style="color:#24292E;">(b1);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(c2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 4、public BigDecimal multiply(BigDecimal augend): 乘法</span></span>
<span class="line"><span style="color:#24292E;">        BigDecimal c3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a1.</span><span style="color:#6F42C1;">multiply</span><span style="color:#24292E;">(b1);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(c3);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 5、public BigDecimal divide(BigDecimal b): 除法</span></span>
<span class="line"><span style="color:#24292E;">        BigDecimal c4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a1.</span><span style="color:#6F42C1;">divide</span><span style="color:#24292E;">(b1);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(c4);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//        BigDecimal d1 = BigDecimal.valueOf(0.1);</span></span>
<span class="line"><span style="color:#6A737D;">//        BigDecimal d2 = BigDecimal.valueOf(0.3);</span></span>
<span class="line"><span style="color:#6A737D;">//        BigDecimal d3 = d1.divide(d2);</span></span>
<span class="line"><span style="color:#6A737D;">//        System.out.println(d3);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 6、public BigDecimal divide(另一个BigDecimal对象，精确几位，舍入模式) : 除法，可以设置精确几位。</span></span>
<span class="line"><span style="color:#24292E;">        BigDecimal d1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> BigDecimal.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0.1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        BigDecimal d2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> BigDecimal.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0.3</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        BigDecimal d3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> d1.</span><span style="color:#6F42C1;">divide</span><span style="color:#24292E;">(d2,  </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, RoundingMode.HALF_UP); </span><span style="color:#6A737D;">// 0.33</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(d3);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 7、public double doubleValue() : 把BigDecimal对象又转换成double类型的数据。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//print(d3);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//print(c1);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> db1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> d3.</span><span style="color:#6F42C1;">doubleValue</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> db2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> c1.</span><span style="color:#6F42C1;">doubleValue</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(db1);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(db2);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#E36209;">a</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(a);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="五、date类" tabindex="-1">五、Date类 <a class="header-anchor" href="#五、date类" aria-label="Permalink to &quot;五、Date类&quot;">​</a></h2><p>接下来，我们学习一下Date类，Java中是由这个类的对象用来表示日期或者时间。</p><p>Date对象记录的时间是用毫秒值来表示的。Java语言规定，1970年1月1日0时0分0秒认为是时间的起点，此时记作0，那么1000（1秒=1000毫秒）就表示1970年1月1日0时0分1秒，依次内推。</p><img src="`+e+'"><p>下面是Date类的构造方法，和常见的成员方法，利用这些API写代码尝试一下</p><img src="'+t+`"><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test1Date</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 目标：掌握Date日期类的使用。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、创建一个Date的对象：代表系统当前时间信息的。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Date</span><span style="color:#F6F6F4;"> d </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Date</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(d);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、拿到时间毫秒值。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> time </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> d.</span><span style="color:#62E884;">getTime</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(time);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、把时间毫秒值转换成日期对象： 2s之后的时间是多少。</span></span>
<span class="line"><span style="color:#F6F6F4;">        time </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1000</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Date</span><span style="color:#F6F6F4;"> d2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Date</span><span style="color:#F6F6F4;">(time);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(d2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 4、直接把日期对象的时间通过setTime方法进行修改</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Date</span><span style="color:#F6F6F4;"> d3 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Date</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        d3.</span><span style="color:#62E884;">setTime</span><span style="color:#F6F6F4;">(time);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(d3);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test1Date</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 目标：掌握Date日期类的使用。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、创建一个Date的对象：代表系统当前时间信息的。</span></span>
<span class="line"><span style="color:#24292E;">        Date d </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(d);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、拿到时间毫秒值。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> time </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> d.</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(time);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、把时间毫秒值转换成日期对象： 2s之后的时间是多少。</span></span>
<span class="line"><span style="color:#24292E;">        time </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        Date d2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(time);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(d2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 4、直接把日期对象的时间通过setTime方法进行修改</span></span>
<span class="line"><span style="color:#24292E;">        Date d3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        d3.</span><span style="color:#6F42C1;">setTime</span><span style="color:#24292E;">(time);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(d3);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="六、simpledateformat类" tabindex="-1">六、SimpleDateFormat类 <a class="header-anchor" href="#六、simpledateformat类" aria-label="Permalink to &quot;六、SimpleDateFormat类&quot;">​</a></h2><p>各位同学，前面我们打印Date对象时，发现打印输出的日期格式我们并不喜欢，是不是？你们喜欢那种格式呢？是不是像下面页面中这种格式啊？接下来我们学习的SimpleDateFormat类就可以转换Date对象表示日期时间的显示格式。</p><ul><li><p>我们把Date对象转换为指定格式的日期字符串这个操作，叫做<strong>日期格式化，</strong></p></li><li><p>反过来把指定格式的日期符串转换为Date对象的操作，叫做<strong>日期解析。</strong></p></li></ul><img src="`+c+'"><p>接下来，我们先演示一下日期格式化，需要用到如下的几个方法</p><img src="'+r+`"><p>注意：创建SimpleDateFormat对象时，在构造方法的参数位置传递日期格式，而日期格式是由一些特定的字母拼接而来的。我们需要记住常用的几种日期/时间格式</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">字母	   表示含义</span></span>
<span class="line"><span style="color:#F6F6F4;">yyyy	年</span></span>
<span class="line"><span style="color:#F6F6F4;">MM		月</span></span>
<span class="line"><span style="color:#F6F6F4;">dd		日</span></span>
<span class="line"><span style="color:#F6F6F4;">HH		时</span></span>
<span class="line"><span style="color:#F6F6F4;">mm		分</span></span>
<span class="line"><span style="color:#F6F6F4;">ss		秒</span></span>
<span class="line"><span style="color:#F6F6F4;">SSS		毫秒</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2022年12月12日</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> 的格式是 </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">yyyy年MM月dd日</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2022-12-12 12:12:12</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> 的格式是 </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">yyyy-MM-dd HH:mm:ss</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">按照上面的格式可以任意拼接，但是字母不能写错</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">字母	   表示含义</span></span>
<span class="line"><span style="color:#24292E;">yyyy	年</span></span>
<span class="line"><span style="color:#24292E;">MM		月</span></span>
<span class="line"><span style="color:#24292E;">dd		日</span></span>
<span class="line"><span style="color:#24292E;">HH		时</span></span>
<span class="line"><span style="color:#24292E;">mm		分</span></span>
<span class="line"><span style="color:#24292E;">ss		秒</span></span>
<span class="line"><span style="color:#24292E;">SSS		毫秒</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;2022年12月12日&quot;</span><span style="color:#24292E;"> 的格式是 </span><span style="color:#032F62;">&quot;yyyy年MM月dd日&quot;</span></span>
<span class="line"><span style="color:#032F62;">&quot;2022-12-12 12:12:12&quot;</span><span style="color:#24292E;"> 的格式是 </span><span style="color:#032F62;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span></span>
<span class="line"><span style="color:#24292E;">按照上面的格式可以任意拼接，但是字母不能写错</span></span></code></pre></div><p>最后，上代码演示一下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test2SimpleDateFormat</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">throws</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ParseException</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 目标：掌握SimpleDateFormat的使用。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、准备一些时间</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Date</span><span style="color:#F6F6F4;"> d </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Date</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(d);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> time </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> d.</span><span style="color:#62E884;">getTime</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(time);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、格式化日期对象，和时间 毫秒值。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">SimpleDateFormat</span><span style="color:#F6F6F4;"> sdf </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">SimpleDateFormat</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">yyyy年MM月dd日 HH:mm:ss EEE a</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> rs </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sdf.</span><span style="color:#62E884;">format</span><span style="color:#F6F6F4;">(d);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> rs2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sdf.</span><span style="color:#62E884;">format</span><span style="color:#F6F6F4;">(time);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(rs);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(rs2);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">----------------------------------------------</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 目标：掌握SimpleDateFormat解析字符串时间 成为日期对象。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> dateStr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2022-12-12 12:12:11</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、创建简单日期格式化对象 , 指定的时间格式必须与被解析的时间格式一模一样，否则程序会出bug.</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">SimpleDateFormat</span><span style="color:#F6F6F4;"> sdf2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">SimpleDateFormat</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">yyyy-MM-dd HH:mm:ss</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Date</span><span style="color:#F6F6F4;"> d2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sdf2.</span><span style="color:#62E884;">parse</span><span style="color:#F6F6F4;">(dateStr);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(d2);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test2SimpleDateFormat</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> ParseException {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 目标：掌握SimpleDateFormat的使用。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、准备一些时间</span></span>
<span class="line"><span style="color:#24292E;">        Date d </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(d);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> time </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> d.</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(time);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、格式化日期对象，和时间 毫秒值。</span></span>
<span class="line"><span style="color:#24292E;">        SimpleDateFormat sdf </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SimpleDateFormat</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;yyyy年MM月dd日 HH:mm:ss EEE a&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        String rs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sdf.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(d);</span></span>
<span class="line"><span style="color:#24292E;">        String rs2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sdf.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(time);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(rs);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(rs2);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;----------------------------------------------&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 目标：掌握SimpleDateFormat解析字符串时间 成为日期对象。</span></span>
<span class="line"><span style="color:#24292E;">        String dateStr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;2022-12-12 12:12:11&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、创建简单日期格式化对象 , 指定的时间格式必须与被解析的时间格式一模一样，否则程序会出bug.</span></span>
<span class="line"><span style="color:#24292E;">        SimpleDateFormat sdf2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SimpleDateFormat</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        Date d2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sdf2.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(dateStr);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(d2);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p><strong>日期格式化&amp;解析案例</strong></p><img src="`+y+`"></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test3</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">throws</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ParseException</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 目标：完成秒杀案例。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、把开始时间、结束时间、小贾下单时间、小皮下单时间拿到程序中来。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> start </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2023年11月11日 0:0:0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> end </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2023年11月11日 0:10:0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> xj </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2023年11月11日 0:01:18</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> xp </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2023年11月11日 0:10:57</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、把字符串的时间解析成日期对象。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">SimpleDateFormat</span><span style="color:#F6F6F4;"> sdf </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">SimpleDateFormat</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">yyyy年MM月dd日 HH:mm:ss</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Date</span><span style="color:#F6F6F4;"> startDt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sdf.</span><span style="color:#62E884;">parse</span><span style="color:#F6F6F4;">(start);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Date</span><span style="color:#F6F6F4;"> endDt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sdf.</span><span style="color:#62E884;">parse</span><span style="color:#F6F6F4;">(end);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Date</span><span style="color:#F6F6F4;"> xjDt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sdf.</span><span style="color:#62E884;">parse</span><span style="color:#F6F6F4;">(xj);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Date</span><span style="color:#F6F6F4;"> xpDt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sdf.</span><span style="color:#62E884;">parse</span><span style="color:#F6F6F4;">(xp);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、开始判断小皮和小贾是否秒杀成功了。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 把日期对象转换成时间毫秒值来判断</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> startTime </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> startDt.</span><span style="color:#62E884;">getTime</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> endTime </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> endDt.</span><span style="color:#62E884;">getTime</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> xjTime </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> xjDt.</span><span style="color:#62E884;">getTime</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> xpTime </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> xpDt.</span><span style="color:#62E884;">getTime</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(xjTime </span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;"> startTime </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> xjTime </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> endTime){</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">小贾您秒杀成功了~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">小贾您秒杀失败了~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(xpTime </span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;"> startTime </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> xpTime </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> endTime){</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">小皮您秒杀成功了~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">小皮您秒杀失败了~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test3</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> ParseException {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 目标：完成秒杀案例。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、把开始时间、结束时间、小贾下单时间、小皮下单时间拿到程序中来。</span></span>
<span class="line"><span style="color:#24292E;">        String start </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;2023年11月11日 0:0:0&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        String end </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;2023年11月11日 0:10:0&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        String xj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;2023年11月11日 0:01:18&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        String xp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;2023年11月11日 0:10:57&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、把字符串的时间解析成日期对象。</span></span>
<span class="line"><span style="color:#24292E;">        SimpleDateFormat sdf </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SimpleDateFormat</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        Date startDt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sdf.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(start);</span></span>
<span class="line"><span style="color:#24292E;">        Date endDt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sdf.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(end);</span></span>
<span class="line"><span style="color:#24292E;">        Date xjDt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sdf.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(xj);</span></span>
<span class="line"><span style="color:#24292E;">        Date xpDt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sdf.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(xp);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、开始判断小皮和小贾是否秒杀成功了。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 把日期对象转换成时间毫秒值来判断</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> startTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> startDt.</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> endTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> endDt.</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> xjTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> xjDt.</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> xpTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> xpDt.</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(xjTime </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> startTime </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> xjTime </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> endTime){</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;小贾您秒杀成功了~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;小贾您秒杀失败了~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(xpTime </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> startTime </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> xpTime </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> endTime){</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;小皮您秒杀成功了~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;小皮您秒杀失败了~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="七、calendar类" tabindex="-1">七、Calendar类 <a class="header-anchor" href="#七、calendar类" aria-label="Permalink to &quot;七、Calendar类&quot;">​</a></h2><p>学完Date类和SimpleDateFormat类之后，我们再学习一个和日期相关的类，它是Calendar类。Calendar类表示日历，它提供了一些比Date类更好用的方法。</p><p>比如下面的案例，用Date类就不太好做，而用Calendar就特别方便。因为Calendar类提供了方法可以直接对日历中的年、月、日、时、分、秒等进行运算。</p><img src="`+F+'"><img src="'+i+`"><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test4Calendar</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 目标：掌握Calendar的使用和特点。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、得到系统此刻时间对应的日历对象。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Calendar</span><span style="color:#F6F6F4;"> now </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Calendar.</span><span style="color:#62E884;">getInstance</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(now);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、获取日历中的某个信息</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> year </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> now.</span><span style="color:#62E884;">get</span><span style="color:#F6F6F4;">(Calendar.YEAR);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(year);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> days </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> now.</span><span style="color:#62E884;">get</span><span style="color:#F6F6F4;">(Calendar.DAY_OF_YEAR);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(days);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、拿到日历中记录的日期对象。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Date</span><span style="color:#F6F6F4;"> d </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> now.</span><span style="color:#62E884;">getTime</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(d);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 4、拿到时间毫秒值</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> time </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> now.</span><span style="color:#62E884;">getTimeInMillis</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(time);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 5、修改日历中的某个信息</span></span>
<span class="line"><span style="color:#F6F6F4;">        now.</span><span style="color:#62E884;">set</span><span style="color:#F6F6F4;">(Calendar.MONTH, </span><span style="color:#BF9EEE;">9</span><span style="color:#F6F6F4;">); </span><span style="color:#7B7F8B;">// 修改月份成为10月份。</span></span>
<span class="line"><span style="color:#F6F6F4;">        now.</span><span style="color:#62E884;">set</span><span style="color:#F6F6F4;">(Calendar.DAY_OF_YEAR, </span><span style="color:#BF9EEE;">125</span><span style="color:#F6F6F4;">); </span><span style="color:#7B7F8B;">// 修改成一年中的第125天。</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(now);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 6、为某个信息增加或者减少多少</span></span>
<span class="line"><span style="color:#F6F6F4;">        now.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(Calendar.DAY_OF_YEAR, </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        now.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(Calendar.DAY_OF_YEAR, </span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        now.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(Calendar.DAY_OF_MONTH, </span><span style="color:#BF9EEE;">6</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        now.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(Calendar.HOUR, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        now.</span><span style="color:#62E884;">set</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2026</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">22</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(now);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test4Calendar</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 目标：掌握Calendar的使用和特点。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、得到系统此刻时间对应的日历对象。</span></span>
<span class="line"><span style="color:#24292E;">        Calendar now </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Calendar.</span><span style="color:#6F42C1;">getInstance</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(now);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、获取日历中的某个信息</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> year </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> now.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(Calendar.YEAR);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(year);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> days </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> now.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(Calendar.DAY_OF_YEAR);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(days);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、拿到日历中记录的日期对象。</span></span>
<span class="line"><span style="color:#24292E;">        Date d </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> now.</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(d);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 4、拿到时间毫秒值</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> time </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> now.</span><span style="color:#6F42C1;">getTimeInMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(time);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 5、修改日历中的某个信息</span></span>
<span class="line"><span style="color:#24292E;">        now.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(Calendar.MONTH, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 修改月份成为10月份。</span></span>
<span class="line"><span style="color:#24292E;">        now.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(Calendar.DAY_OF_YEAR, </span><span style="color:#005CC5;">125</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 修改成一年中的第125天。</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(now);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 6、为某个信息增加或者减少多少</span></span>
<span class="line"><span style="color:#24292E;">        now.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(Calendar.DAY_OF_YEAR, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        now.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(Calendar.DAY_OF_YEAR, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        now.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(Calendar.DAY_OF_MONTH, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        now.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(Calendar.HOUR, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        now.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2026</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">22</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(now);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="八、为什么jdk8要新增日期类" tabindex="-1">八、为什么JDK8要新增日期类 <a class="header-anchor" href="#八、为什么jdk8要新增日期类" aria-label="Permalink to &quot;八、为什么JDK8要新增日期类&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> *  目标：搞清楚为什么要用JDK 8开始新增的时间类。</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 传统的时间类（Date、SimpleDateFormat、Calendar）存在如下问题：</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、设计不合理，使用不方便，很多都被淘汰了。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Date</span><span style="color:#F6F6F4;"> d </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Date</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//System.out.println(d.getYear() + 1900);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Calendar</span><span style="color:#F6F6F4;"> c </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Calendar.</span><span style="color:#62E884;">getInstance</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> year </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> c.</span><span style="color:#62E884;">get</span><span style="color:#F6F6F4;">(Calendar.YEAR);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(year);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、都是可变对象，修改后会丢失最开始的时间信息。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、线程不安全。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 4、不能精确到纳秒，只能精确到毫秒。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1秒 = 1000毫秒</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1毫秒 = 1000微妙</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1微妙 = 1000纳秒</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> *  目标：搞清楚为什么要用JDK 8开始新增的时间类。</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 传统的时间类（Date、SimpleDateFormat、Calendar）存在如下问题：</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、设计不合理，使用不方便，很多都被淘汰了。</span></span>
<span class="line"><span style="color:#24292E;">        Date d </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//System.out.println(d.getYear() + 1900);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        Calendar c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Calendar.</span><span style="color:#6F42C1;">getInstance</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> year </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(Calendar.YEAR);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(year);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、都是可变对象，修改后会丢失最开始的时间信息。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、线程不安全。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 4、不能精确到纳秒，只能精确到毫秒。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1秒 = 1000毫秒</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1毫秒 = 1000微妙</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1微妙 = 1000纳秒</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="九、jdk8日期、时间、日期时间" tabindex="-1">九、JDK8日期、时间、日期时间 <a class="header-anchor" href="#九、jdk8日期、时间、日期时间" aria-label="Permalink to &quot;九、JDK8日期、时间、日期时间&quot;">​</a></h2><p>接下来，我们学习一下JDK8新增的日期类。为什么以前的Date类就可以表示日期，为什么要有新增的日期类呢？原因如下</p><img src="`+E+'"><p>JDK8新增的日期类分得更细致一些，比如表示年月日用LocalDate类、表示时间秒用LocalTime类、而表示年月日时分秒用LocalDateTime类等；除了这些类还提供了对时区、时间间隔进行操作的类等。它们几乎把对日期/时间的所有操作都通过了API方法，用起来特别方便。</p><img src="'+d+`"><p>先学习表示日期、时间、日期时间的类；有LocalDate、LocalTime、以及LocalDateTime类。仔细阅读代码，你会发现这三个类的用法套路都是一样的。</p><ul><li>LocalDate类的基本使用</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test1_LocalDate</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 0、获取本地日期对象(不可变对象)</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> ld </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDate.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 年 月 日</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ld);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、获取日期对象中的信息</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> year </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ld.</span><span style="color:#62E884;">getYear</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 年</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> month </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ld.</span><span style="color:#62E884;">getMonthValue</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 月(1-12)</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> day </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ld.</span><span style="color:#62E884;">getDayOfMonth</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 日</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> dayOfYear </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ld.</span><span style="color:#62E884;">getDayOfYear</span><span style="color:#F6F6F4;">();  </span><span style="color:#7B7F8B;">// 一年中的第几天</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> dayOfWeek </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ld.</span><span style="color:#62E884;">getDayOfWeek</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">getValue</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 星期几</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(year);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(day);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(dayOfWeek);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、直接修改某个信息: withYear、withMonth、withDayOfMonth、withDayOfYear</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> ld2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ld.</span><span style="color:#62E884;">withYear</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2099</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> ld3 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ld.</span><span style="color:#62E884;">withMonth</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ld2);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ld3);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ld);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、把某个信息加多少: plusYears、plusMonths、plusDays、plusWeeks</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> ld4 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ld.</span><span style="color:#62E884;">plusYears</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> ld5 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ld.</span><span style="color:#62E884;">plusMonths</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 4、把某个信息减多少：minusYears、minusMonths、minusDays、minusWeeks</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> ld6 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ld.</span><span style="color:#62E884;">minusYears</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> ld7 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ld.</span><span style="color:#62E884;">minusMonths</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 5、获取指定日期的LocalDate对象： public static LocalDate of(int year, int month, int dayOfMonth)</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> ld8 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDate.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2099</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> ld9 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDate.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2099</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 6、判断2个日期对象，是否相等，在前还是在后： equals isBefore isAfter</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ld8.</span><span style="color:#62E884;">equals</span><span style="color:#F6F6F4;">(ld9));</span><span style="color:#7B7F8B;">// true</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ld8.</span><span style="color:#62E884;">isAfter</span><span style="color:#F6F6F4;">(ld)); </span><span style="color:#7B7F8B;">// true</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ld8.</span><span style="color:#62E884;">isBefore</span><span style="color:#F6F6F4;">(ld)); </span><span style="color:#7B7F8B;">// false</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test1_LocalDate</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 0、获取本地日期对象(不可变对象)</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate ld </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDate.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 年 月 日</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ld);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、获取日期对象中的信息</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> year </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ld.</span><span style="color:#6F42C1;">getYear</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 年</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> month </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ld.</span><span style="color:#6F42C1;">getMonthValue</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 月(1-12)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> day </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ld.</span><span style="color:#6F42C1;">getDayOfMonth</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 日</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> dayOfYear </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ld.</span><span style="color:#6F42C1;">getDayOfYear</span><span style="color:#24292E;">();  </span><span style="color:#6A737D;">// 一年中的第几天</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> dayOfWeek </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ld.</span><span style="color:#6F42C1;">getDayOfWeek</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getValue</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 星期几</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(year);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(day);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(dayOfWeek);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、直接修改某个信息: withYear、withMonth、withDayOfMonth、withDayOfYear</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate ld2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ld.</span><span style="color:#6F42C1;">withYear</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2099</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate ld3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ld.</span><span style="color:#6F42C1;">withMonth</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ld2);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ld3);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ld);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、把某个信息加多少: plusYears、plusMonths、plusDays、plusWeeks</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate ld4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ld.</span><span style="color:#6F42C1;">plusYears</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate ld5 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ld.</span><span style="color:#6F42C1;">plusMonths</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 4、把某个信息减多少：minusYears、minusMonths、minusDays、minusWeeks</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate ld6 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ld.</span><span style="color:#6F42C1;">minusYears</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate ld7 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ld.</span><span style="color:#6F42C1;">minusMonths</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 5、获取指定日期的LocalDate对象： public static LocalDate of(int year, int month, int dayOfMonth)</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate ld8 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDate.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2099</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate ld9 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDate.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2099</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 6、判断2个日期对象，是否相等，在前还是在后： equals isBefore isAfter</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ld8.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(ld9));</span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ld8.</span><span style="color:#6F42C1;">isAfter</span><span style="color:#24292E;">(ld)); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ld8.</span><span style="color:#6F42C1;">isBefore</span><span style="color:#24292E;">(ld)); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>LocalTime类的基本使用</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test2_LocalTime</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 0、获取本地时间对象</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalTime.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 时 分 秒 纳秒 不可变的</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(lt);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、获取时间中的信息</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> hour </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">getHour</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">//时</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> minute </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">getMinute</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">//分</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> second </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">getSecond</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">//秒</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> nano </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">getNano</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">//纳秒</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、修改时间：withHour、withMinute、withSecond、withNano</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt3 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">withHour</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt4 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">withMinute</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt5 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">withSecond</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt6 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">withNano</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、加多少：plusHours、plusMinutes、plusSeconds、plusNanos</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt7 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">plusHours</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt8 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">plusMinutes</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt9 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">plusSeconds</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt10 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">plusNanos</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 4、减多少：minusHours、minusMinutes、minusSeconds、minusNanos</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt11 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">minusHours</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt12 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">minusMinutes</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt13 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">minusSeconds</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt14 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lt.</span><span style="color:#62E884;">minusNanos</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 5、获取指定时间的LocalTime对象：</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// public static LocalTime of(int hour, int minute, int second)</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt15 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalTime.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt16 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalTime.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 6、判断2个时间对象，是否相等，在前还是在后： equals isBefore isAfter</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(lt15.</span><span style="color:#62E884;">equals</span><span style="color:#F6F6F4;">(lt16)); </span><span style="color:#7B7F8B;">// true</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(lt15.</span><span style="color:#62E884;">isAfter</span><span style="color:#F6F6F4;">(lt)); </span><span style="color:#7B7F8B;">// false</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(lt15.</span><span style="color:#62E884;">isBefore</span><span style="color:#F6F6F4;">(lt)); </span><span style="color:#7B7F8B;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test2_LocalTime</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 0、获取本地时间对象</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalTime.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 时 分 秒 纳秒 不可变的</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(lt);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、获取时间中的信息</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> hour </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">getHour</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//时</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> minute </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">getMinute</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//分</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> second </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">getSecond</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//秒</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> nano </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">getNano</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//纳秒</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、修改时间：withHour、withMinute、withSecond、withNano</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">withHour</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">withMinute</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt5 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">withSecond</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt6 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">withNano</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、加多少：plusHours、plusMinutes、plusSeconds、plusNanos</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt7 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">plusHours</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt8 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">plusMinutes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt9 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">plusSeconds</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt10 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">plusNanos</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 4、减多少：minusHours、minusMinutes、minusSeconds、minusNanos</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt11 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">minusHours</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt12 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">minusMinutes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt13 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">minusSeconds</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt14 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lt.</span><span style="color:#6F42C1;">minusNanos</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 5、获取指定时间的LocalTime对象：</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// public static LocalTime of(int hour, int minute, int second)</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt15 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalTime.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt16 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalTime.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 6、判断2个时间对象，是否相等，在前还是在后： equals isBefore isAfter</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(lt15.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(lt16)); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(lt15.</span><span style="color:#6F42C1;">isAfter</span><span style="color:#24292E;">(lt)); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(lt15.</span><span style="color:#6F42C1;">isBefore</span><span style="color:#24292E;">(lt)); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>LocalDateTime类的基本使用</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test3_LocalDateTime</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 0、获取本地日期和时间对象。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> ldt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDateTime.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 年 月 日 时 分 秒 纳秒</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ldt);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、可以获取日期和时间的全部信息</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> year </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">getYear</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 年</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> month </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">getMonthValue</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 月</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> day </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">getDayOfMonth</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 日</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> dayOfYear </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">getDayOfYear</span><span style="color:#F6F6F4;">();  </span><span style="color:#7B7F8B;">// 一年中的第几天</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> dayOfWeek </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">getDayOfWeek</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">getValue</span><span style="color:#F6F6F4;">();  </span><span style="color:#7B7F8B;">// 获取是周几</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> hour </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">getHour</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">//时</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> minute </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">getMinute</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">//分</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> second </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">getSecond</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">//秒</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> nano </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">getNano</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">//纳秒</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、修改时间信息：</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// withYear withMonth withDayOfMonth withDayOfYear withHour</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// withMinute withSecond withNano</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> ldt2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">withYear</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2029</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> ldt3 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">withMinute</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">59</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、加多少:</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// plusYears  plusMonths plusDays plusWeeks plusHours plusMinutes plusSeconds plusNanos</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> ldt4 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">plusYears</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> ldt5 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">plusMinutes</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 4、减多少：</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// minusDays minusYears minusMonths minusWeeks minusHours minusMinutes minusSeconds minusNanos</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> ldt6 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">minusYears</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> ldt7 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">minusMinutes</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 5、获取指定日期和时间的LocalDateTime对象：</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// public static LocalDateTime of(int year, Month month, int dayOfMonth, int hour,</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//                                  int minute, int second, int nanoOfSecond)</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> ldt8 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDateTime.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2029</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">1222</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> ldt9 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDateTime.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2029</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">1222</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 6、 判断2个日期、时间对象，是否相等，在前还是在后： equals、isBefore、isAfter</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ldt9.</span><span style="color:#62E884;">equals</span><span style="color:#F6F6F4;">(ldt8));</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ldt9.</span><span style="color:#62E884;">isAfter</span><span style="color:#F6F6F4;">(ldt));</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ldt9.</span><span style="color:#62E884;">isBefore</span><span style="color:#F6F6F4;">(ldt));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 7、可以把LocalDateTime转换成LocalDate和LocalTime</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// public LocalDate toLocalDate()</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// public LocalTime toLocalTime()</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// public static LocalDateTime of(LocalDate date, LocalTime time)</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> ld </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">toLocalDate</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalTime</span><span style="color:#F6F6F4;"> lt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ldt.</span><span style="color:#62E884;">toLocalTime</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> ldt10 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDateTime.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(ld, lt);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test3_LocalDateTime</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 0、获取本地日期和时间对象。</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime ldt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDateTime.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 年 月 日 时 分 秒 纳秒</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ldt);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、可以获取日期和时间的全部信息</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> year </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">getYear</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 年</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> month </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">getMonthValue</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 月</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> day </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">getDayOfMonth</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 日</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> dayOfYear </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">getDayOfYear</span><span style="color:#24292E;">();  </span><span style="color:#6A737D;">// 一年中的第几天</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> dayOfWeek </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">getDayOfWeek</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getValue</span><span style="color:#24292E;">();  </span><span style="color:#6A737D;">// 获取是周几</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> hour </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">getHour</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//时</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> minute </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">getMinute</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//分</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> second </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">getSecond</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//秒</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> nano </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">getNano</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//纳秒</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、修改时间信息：</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// withYear withMonth withDayOfMonth withDayOfYear withHour</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// withMinute withSecond withNano</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime ldt2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">withYear</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2029</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime ldt3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">withMinute</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">59</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、加多少:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// plusYears  plusMonths plusDays plusWeeks plusHours plusMinutes plusSeconds plusNanos</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime ldt4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">plusYears</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime ldt5 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">plusMinutes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 4、减多少：</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// minusDays minusYears minusMonths minusWeeks minusHours minusMinutes minusSeconds minusNanos</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime ldt6 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">minusYears</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime ldt7 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">minusMinutes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 5、获取指定日期和时间的LocalDateTime对象：</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// public static LocalDateTime of(int year, Month month, int dayOfMonth, int hour,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//                                  int minute, int second, int nanoOfSecond)</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime ldt8 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDateTime.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2029</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1222</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime ldt9 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDateTime.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2029</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1222</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 6、 判断2个日期、时间对象，是否相等，在前还是在后： equals、isBefore、isAfter</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ldt9.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(ldt8));</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ldt9.</span><span style="color:#6F42C1;">isAfter</span><span style="color:#24292E;">(ldt));</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ldt9.</span><span style="color:#6F42C1;">isBefore</span><span style="color:#24292E;">(ldt));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 7、可以把LocalDateTime转换成LocalDate和LocalTime</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// public LocalDate toLocalDate()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// public LocalTime toLocalTime()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// public static LocalDateTime of(LocalDate date, LocalTime time)</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate ld </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">toLocalDate</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        LocalTime lt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ldt.</span><span style="color:#6F42C1;">toLocalTime</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime ldt10 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDateTime.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(ld, lt);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="十、jdk8日期-时区" tabindex="-1">十、JDK8日期（时区） <a class="header-anchor" href="#十、jdk8日期-时区" aria-label="Permalink to &quot;十、JDK8日期（时区）&quot;">​</a></h2><p>接着，我们学习代表时区的两个类。由于世界各个国家与地区的经度不同，各地区的时间也有所不同，因此会划分为不同的时区。每一个时区的时间也不太一样。</p><img src="`+u+`"><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test4_ZoneId_ZonedDateTime</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 目标：了解时区和带时区的时间。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、ZoneId的常见方法：</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// public static ZoneId systemDefault(): 获取系统默认的时区</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">ZoneId</span><span style="color:#F6F6F4;"> zoneId </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ZoneId.</span><span style="color:#62E884;">systemDefault</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(zoneId.</span><span style="color:#62E884;">getId</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(zoneId);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// public static Set&lt;String&gt; getAvailableZoneIds(): 获取Java支持的全部时区Id</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ZoneId.</span><span style="color:#62E884;">getAvailableZoneIds</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// public static ZoneId of(String zoneId) : 把某个时区id封装成ZoneId对象。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">ZoneId</span><span style="color:#F6F6F4;"> zoneId1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ZoneId.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">America/New_York</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、ZonedDateTime：带时区的时间。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// public static ZonedDateTime now(ZoneId zone): 获取某个时区的ZonedDateTime对象。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">ZonedDateTime</span><span style="color:#F6F6F4;"> now </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ZonedDateTime.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">(zoneId1);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(now);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 世界标准时间了</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">ZonedDateTime</span><span style="color:#F6F6F4;"> now1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ZonedDateTime.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">(Clock.</span><span style="color:#62E884;">systemUTC</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(now1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// public static ZonedDateTime now()：获取系统默认时区的ZonedDateTime对象</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">ZonedDateTime</span><span style="color:#F6F6F4;"> now2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ZonedDateTime.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(now2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// Calendar instance = Calendar.getInstance(TimeZone.getTimeZone(zoneId1));</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test4_ZoneId_ZonedDateTime</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 目标：了解时区和带时区的时间。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、ZoneId的常见方法：</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// public static ZoneId systemDefault(): 获取系统默认的时区</span></span>
<span class="line"><span style="color:#24292E;">        ZoneId zoneId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ZoneId.</span><span style="color:#6F42C1;">systemDefault</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(zoneId.</span><span style="color:#6F42C1;">getId</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(zoneId);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// public static Set&lt;String&gt; getAvailableZoneIds(): 获取Java支持的全部时区Id</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ZoneId.</span><span style="color:#6F42C1;">getAvailableZoneIds</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// public static ZoneId of(String zoneId) : 把某个时区id封装成ZoneId对象。</span></span>
<span class="line"><span style="color:#24292E;">        ZoneId zoneId1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ZoneId.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;America/New_York&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、ZonedDateTime：带时区的时间。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// public static ZonedDateTime now(ZoneId zone): 获取某个时区的ZonedDateTime对象。</span></span>
<span class="line"><span style="color:#24292E;">        ZonedDateTime now </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ZonedDateTime.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">(zoneId1);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(now);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 世界标准时间了</span></span>
<span class="line"><span style="color:#24292E;">        ZonedDateTime now1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ZonedDateTime.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">(Clock.</span><span style="color:#6F42C1;">systemUTC</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(now1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// public static ZonedDateTime now()：获取系统默认时区的ZonedDateTime对象</span></span>
<span class="line"><span style="color:#24292E;">        ZonedDateTime now2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ZonedDateTime.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(now2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Calendar instance = Calendar.getInstance(TimeZone.getTimeZone(zoneId1));</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="十一、jdk8日期-instant类" tabindex="-1">十一、JDK8日期（Instant类） <a class="header-anchor" href="#十一、jdk8日期-instant类" aria-label="Permalink to &quot;十一、JDK8日期（Instant类）&quot;">​</a></h2><p>接下来，我们来学习Instant这个类。通过获取Instant的对象可以拿到此刻的时间，该时间由两部分组成：从1970-01-01 00:00:00 开始走到此刻的总秒数+不够1秒的纳秒数。</p><img src="`+D+'"><p>该类提供的方法如下图所示，可以用来获取当前时间，也可以对时间进行加、减、获取等操作。</p><img src="'+C+`"><p><strong>作用：可以用来记录代码的执行时间，或用于记录用户操作某个事件的时间点。</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * 目标：掌握Instant的使用。</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test5_Instant</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">       </span><span style="color:#7B7F8B;">// 1、创建Instant的对象，获取此刻时间信息</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Instant</span><span style="color:#F6F6F4;"> now </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Instant.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 不可变对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、获取总秒数</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> second </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> now.</span><span style="color:#62E884;">getEpochSecond</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(second);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、不够1秒的纳秒数</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> nano </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> now.</span><span style="color:#62E884;">getNano</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(nano);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(now);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Instant</span><span style="color:#F6F6F4;"> instant </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> now.</span><span style="color:#62E884;">plusNanos</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">111</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// Instant对象的作用：做代码的性能分析，或者记录用户的操作时间点</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Instant</span><span style="color:#F6F6F4;"> now1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Instant.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 代码执行。。。。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Instant</span><span style="color:#F6F6F4;"> now2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Instant.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> l </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDateTime.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 目标：掌握Instant的使用。</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test5_Instant</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6A737D;">// 1、创建Instant的对象，获取此刻时间信息</span></span>
<span class="line"><span style="color:#24292E;">        Instant now </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Instant.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 不可变对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、获取总秒数</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> second </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> now.</span><span style="color:#6F42C1;">getEpochSecond</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(second);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、不够1秒的纳秒数</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> nano </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> now.</span><span style="color:#6F42C1;">getNano</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(nano);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(now);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        Instant instant </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> now.</span><span style="color:#6F42C1;">plusNanos</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">111</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Instant对象的作用：做代码的性能分析，或者记录用户的操作时间点</span></span>
<span class="line"><span style="color:#24292E;">        Instant now1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Instant.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 代码执行。。。。</span></span>
<span class="line"><span style="color:#24292E;">        Instant now2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Instant.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime l </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDateTime.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="十二、jdk8日期-格式化器" tabindex="-1">十二、JDK8日期（格式化器） <a class="header-anchor" href="#十二、jdk8日期-格式化器" aria-label="Permalink to &quot;十二、JDK8日期（格式化器）&quot;">​</a></h2><p>接下来，我们学习一个新增的日期格式化类，叫DateTimeFormater。它可以从来对日期进行格式化和解析。它代替了原来的SimpleDateFormat类。</p><img src="`+m+'"><p>需要用到的方法，如下图所示</p><img src="'+B+`"><p>接下来，将上面的方法用代码来演示一下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> *  目标：掌握JDK 8新增的DateTimeFormatter格式化器的用法。</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test6_DateTimeFormatter</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、创建一个日期时间格式化器对象出来。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">DateTimeFormatter</span><span style="color:#F6F6F4;"> formatter </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> DateTimeFormatter.</span><span style="color:#62E884;">ofPattern</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">yyyy年MM月dd日 HH:mm:ss</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、对时间进行格式化</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> now </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDateTime.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(now);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> rs </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> formatter.</span><span style="color:#62E884;">format</span><span style="color:#F6F6F4;">(now); </span><span style="color:#7B7F8B;">// 正向格式化</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(rs);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、格式化时间，其实还有一种方案。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> rs2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> now.</span><span style="color:#62E884;">format</span><span style="color:#F6F6F4;">(formatter); </span><span style="color:#7B7F8B;">// 反向格式化</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(rs2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 4、解析时间：解析时间一般使用LocalDateTime提供的解析方法来解析。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> dateStr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2029年12月12日 12:12:11</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> ldt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDateTime.</span><span style="color:#62E884;">parse</span><span style="color:#F6F6F4;">(dateStr, formatter);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ldt);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> *  目标：掌握JDK 8新增的DateTimeFormatter格式化器的用法。</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test6_DateTimeFormatter</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、创建一个日期时间格式化器对象出来。</span></span>
<span class="line"><span style="color:#24292E;">        DateTimeFormatter formatter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DateTimeFormatter.</span><span style="color:#6F42C1;">ofPattern</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、对时间进行格式化</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime now </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDateTime.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(now);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        String rs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> formatter.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(now); </span><span style="color:#6A737D;">// 正向格式化</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(rs);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、格式化时间，其实还有一种方案。</span></span>
<span class="line"><span style="color:#24292E;">        String rs2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> now.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(formatter); </span><span style="color:#6A737D;">// 反向格式化</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(rs2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 4、解析时间：解析时间一般使用LocalDateTime提供的解析方法来解析。</span></span>
<span class="line"><span style="color:#24292E;">        String dateStr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;2029年12月12日 12:12:11&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime ldt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDateTime.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(dateStr, formatter);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ldt);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="十三、jdk8日期-period类" tabindex="-1">十三、JDK8日期（Period类） <a class="header-anchor" href="#十三、jdk8日期-period类" aria-label="Permalink to &quot;十三、JDK8日期（Period类）&quot;">​</a></h2><p>除以了上新增的类，JDK8还补充了两个类，一个叫Period类、一个叫Duration类；这两个类可以用来对计算两个时间点的时间间隔。</p><p>其中Period用来计算日期间隔（年、月、日），Duration用来计算时间间隔（时、分、秒、纳秒）</p><img src="`+A+'"><p>先来演示Period类的用法，它的方法如下图所示。可以用来计算两个日期之间相隔的年、相隔的月、相隔的日。<strong>只能两个计算LocalDate对象之间的间隔</strong></p><img src="'+g+`"><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * 目标：掌握Period的作用：计算机两个日期相差的年数，月数、天数。</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test7_Period</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> start </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDate.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2029</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">8</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDate</span><span style="color:#F6F6F4;"> end </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDate.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2029</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">15</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、创建Period对象，封装两个日期对象。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Period</span><span style="color:#F6F6F4;"> period </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Period.</span><span style="color:#62E884;">between</span><span style="color:#F6F6F4;">(start, end);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、通过period对象获取两个日期对象相差的信息。</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(period.</span><span style="color:#62E884;">getYears</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(period.</span><span style="color:#62E884;">getMonths</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(period.</span><span style="color:#62E884;">getDays</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 目标：掌握Period的作用：计算机两个日期相差的年数，月数、天数。</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test7_Period</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate start </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDate.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2029</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalDate end </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDate.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2029</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、创建Period对象，封装两个日期对象。</span></span>
<span class="line"><span style="color:#24292E;">        Period period </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Period.</span><span style="color:#6F42C1;">between</span><span style="color:#24292E;">(start, end);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、通过period对象获取两个日期对象相差的信息。</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(period.</span><span style="color:#6F42C1;">getYears</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(period.</span><span style="color:#6F42C1;">getMonths</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(period.</span><span style="color:#6F42C1;">getDays</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="十四、jdk8日期-duration类" tabindex="-1">十四、JDK8日期（Duration类） <a class="header-anchor" href="#十四、jdk8日期-duration类" aria-label="Permalink to &quot;十四、JDK8日期（Duration类）&quot;">​</a></h2><p>接下来，我们学习Duration类。它是用来表示两个时间对象的时间间隔。<strong>可以用于计算两个时间对象相差的天数、小时数、分数、秒数、纳秒数；支持LocalTime、LocalDateTime、Instant等时间</strong></p><img src="`+f+`"><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test8_Duration</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> start </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDateTime.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2025</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">LocalDateTime</span><span style="color:#F6F6F4;"> end </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LocalDateTime.</span><span style="color:#62E884;">of</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2025</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、得到Duration对象</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Duration</span><span style="color:#F6F6F4;"> duration </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Duration.</span><span style="color:#62E884;">between</span><span style="color:#F6F6F4;">(start, end);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、获取两个时间对象间隔的信息</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(duration.</span><span style="color:#62E884;">toDays</span><span style="color:#F6F6F4;">());</span><span style="color:#7B7F8B;">// 间隔多少天</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(duration.</span><span style="color:#62E884;">toHours</span><span style="color:#F6F6F4;">());</span><span style="color:#7B7F8B;">// 间隔多少小时</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(duration.</span><span style="color:#62E884;">toMinutes</span><span style="color:#F6F6F4;">());</span><span style="color:#7B7F8B;">// 间隔多少分</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(duration.</span><span style="color:#62E884;">toSeconds</span><span style="color:#F6F6F4;">());</span><span style="color:#7B7F8B;">// 间隔多少秒</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(duration.</span><span style="color:#62E884;">toMillis</span><span style="color:#F6F6F4;">());</span><span style="color:#7B7F8B;">// 间隔多少毫秒</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(duration.</span><span style="color:#62E884;">toNanos</span><span style="color:#F6F6F4;">());</span><span style="color:#7B7F8B;">// 间隔多少纳秒</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test8_Duration</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime start </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDateTime.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2025</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        LocalDateTime end </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LocalDateTime.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2025</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、得到Duration对象</span></span>
<span class="line"><span style="color:#24292E;">        Duration duration </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Duration.</span><span style="color:#6F42C1;">between</span><span style="color:#24292E;">(start, end);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、获取两个时间对象间隔的信息</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(duration.</span><span style="color:#6F42C1;">toDays</span><span style="color:#24292E;">());</span><span style="color:#6A737D;">// 间隔多少天</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(duration.</span><span style="color:#6F42C1;">toHours</span><span style="color:#24292E;">());</span><span style="color:#6A737D;">// 间隔多少小时</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(duration.</span><span style="color:#6F42C1;">toMinutes</span><span style="color:#24292E;">());</span><span style="color:#6A737D;">// 间隔多少分</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(duration.</span><span style="color:#6F42C1;">toSeconds</span><span style="color:#24292E;">());</span><span style="color:#6A737D;">// 间隔多少秒</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(duration.</span><span style="color:#6F42C1;">toMillis</span><span style="color:#24292E;">());</span><span style="color:#6A737D;">// 间隔多少毫秒</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(duration.</span><span style="color:#6F42C1;">toNanos</span><span style="color:#24292E;">());</span><span style="color:#6A737D;">// 间隔多少纳秒</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,102),h=[S];function v(T,q,w,L,M,k){return n(),a("div",null,h)}const I=s(b,[["render",v]]);export{j as __pageData,I as default};
