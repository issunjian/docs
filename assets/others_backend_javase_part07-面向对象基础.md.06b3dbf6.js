import{_ as s,o as n,c as a,V as l}from"./chunks/framework.c6d8cbec.js";const p="/docs/assets/1662209848898.8c26836b.png",o="/docs/assets/1662209886046.5bfb9c9b.png",t="/docs/assets/1662209899008.ec4c4ea9.png",e="/docs/assets/1662210110729.b93ae76f.png",c="/docs/assets/1662210587156.fa5287bc.png",r="/docs/assets/1662211620054.ba76a242.png",y="/docs/assets/1662212402342.4c2267d2.png",F="/docs/assets/1662213156309.83eb04bd.png",i="/docs/assets/1662213268590.056a251e.png",E="/docs/assets/1662213744520.64f94178.png",u="/docs/assets/1662213891968.9172c3fb.png",d="/docs/assets/1662214650611.b21c5026.png",g="/docs/assets/1662215061486.6fbf33b4.png",C="/docs/assets/1662301823320.4e38d35c.png",m="/docs/assets/1662302089326.ede29aea.png",D="/docs/assets/1662303254161.4158675a.png",v="/docs/assets/1662303676092.7036eab0.png",h="/docs/assets/1662304435504.e1b3e9c8.png",q="/docs/assets/image-2023-03-16-19-44-09.eb590a5b.png",b="/docs/assets/1662304779863.60044fc3.png",f="/docs/assets/1662304859276.2ae01fb8.png",A="/docs/assets/1662305406056.37bc906e.png",S="/docs/assets/1662305928023.2905e8a8.png",_="/docs/assets/1662306602412.25fb74ff.png",B="/docs/assets/1662306879230.5a691934.png",M="/docs/assets/1662307191295.357fc64b.png",k="/docs/assets/1662335204398.8d767134.png",w="/docs/assets/1662335451401.0df1bf74.png",P="/docs/assets/image-2023-03-16-20-06-09.93106c20.png",I="/docs/assets/1662336287570.2b0fbee1.png",x="/docs/assets/1662337507608.d5dc8941.png",J="/docs/assets/1662351774659.785e90be.png",j="/docs/assets/1662351990387.73fd5c0d.png",O="/docs/assets/1662371089114.a38a5e4f.png",N="/docs/assets/1662353340190.441adaae.png",L=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"others/backend/javase/part07-面向对象基础.md","filePath":"others/backend/javase/part07-面向对象基础.md"}'),T={name:"others/backend/javase/part07-面向对象基础.md"},V=l('<h2 id="part07——面向对象基础" tabindex="-1">part07——面向对象基础 <a class="header-anchor" href="#part07——面向对象基础" aria-label="Permalink to &quot;part07——面向对象基础&quot;">​</a></h2><p>知识储备</p><ol><li>变量、数组、运算符、流程控制、方法的定义和基本语法</li><li>上述知识的基本应用</li></ol><p><a href="https://www.wenjuan.pub/s/UZBZJvhteBy/" target="_blank" rel="noreferrer">在线测试知识储备open in new window</a> 👈</p><p>如果你能得70分，你就很不错哦！🎉，如果不到70分，可以多做几遍，每次做完有答案解析哦。 并且将part6的练习题敲过5个以上，说明Java的基础语法就全掌握了。</p><p>接下来，要学习的是Java中最核心的课程——面向对象编程</p><h2 id="一、面向对象入门-🍐" tabindex="-1">一、面向对象入门 🍐 <a class="header-anchor" href="#一、面向对象入门-🍐" aria-label="Permalink to &quot;一、面向对象入门 🍐&quot;">​</a></h2><blockquote><p>写Java程序是有套路的，而面向对象就是写Java程序的套路</p></blockquote><p>现在假设我们需要处理的是学生的姓名、语文成绩、数学成绩这三个数据，要求打印输出这个学生的总成绩，和平均成绩。</p><img src="'+p+'"><p>遇到这样的需求，我们以前都会定义方法来做，如下图所示</p><p>注意：这里每一个方法有<strong>三个参数</strong></p><img src="'+o+'"><img src="'+t+'"><p>定义好方法之后，我们调用方法的时候，需要给每一个方法<strong>传递三个实际参数</strong></p><img src="'+e+'"><p>在上面案例中，这种编程方式是一种面向过程 的编程方式。</p><p>所谓<strong>面向过程</strong>，就是编写一个的方法，有数据要进行处理就交给方法来处理。</p><p>但是实际上<strong>姓名、语文成绩、数学成绩三个数据可以放在一起，组合成一个对象</strong>，然后让对象提供方法对自己的数据进行处理。这种方式称之为面向对象编程。</p><img src="'+c+'"><p><strong>总结一些：所谓编写对象编程，就是把要处理的数据交给对象，让对象来处理。</strong></p><h2 id="二、深刻认识面向对象-🍐" tabindex="-1">二、深刻认识面向对象 🍐 <a class="header-anchor" href="#二、深刻认识面向对象-🍐" aria-label="Permalink to &quot;二、深刻认识面向对象 🍐&quot;">​</a></h2><p>理解目标</p><ol><li>面向对象编程的好处？</li><li>程序中的对象道理是什么东西？</li><li>对象是怎么出来的？</li></ol><p>Java的祖师爷，<strong>詹姆斯高斯林</strong>认为，在这个世界中 <strong>万物皆对象！</strong> 任何一个对象都可以包含一些数据，数据属于哪个对象，就由哪个对象来处理。</p><p>这样的话，只要我们找到了对象，其实就找到了对数据的处理方式。</p><img src="'+r+'"><p>所以面向对象编程的好处，用一句话总结就是：<strong>面向对象的开发更符合人类的思维习惯，让编程变得更加简单、更加直观。</strong></p><p>练习：</p><ol><li>你寂寞了，怎么办？</li><li>你饿了，怎么办？</li><li>你无聊了，怎么办？</li></ol><blockquote><p>我们程序中的对象到底是个啥呢？</p></blockquote><p><strong>对象实质上是一种特殊的数据结构</strong>。</p><p>这种结构怎么理解呢？</p><blockquote><p>你可以把对象理解成一张表格，表当中记录的数据，就是对象拥有的数据。 <img src="'+y+'"></p></blockquote><p>这就是程序中的对象到底是个啥！</p><p><strong>一句话总结，对象就像是一张数据表，表当中记录什么数据，对象就处理什么数据。</strong></p><p>刚刚我们讲到对象就是一张数据表，那么这个数据表是怎么来的呢？这张表是不会无缘无故存在的，因为Java也不知道你这个对象要处理哪些数据，所以这张表需要我们设计出来。</p><p>用什么来设计这张表呢？就是类（class），<strong>类可以理解成对象的设计图</strong>，或者对象的模板。</p><img src="'+F+'"><p>我们需要按照对象的设计图创造一个对象。<strong>设计图中规定有哪些数据，对象中就只能有哪些数据。</strong></p><img src="'+i+'"><p>一句话总结：<strong>对象可以理解成一张数据表，而数据表中可以有哪些数据，是有类来设计的。</strong></p><h2 id="三、对象在机中的执行原理-🍐" tabindex="-1">三、对象在机中的执行原理 🍐 <a class="header-anchor" href="#三、对象在机中的执行原理-🍐" aria-label="Permalink to &quot;三、对象在机中的执行原理 🍐&quot;">​</a></h2><blockquote><p>按照我们之前讲的数组 的执行原理，数组变量 记录的其实数数组在堆内存中的地址 。其实面向对象的代码执行原理和数组的执行原理是<strong>非常类似的</strong>。</p></blockquote><p>点击查看Student s1 = new Student(); 这句话的原理</p><p>其实Student s1 = new Student(); 这句话中的原理如下 <img src="'+E+'"></p><ul><li><p><code>Student s1</code>表示的是在栈内存中，创建了一个Student类型的变量，变量名为s1</p></li><li><p>而<code>new Student()</code>会在堆内存中创建一个对象，而对象中包含学生的属性名和属性值</p><p>同时系统会为这个Student对象分配一个地址值0x4f3f5b24</p></li><li><p>接着把对象的地址赋值给栈内存中的变量s1，通过s1记录的地址就可以找到这个对象</p></li><li><p>当执行<code>s1.name=“播妞”</code>时，其实就是通过s1找到对象的地址，再通过对象找到对象的name属性，再给对象的name属性赋值为<code>播妞</code>;</p></li></ul><p>搞明白<code>Student s1 = new Student();</code>的原理之后，<code>Student s2 = new Student();</code>原理完全一样，只是在堆内存中重新创建了一个对象，又有一个新的地址。<code>s2.name</code>是访问另对象的属性。</p><h2 id="四、类和对象的一些注意事项-⚠️" tabindex="-1">四、类和对象的一些注意事项 ⚠️ <a class="header-anchor" href="#四、类和对象的一些注意事项-⚠️" aria-label="Permalink to &quot;四、类和对象的一些注意事项 ⚠️&quot;">​</a></h2><img src="'+u+`"><p><strong>第一条</strong>：一个代码文件中，<strong>可以写多个class类</strong>，但是<strong>只能有一个是public修饰</strong>1个public，且public修饰的类必须和文件名相同。</p><p>假设文件名为<code>Demo1.java</code>，这个文件中假设有两个类<code>Demo1类和Student类</code>，代码如下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//public修饰的类Demo1，和文件名Demo1相同</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Demo1</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Student</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//public修饰的类Demo1，和文件名Demo1相同</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Demo1</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Student</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>第二条：</strong> 对象与对象之间的数据<strong>不会相互影响</strong>，但是多个变量指向同一个对象会相互影响。</p><p>如下图所示，s1和s2两个变量<strong>分别</strong>记录的是<strong>两个对象的地址值</strong>，<strong>各自修改各自属性值</strong>，是互不影响的。</p><img src="`+d+'"><p>如下图所示，s1和s2两个变量记录的是同一个对象的地址值，s1修改对象的属性值，再用s2访问这个属性，会发现已经被修改了。</p><img src="'+g+'"><h2 id="五、this关键字-🍐" tabindex="-1">五、this关键字 🍐 <a class="header-anchor" href="#五、this关键字-🍐" aria-label="Permalink to &quot;五、this关键字 🍐&quot;">​</a></h2><p>this的定义和作用</p><p>this就是一个变量，用在方法中，可以拿到当前类的对象。</p><p>我们看下图所示代码，通过代码来体会这句话到底是什么意思。</p><p><strong>哪一个对象调用方法方法中的this就是哪一个对象</strong> 👈</p><img src="'+C+'"><p>上面代码运行结果如下</p><img src="'+m+'"><p>通过this在方法中可以访问本类对象的成员变量。我们看下图代码，分析打印结果是多少</p><img src="'+D+'"><p>分析上面的代码<code>s3.score=325</code>，调用方法printPass方法时，方法中的<code>this.score</code>也是325； 而方法中的参数score接收的是250。执行结果是</p><img src="'+v+'"><p>关于this关键字我们就学习到这里，重点记住这句话：</p><p><strong>哪一个对象调用方法方法中的this就是哪一个对象</strong> 👈</p><h2 id="六、构造器-🍐" tabindex="-1">六、构造器 🍐 <a class="header-anchor" href="#六、构造器-🍐" aria-label="Permalink to &quot;六、构造器 🍐&quot;">​</a></h2><p>目标</p><ol><li>什么是构造器？</li><li>掌握构造器的特点？</li><li>构造器的应用场景？</li><li>构造器有哪些注意事项？</li></ol><ul><li><strong>什么是构造器？</strong></li></ul><p>构造器（又称构造方法）其实是一种特殊的方法：</p><ol><li>没有返回值类型</li><li>方法名必须和类名相同</li><li>如果方法无参（无参构造），如果有参数（有参构造）</li></ol><p>如下图所示：</p><img src="'+h+'"><img src="'+q+'"><ul><li><p><strong>构造器的特点？</strong></p><p>在创建对象时，会调用构造器。</p><p>也就是说 <code>new Student()</code>就是在执行构造器，当构造器执行完了，也就意味着对象创建成功。</p><img src="'+b+'"><p>当执行<code>new Student(&quot;播仔&quot;,99)</code>创建对象时，就是在执行有参数构造器，当有参数构造器执行完，就意味着对象创建完毕了。</p><img src="'+f+'"></li></ul><p>关于构造器的特点，我们记住一句话：<strong>new 对象就是在执行构造方法</strong></p><ul><li><p><strong>构造器的应用场景？</strong></p><p>其实构造器就是用来创建对象的。可以在创建对象时给对象的属性做一些初始化操作。如下图所示：</p></li></ul><img src="'+A+`"><ul><li><p><strong>构造器的注意事项？</strong></p><p>学习完构造器的应用场景之后，接下来我们再看一下构造器有哪些注意事项。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">1.在设计一个类时，如果不写构造器，Java会自动生成一个无参数构造器。</span></span>
<span class="line"><span style="color:#F6F6F4;">2.一定定义了有参数构造器，Java就不再提供空参数构造器，此时建议自己加一个无参数构造器。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">1.在设计一个类时，如果不写构造器，Java会自动生成一个无参数构造器。</span></span>
<span class="line"><span style="color:#24292E;">2.一定定义了有参数构造器，Java就不再提供空参数构造器，此时建议自己加一个无参数构造器。</span></span></code></pre></div></li></ul><p>关于构造器的这几个问题我们再总结一下。掌握这几个问题，构造方法就算完全明白了。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">1.什么是构造器？</span></span>
<span class="line"><span style="color:#F6F6F4;">	答：构造器其实是一种特殊的方法，但是这个方法没有返回值类型，方法名必须和类名相			同。</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span></span>
<span class="line"><span style="color:#F6F6F4;">2.构造器什么时候执行？</span></span>
<span class="line"><span style="color:#F6F6F4;">	答：</span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> 对象就是在执行构造方法；</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">3.构造方法的应用场景是什么？</span></span>
<span class="line"><span style="color:#F6F6F4;">	答：在创建对象时，可以用构造方法给成员变量赋值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">4.构造方法有哪些注意事项？</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">)在设计一个类时，如果不写构造器，Java会自动生成一个无参数构造器。</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">)一定定义了有参数构造器，Java就不再提供空参数构造器，此时建议自己加一个无参数构		造器。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">1.什么是构造器？</span></span>
<span class="line"><span style="color:#24292E;">	答：构造器其实是一种特殊的方法，但是这个方法没有返回值类型，方法名必须和类名相			同。</span></span>
<span class="line"><span style="color:#24292E;">	</span></span>
<span class="line"><span style="color:#24292E;">2.构造器什么时候执行？</span></span>
<span class="line"><span style="color:#24292E;">	答：</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> 对象就是在执行构造方法；</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">3.构造方法的应用场景是什么？</span></span>
<span class="line"><span style="color:#24292E;">	答：在创建对象时，可以用构造方法给成员变量赋值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">4.构造方法有哪些注意事项？</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)在设计一个类时，如果不写构造器，Java会自动生成一个无参数构造器。</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)一定定义了有参数构造器，Java就不再提供空参数构造器，此时建议自己加一个无参数构		造器。</span></span></code></pre></div><h2 id="七、封装性-🍐" tabindex="-1">七、封装性 🍐 <a class="header-anchor" href="#七、封装性-🍐" aria-label="Permalink to &quot;七、封装性 🍐&quot;">​</a></h2><p>接下来我们再学习一个面向对象很重要的特征叫做——封装性。</p><p>所谓封装，就是用<strong>类设计对象</strong>处理某一个事物的数据时，应该把<strong>要处理的数据</strong>，以及<strong>处理数据的方法</strong>，都设计到一个对象中去。</p><p>比如：在设计学生类时，把学生对象的姓名、语文成绩、数学成绩三个属性，以及求学生总分、平均分的方法，都封装到学生对象中来。</p><p>点击查看示例代码</p><img src="`+S+'"><p>封装的设计规范用8个字总结，就是：<strong>合理隐藏、合理暴露</strong></p><p>比如，设计一辆汽车时</p><img src="'+_+'"><ol><li>汽车的发动机、变速箱等一些零件并不需要让每一个开车的知道，所以就把它们<strong>隐藏</strong>到了汽车的内部。</li><li>把发动机、变速箱等这些零件隐藏起来，这样做其实<strong>更加安全</strong>，因为并不是所有人都很懂发动机、变速箱，如果暴露在外面很可能会被不懂的人弄坏。</li><li>在设计汽车时，除了隐藏部分零件，但是还是<strong>得合理的暴露</strong>一些东西出来，让司机能够操纵汽车，让汽车跑起来。比如：<strong>点火按钮啊、方向盘啊、刹车啊、油门啊、档把啊</strong>... 这些就是故意暴露出来让司机操纵汽车的。</li></ol><img src="'+B+'"><p>现在我们已经知道什么是封装了。那我们学习封装，学习个啥呢？ 其实在实际开发中，在用类设计对事处理的数据，以及对数据处理的方法时，是有一些设计规范的。</p><p>好了，到现在我们已经理解什么是封装的一些规范了。就是：<strong>合理暴露、合理隐藏</strong></p><p><strong>2. 封装在代码中的体现</strong></p><blockquote><p>知道什么是封装之后，那封装在代码中如何体现呢？</p></blockquote><p><strong>一般我们在设计一个类时，会将成员变量隐藏，然后把操作成员变量的方法对外暴露。</strong></p><p>这里需要用到一个修饰符，叫<strong>private</strong>，<strong>被private修饰的变量或者方法，只能在本类中被访问。</strong></p><p>如下图所示，<code>private double score;</code> 就相当于把score变量封装在了Student对象的内部，且不对外暴露，你想要在其他类中访问score这个变量就，就不能直接访问了；</p><p>如果你想给Student对象的score属性赋值，得调用对外暴露的方法<code>setScore(int score)</code>，在这个方法中可以对调用者传递过来的数据进行一些控制，更加安全。</p><img src="'+M+'"><p>当你想获取socre变量的值时，就得调用对外暴露的另一个方法 <code>getScore()</code></p><h2 id="八、实体javabean-✏️" tabindex="-1">八、实体JavaBean ✏️ <a class="header-anchor" href="#八、实体javabean-✏️" aria-label="Permalink to &quot;八、实体JavaBean ✏️&quot;">​</a></h2><p>实体类</p><p>实体类就是一种特殊的类，它需要满足下面的要求：</p><img src="'+k+'"><p>接下来我们按照要求，写一个Student实体类；</p><p>点击查看代码</p><img src="'+w+'"><ol><li>实体类中除了有给对象<strong>存、取值的方法</strong>就没有提供其他方法。</li><li>实体类仅仅只是用来<strong>封装数据</strong>用的。</li></ol><p><strong>生成get set方法</strong><img src="'+P+'"></p><p><strong>2. 实体类的应用场景</strong></p><p>在实际开发中，实体类仅仅只用来封装数据，而对数据的处理交给其他类来完成，以实现数据和数据业务处理相分离。如下图所示</p><img src="'+I+'"><p>在实际应用中，会将类作为一种数据类型使用。如下图所示，在StudentOperator类中，定义一个Student类型的成员变量student，然后使用构造器给student成员变量赋值。</p><p>然后在Student的printPass()方法中，使用student调用Student对象的方法，对Student对象的数据进行处理。</p><img src="'+x+'"><p>总结一下</p><ol><li><p>JavaBean实体类是什么？有啥特点</p><ul><li>JavaBean实体类，是一种特殊的；它需要<strong>私有化成员变量</strong>，有<strong>空参数构造方法</strong>、同时提供 <strong>getXxx和setXxx方法</strong>；</li><li>JavaBean实体类仅仅只用来封装数据，只提供对数据进行存和取的方法</li></ul></li><li><p>JavaBean的应用场景？</p><ul><li>JavaBean实体类，只负责封装数据，而把数据处理的操作放在其他类中，以实现数据和数 据处理相分离。</li></ul></li></ol><p>作业</p><p>🚩 1. 定义下方的实体类,：</p><ul><li><p>书籍（Book）的相关信息（1个无参构造）：</p><ul><li>书籍编号（id）</li><li>书名（title）</li><li>作者（author）</li><li>出版社（publisher）</li><li>价格（price）</li></ul></li><li><p>汽车（Car）的相关信息：</p><ul><li>汽车品牌（brand）</li><li>汽车型号（model）</li><li>生产年份（year）</li><li>车身颜色（color）</li><li>车牌号（licensePlateNumber）</li></ul></li><li><p>电冰箱（Refrigerator）的相关信息：</p><ul><li>品牌（brand）</li><li>型号（model）</li><li>容量（capacity）</li><li>颜色（color）</li><li>售价（price）</li></ul></li><li><p>按摩器（Massager）的相关信息（1个无参构造，1个全参数构造）：</p><ul><li>品牌（brand）</li><li>功能描述（description）</li><li>功率（power）</li><li>颜色（color）</li><li>售价（price）</li></ul></li><li><p>定义课程（Course）的相关信息（1个全参构造）：</p><ul><li>课程编号（id）</li><li>课程名称（name）</li><li>课程学分（credit）</li></ul></li><li><p>定义学校（School）的相关信息：</p><ul><li>学校编号（id）</li><li>学校名称（name）</li><li>学校地址（address）</li></ul></li><li><p>定义学生（Student）的相关信息：</p><ul><li>学生编号（id）</li><li>学生姓名（name）</li><li>学生年龄（age）</li><li>学生性别（gender）</li><li>学生所在学校（school）</li></ul></li></ul><h2 id="九、面向对象综合案例-✏️" tabindex="-1">九、面向对象综合案例 ✏️ <a class="header-anchor" href="#九、面向对象综合案例-✏️" aria-label="Permalink to &quot;九、面向对象综合案例 ✏️&quot;">​</a></h2><p>做一个面向对象的综合案例——模仿电影信息系统。</p><p>需求如下图所示：</p><ol><li>想要展示系统中<strong>全部的电影信息</strong>（每部电影：编号、名称、价格）</li><li>允许用户根据电影的<strong>编号</strong>（id），<strong>查询出某个电影的详细信息</strong>。</li></ol><img src="'+J+'"><p>运行程序时，能够根据用户的选择，执行不同的功能，如下图所示</p><img src="'+j+`"><h3 id="_1-第一步-定义电影类" tabindex="-1">1. 第一步：定义电影类 <a class="header-anchor" href="#_1-第一步-定义电影类" aria-label="Permalink to &quot;1\\. 第一步：定义电影类&quot;">​</a></h3><p>首先每一部电影，都包含这部电影(电影类（Movie）)的相关信息：</p><ol><li>电影的编号（id）</li><li>电影的名称（name）</li><li>电影的价格（price）</li><li>电影的分数（score）</li><li>电影的导演（director）</li><li>电影的主演（actor）</li><li>电影的简介（info）</li></ol><p>按照JavaBean类的标准写法来写就行。</p><p>点击查看代码</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Movie</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> id;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> name;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> price;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> score;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> director;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> actor;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> info;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Movie</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Movie</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">id</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">name</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">price</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">score</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">director</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">actor</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">info</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.id </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> id;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.name </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> name;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.price </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> price;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.score </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> score;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.director </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> director;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.actor </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> actor;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.info </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> info;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getId</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> id;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">setId</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">id</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.id </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> id;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getName</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> name;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">setName</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">name</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.name </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> name;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getPrice</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> price;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">setPrice</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">price</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.price </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> price;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getScore</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> score;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">setScore</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">score</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.score </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> score;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getDirector</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> director;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">setDirector</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">director</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.director </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> director;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getActor</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> actor;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">setActor</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">actor</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.actor </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> actor;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getInfo</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> info;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">setInfo</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">info</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.info </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> info;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Movie</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> id;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String name;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> price;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> score;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String director;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String actor;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String info;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Movie</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Movie</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">id</span><span style="color:#24292E;">, String </span><span style="color:#E36209;">name</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#E36209;">price</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#E36209;">score</span><span style="color:#24292E;">, String </span><span style="color:#E36209;">director</span><span style="color:#24292E;">, String </span><span style="color:#E36209;">actor</span><span style="color:#24292E;">, String </span><span style="color:#E36209;">info</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> id;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> name;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.price </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> price;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.score </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> score;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.director </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> director;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.actor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> actor;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.info </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> info;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getId</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> id;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setId</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">id</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> id;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> name;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setName</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">name</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> name;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getPrice</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> price;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setPrice</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#E36209;">price</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.price </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> price;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getScore</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> score;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setScore</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#E36209;">score</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.score </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> score;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getDirector</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> director;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setDirector</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">director</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.director </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> director;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getActor</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> actor;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setActor</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">actor</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.actor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> actor;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getInfo</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> info;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setInfo</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">info</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.info </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> info;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_2-第二步-定义电影操作类" tabindex="-1">2. 第二步：定义电影操作类 <a class="header-anchor" href="#_2-第二步-定义电影操作类" aria-label="Permalink to &quot;2\\. 第二步：定义电影操作类&quot;">​</a></h3><ol><li>我们定义的Movie类，仅仅只是用来封装每一部电影的信息。</li><li>为了让电影数据和电影数据的<strong>操作相分离</strong>，我们还得有一个电影操作类（MovieOperator）。</li><li>因为系统中<strong>有多部电影</strong>，所以电影操作类中MovieOperator，需要有一个<code>Movie[] movies;</code> 用来存储多部电影对象；</li><li>同时在MovieOperator类中，提供对外提供，对电影数组进行操作的方法。 <ul><li><code>printAllMovies()</code>用于打印数组中所有的电影信息，</li><li><code>searchMovieById(int id)</code>方法根据id查找一个电影的信息并打印。</li></ul></li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">MovieOperator</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">//因为系统中有多部电影，所以电影操作类中，需要有一个Movie的数组</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Movie</span><span style="color:#F6F6F4;">[] movies;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">MovieOperator</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">Movie</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">movies</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.movies </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> movies;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">    /** 1、展示系统全部电影信息 movies = [m1, m2, m3, ...]*/</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">printAllMovies</span><span style="color:#F6F6F4;">(){</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">-----系统全部电影信息如下：-------</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> movies.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;font-style:italic;">Movie</span><span style="color:#F6F6F4;"> m </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> movies[i];</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">编号：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> m.</span><span style="color:#62E884;">getId</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">名称：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> m.</span><span style="color:#62E884;">getName</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">价格：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> m.</span><span style="color:#62E884;">getPrice</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">------------------------</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">    /** 2、根据电影的编号查询出该电影的详细信息并展示 */</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">searchMovieById</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">id</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> movies.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;font-style:italic;">Movie</span><span style="color:#F6F6F4;"> m </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> movies[i];</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(m.</span><span style="color:#62E884;">getId</span><span style="color:#F6F6F4;">() </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> id){</span></span>
<span class="line"><span style="color:#F6F6F4;">                System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">该电影详情如下：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">                System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">编号：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> m.</span><span style="color:#62E884;">getId</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">                System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">名称：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> m.</span><span style="color:#62E884;">getName</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">                System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">价格：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> m.</span><span style="color:#62E884;">getPrice</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">                System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">得分：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> m.</span><span style="color:#62E884;">getScore</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">                System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">导演：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> m.</span><span style="color:#62E884;">getDirector</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">                System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">主演：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> m.</span><span style="color:#62E884;">getActor</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">                System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">其他信息：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> m.</span><span style="color:#62E884;">getInfo</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;">; </span><span style="color:#7B7F8B;">// 已经找到了电影信息，没有必要再执行了</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">没有该电影信息~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MovieOperator</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//因为系统中有多部电影，所以电影操作类中，需要有一个Movie的数组</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Movie</span><span style="color:#24292E;">[] movies;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MovieOperator</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">Movie</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">movies</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.movies </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> movies;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /** 1、展示系统全部电影信息 movies = [m1, m2, m3, ...]*/</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printAllMovies</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;-----系统全部电影信息如下：-------&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> movies.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            Movie m </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> movies[i];</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;编号：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m.</span><span style="color:#6F42C1;">getId</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;名称：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m.</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;价格：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m.</span><span style="color:#6F42C1;">getPrice</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;------------------------&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /** 2、根据电影的编号查询出该电影的详细信息并展示 */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">searchMovieById</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">id</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> movies.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            Movie m </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> movies[i];</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(m.</span><span style="color:#6F42C1;">getId</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> id){</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;该电影详情如下：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;编号：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m.</span><span style="color:#6F42C1;">getId</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;名称：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m.</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;价格：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m.</span><span style="color:#6F42C1;">getPrice</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;得分：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m.</span><span style="color:#6F42C1;">getScore</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;导演：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m.</span><span style="color:#6F42C1;">getDirector</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;主演：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m.</span><span style="color:#6F42C1;">getActor</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;其他信息：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m.</span><span style="color:#6F42C1;">getInfo</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 已经找到了电影信息，没有必要再执行了</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;没有该电影信息~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_3-第三步-定义测试类" tabindex="-1">3. 第三步：定义测试类 <a class="header-anchor" href="#_3-第三步-定义测试类" aria-label="Permalink to &quot;3\\. 第三步：定义测试类&quot;">​</a></h3><p>最后，我们需要在测试类中，准备好所有的电影数据，并用一个数组保存起来。每一部电影的数据可以封装成一个对象。然后把对象用数组存起来即可。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//创建一个Movie类型的数组</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Movie</span><span style="color:#F6F6F4;">[] movies </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Movie</span><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">];</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//创建4个电影对象，分别存储到movies数组中</span></span>
<span class="line"><span style="color:#F6F6F4;">        movies[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Movie</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">水门桥</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">38.9</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">9.8</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">徐克</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">吴京</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">12万人想看</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        movies[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Movie</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">出拳吧</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">39</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">7.8</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">唐晓白</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">田雨</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">3.5万人想看</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        movies[</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Movie</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">月球陨落</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">42</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">7.9</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">罗兰</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">贝瑞</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">17.9万人想看</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        movies[</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Movie</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">一点就到家</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">35</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">8.7</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">许宏宇</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">刘昊然</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">10.8万人想看</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//创建一个Movie类型的数组</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">Movie</span><span style="color:#24292E;">[] movies </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Movie</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//创建4个电影对象，分别存储到movies数组中</span></span>
<span class="line"><span style="color:#24292E;">        movies[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Movie</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;水门桥&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">38.9</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9.8</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;徐克&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;吴京&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;12万人想看&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        movies[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Movie</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;出拳吧&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">39</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7.8</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;唐晓白&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;田雨&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;3.5万人想看&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        movies[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Movie</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;月球陨落&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">42</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7.9</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;罗兰&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;贝瑞&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;17.9万人想看&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        movies[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Movie</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;一点就到家&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">35</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">8.7</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;许宏宇&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;刘昊然&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;10.8万人想看&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>准备好测试数据之后，接下来就需要对电影数据进行操作。我们已经把对电影操作先关的功能写到了MovieOperator类中，所以接下来，创建MovieOperator类对象，调用方法就可以完成相关功能。</p><p>继续再main方法中，接着写下面的代码。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 4、创建一个电影操作类的对象，接收电影数据，并对其进行业务处理</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">MovieOperator</span><span style="color:#F6F6F4;"> operator </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">MovieOperator</span><span style="color:#F6F6F4;">(movies);</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">Scanner</span><span style="color:#F6F6F4;"> sc </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(System.in);</span></span>
<span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (</span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">==电影信息系统==</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1、查询全部电影信息</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2、根据id查询某个电影的详细信息展示</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请您输入操作命令：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> command </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sc.</span><span style="color:#62E884;">nextInt</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">switch</span><span style="color:#F6F6F4;"> (command) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">case</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 展示全部电影信息</span></span>
<span class="line"><span style="color:#F6F6F4;">            operator.</span><span style="color:#62E884;">printAllMovies</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">case</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">2</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 根据id查询某个电影的详细信息展示</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请您输入查询的电影id:</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> id </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sc.</span><span style="color:#62E884;">nextInt</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">            operator.</span><span style="color:#62E884;">searchMovieById</span><span style="color:#F6F6F4;">(id);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">default:</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您输入的命令有问题~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 4、创建一个电影操作类的对象，接收电影数据，并对其进行业务处理</span></span>
<span class="line"><span style="color:#24292E;">MovieOperator operator </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MovieOperator</span><span style="color:#24292E;">(movies);</span></span>
<span class="line"><span style="color:#24292E;">Scanner sc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(System.in);</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;==电影信息系统==&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;1、查询全部电影信息&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;2、根据id查询某个电影的详细信息展示&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请您输入操作命令：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> command </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sc.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (command) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 展示全部电影信息</span></span>
<span class="line"><span style="color:#24292E;">            operator.</span><span style="color:#6F42C1;">printAllMovies</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 根据id查询某个电影的详细信息展示</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请您输入查询的电影id:&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sc.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            operator.</span><span style="color:#6F42C1;">searchMovieById</span><span style="color:#24292E;">(id);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">default:</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您输入的命令有问题~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>到这里，电影信息系统就完成了。 小伙伴们，自己尝试写一下吧！！</p><h2 id="十、成员变量和局部变量的区别-🍐" tabindex="-1">十、成员变量和局部变量的区别 🍐 <a class="header-anchor" href="#十、成员变量和局部变量的区别-🍐" aria-label="Permalink to &quot;十、成员变量和局部变量的区别 🍐&quot;">​</a></h2><img src="`+O+'"><p>如下图所示，成员变量在类中方法外，而局部变量在方法中。</p><img src="'+N+'"><hr><p>到这里，我们关于面向对象的基础知识就学习完了。<strong>面向对象的核心点就是封装，将数据和数据的处理方式，都封装到对象中； 至于对象要封装哪些数据？对数据进行怎样的处理？ 需要通过类来设计。</strong></p><p>需要注意的是，不同的人，对同一个对象进行设计，对象封装那些数据，提供哪些方法，可能会有所不同；只要能够完成需求，符合设计规范，都是合理的设计。</p>',159),$=[V];function R(X,Z,U,z,G,H){return n(),a("div",null,$)}const Q=s(T,[["render",R]]);export{L as __pageData,Q as default};
