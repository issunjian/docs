import{_ as s,o as a,c as n,V as l}from"./chunks/framework.c6d8cbec.js";const p="/docs/assets/fanshe-01.79289fe2.png",o="/docs/assets/fanshe-02.b2caf87a.png",e="/docs/assets/fanshe-03.e15d1397.png",t="/docs/assets/fanshe-04.80149ab4.png",v=JSON.parse('{"title":"Java 反射详解：动态创建实例、调用方法和访问字段","description":"Java 反射机制允许在运行时检查和操作类、对象、方法和字段。通过反射，我们可以动态创建对象实例、调用方法、访问字段和获取类的元数据。本文介绍了 Java 反射的基本概念、应用场景和示例。","frontmatter":{"title":"Java 反射详解：动态创建实例、调用方法和访问字段","shortTitle":"掌握 Java 反射","category":["Java核心"],"tag":["Java重要知识点"],"description":"Java 反射机制允许在运行时检查和操作类、对象、方法和字段。通过反射，我们可以动态创建对象实例、调用方法、访问字段和获取类的元数据。本文介绍了 Java 反射的基本概念、应用场景和示例。","author":"沉默王二","head":[["meta",{"name":"keywords","content":"Java,java 反射, 运行时, 类, 对象, 方法, 字段, 反射,动态调用"}]]},"headers":[],"relativePath":"backend/tobetter/basic-extra-meal/fanshe.md","filePath":"backend/tobetter/basic-extra-meal/fanshe.md"}'),c={name:"backend/tobetter/basic-extra-meal/fanshe.md"},r=l("",99),y=[r];function F(i,E,d,g,u,C){return a(),n("div",null,y)}const m=s(c,[["render",F]]);export{v as __pageData,m as default};
