import{_ as a,o as e,c as s,V as o}from"./chunks/framework.c6d8cbec.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/html/HTML最新面试题2021年，常见面试题及答案汇总.md","filePath":"interview/backend/html/HTML最新面试题2021年，常见面试题及答案汇总.md"}'),t={name:"interview/backend/html/HTML最新面试题2021年，常见面试题及答案汇总.md"},n=o(`<h3 id="_1、渲染页面时常见哪些不良现象-浏览器渲染过程" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#1%E6%B8%B2%E6%9F%93%E9%A1%B5%E9%9D%A2%E6%97%B6%E5%B8%B8%E8%A7%81%E5%93%AA%E4%BA%9B%E4%B8%8D%E8%89%AF%E7%8E%B0%E8%B1%A1%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E8%BF%87%E7%A8%8B" target="_blank" rel="noreferrer">1、渲染页面时常见哪些不良现象？（浏览器渲染过程）</a> <a class="header-anchor" href="#_1、渲染页面时常见哪些不良现象-浏览器渲染过程" aria-label="Permalink to &quot;[1、渲染页面时常见哪些不良现象？（浏览器渲染过程）](https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML最新面试题2021年，常见面试题及答案汇总.md#1渲染页面时常见哪些不良现象浏览器渲染过程)&quot;">​</a></h3><p>FOUC：主要指的是样式闪烁的问题，由于浏览器渲染机制（比如firefox），在 CSS 加载之前，先呈现了 HTML，就会导致展示出无样式内容，然后样式突然呈现的现象。会出现这个问题的原因主要是 css 加载时间过长，或者 css 被放在了文档底部。</p><p>白屏：有些浏览器渲染机制（比如chrome）要先构建 DOM 树和 CSSOM 树，构建完成后再进行渲染，如果 CSS 部分放在 HTML 尾部，由于 CSS 未加载完成，浏览器迟迟未渲染，从而导致白屏；也可能是把 js 文件放在头部，脚本的加载会阻塞后面文档内容的解析，从而页面迟迟未渲染出来，出现白屏问题。</p><h3 id="_2、html5-的离线储存怎么使用-工作原理能不能解释一下" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#2html5-%E7%9A%84%E7%A6%BB%E7%BA%BF%E5%82%A8%E5%AD%98%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E8%83%BD%E4%B8%8D%E8%83%BD%E8%A7%A3%E9%87%8A%E4%B8%80%E4%B8%8B" target="_blank" rel="noreferrer">2、HTML5 的离线储存怎么使用，工作原理能不能解释一下？</a> <a class="header-anchor" href="#_2、html5-的离线储存怎么使用-工作原理能不能解释一下" aria-label="Permalink to &quot;[2、HTML5 的离线储存怎么使用，工作原理能不能解释一下？](https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML最新面试题2021年，常见面试题及答案汇总.md#2html5-的离线储存怎么使用工作原理能不能解释一下)&quot;">​</a></h3><p>在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。</p><p>原理：HTML5 的离线存储是基于一个新建的 .appcache 文件的缓存机制（不是存储技术），通过这个文件上的解析清单离线存储资源，这些资源就会像 cookie 一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示。</p><p><strong>如何使用：</strong></p><p>创建一个和 html 同名的 manifest 文件，然后在页面头部像下面一样加入一个 manifest 的属性。</p><p><code>&lt;html lang=&quot;en&quot; manifest=&quot;index.manifest&quot;&gt;</code></p><p>在如下 cache.manifest 文件的编写离线存储的资源。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">CACHE MANIFEST</span></span>
<span class="line"><span style="color:#f6f6f4;">#v0.11</span></span>
<span class="line"><span style="color:#f6f6f4;">CACHE:</span></span>
<span class="line"><span style="color:#f6f6f4;">js/app.js</span></span>
<span class="line"><span style="color:#f6f6f4;">css/style.css</span></span>
<span class="line"><span style="color:#f6f6f4;">NETWORK:</span></span>
<span class="line"><span style="color:#f6f6f4;">resourse/logo.png</span></span>
<span class="line"><span style="color:#f6f6f4;">FALLBACK:</span></span>
<span class="line"><span style="color:#f6f6f4;">/ /offline.html</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">CACHE: 表示需要离线存储的资源列表，由于包含 manifest 文件的页面将被自动离线存储，所以不需要把页面自身也列出 来。</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">NETWORK: 表示在它下面列出来的资源只有在在线的情况下才能访问，他们不会被离线存储，所以在离线情况下无法使用这些资源。不过，如果在 CACHE 和 NETWORK 中有一个相同的资源，那么这个资源还是会被离线存储，也就是说 CACHE 的优先级更高。</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">FALLBACK: 表示如果访问第一个资源失败，那么就使用第二个资源来替换他，比如上面这个文件表示的就是如果访问根目录下任何一个资源失败了，那么就去访问 offline.html 。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">CACHE MANIFEST</span></span>
<span class="line"><span style="color:#24292e;">#v0.11</span></span>
<span class="line"><span style="color:#24292e;">CACHE:</span></span>
<span class="line"><span style="color:#24292e;">js/app.js</span></span>
<span class="line"><span style="color:#24292e;">css/style.css</span></span>
<span class="line"><span style="color:#24292e;">NETWORK:</span></span>
<span class="line"><span style="color:#24292e;">resourse/logo.png</span></span>
<span class="line"><span style="color:#24292e;">FALLBACK:</span></span>
<span class="line"><span style="color:#24292e;">/ /offline.html</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">CACHE: 表示需要离线存储的资源列表，由于包含 manifest 文件的页面将被自动离线存储，所以不需要把页面自身也列出 来。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">NETWORK: 表示在它下面列出来的资源只有在在线的情况下才能访问，他们不会被离线存储，所以在离线情况下无法使用这些资源。不过，如果在 CACHE 和 NETWORK 中有一个相同的资源，那么这个资源还是会被离线存储，也就是说 CACHE 的优先级更高。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">FALLBACK: 表示如果访问第一个资源失败，那么就使用第二个资源来替换他，比如上面这个文件表示的就是如果访问根目录下任何一个资源失败了，那么就去访问 offline.html 。</span></span></code></pre></div><p>（3）在离线状态时，操作 window.applicationCache 进行离线缓存的操作。</p><p><strong>如何更新缓存：</strong></p><p><strong>1、</strong> 更新 manifest 文件</p><p><strong>2、</strong> 通过 javascript 操作</p><p><strong>3、</strong> 清除浏览器缓存</p><p><strong>注意事项：</strong></p><p><strong>1、</strong> 浏览器对缓存数据的容量限制可能不太一样（某些浏览器设置的限制是每个站点 5MB）。</p><p><strong>2、</strong> 如果 manifest 文件，或者内部列举的某一个文件不能正常下载，整个更新过程都将失败，浏览器继续全部使用老的缓存。</p><p><strong>3、</strong> 引用 manifest 的 html 必须与 manifest 文件同源，在同一个域下。</p><p><strong>4、</strong> FALLBACK 中的资源必须和 manifest 文件同源。</p><p><strong>5、</strong> 当一个资源被缓存后，该浏览器直接请求这个绝对路径也会访问缓存中的资源。</p><p><strong>6、</strong> 站点中的其他页面即使没有设置 manifest 属性，请求的资源如果在缓存中也从缓存中访问。</p><p><strong>7、</strong> 当 manifest 文件发生改变时，资源请求本身也会触发更新。</p><h3 id="_3、如何实现浏览器内多个标签页之间的通信" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#3%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E5%A4%9A%E4%B8%AA%E6%A0%87%E7%AD%BE%E9%A1%B5%E4%B9%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1**" target="_blank" rel="noreferrer">3、如何实现浏览器内多个标签页之间的通信?**</a> <a class="header-anchor" href="#_3、如何实现浏览器内多个标签页之间的通信" aria-label="Permalink to &quot;[3、如何实现浏览器内多个标签页之间的通信?**](https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML最新面试题2021年，常见面试题及答案汇总.md#3如何实现浏览器内多个标签页之间的通信**)&quot;">​</a></h3><p><strong>1、</strong> WebSocket SharedWorker</p><p><strong>2、</strong> 也可以调用 localstorge、cookies 等本地存储方式。 localstorge 在另一个浏览上下文里被添加、修改或删除时，它都会触发一个事件，我们通过监听事件，控制它的值来进行页面信息通信。</p><p>注意：Safari 在无痕模式下设置 localstorge 值时会抛出QuotaExceededError 的异常</p><h3 id="_4、请描述一下-cookies-sessionstorage-和-localstorage-的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#4%E8%AF%B7%E6%8F%8F%E8%BF%B0%E4%B8%80%E4%B8%8B-cookiessessionstorage-%E5%92%8C-localstorage-%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">4、请描述一下 cookies，sessionStorage 和 localStorage 的区别？</a> <a class="header-anchor" href="#_4、请描述一下-cookies-sessionstorage-和-localstorage-的区别" aria-label="Permalink to &quot;[4、请描述一下 cookies，sessionStorage 和 localStorage 的区别？](https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML最新面试题2021年，常见面试题及答案汇总.md#4请描述一下-cookiessessionstorage-和-localstorage-的区别)&quot;">​</a></h3><p><strong>相关资料：</strong></p><p>SessionStorage， LocalStorage， Cookie 这三者都可以被用来在浏览器端存储数据，而且都是字符串类型的键值对。区别在于前两者属于 HTML5 WebStorage，创建它们的目的便于客户端存储数据。而 cookie 是网站为了标示用户身份而储存在用户本地终端上的数据（通常经过加密）。cookie 数据始终在同源（协议、主机、端口相同）的 http 请求中携带（即使不需要），会在浏览器和服务器间来回传递。</p><p><strong>存储大小：</strong></p><p><strong>1、</strong> cookie 数据大小不能超过4 k 。</p><p><strong>2、</strong> sessionStorage 和 localStorage 虽然也有存储大小的限制，但比 cookie 大得多，可以达到 5M 或更大。</p><p><strong>有期时间：</strong></p><p><strong>1、</strong> localStorage 存储持久数据，浏览器关闭后数据不丢失除非主动删除数据。</p><p><strong>2、</strong> sessionStorage 数据在页面会话结束时会被清除。页面会话在浏览器打开期间一直保持，并且重新加载或恢复页面仍会保持原来的页面会话。在新标签或窗口打开一个页面时会在顶级浏览上下文中初始化一个新的会话。</p><p><strong>3、</strong> cookie 设置的 cookie 过期时间之前一直有效，即使窗口或浏览器关闭。</p><p><strong>作用域：</strong></p><p><strong>1、</strong> sessionStorage 只在同源的同窗口（或标签页）中共享数据，也就是只在当前会话中共享。</p><p><strong>2、</strong> localStorage 在所有同源窗口中都是共享的。</p><p><strong>3、</strong> cookie 在所有同源窗口中都是共享的。</p><p><strong>回</strong></p><p>浏览器端常用的存储技术是 cookie 、localStorage 和 sessionStorage。</p><p>cookie 其实最开始是服务器端用于记录用户状态的一种方式，由服务器设置，在客户端存储，然后每次发起同源请求时，发送给服务器端。cookie 最多能存储 4 k 数据，它的生存时间由 expires 属性指定，并且 cookie 只能被同源的页面访问共享。</p><p>sessionStorage 是 html5 提供的一种浏览器本地存储的方法，它借鉴了服务器端 session 的概念，代表的是一次会话中所保存的数据。它一般能够存储 5M 或者更大的数据，它在当前窗口关闭后就失效了，并且 sessionStorage 只能被同一个窗口的同源页面所访问共享。</p><p>localStorage 也是 html5 提供的一种浏览器本地存储的方法，它一般也能够存储 5M 或者更大的数据。它和 sessionStorage 不同的是，除非手动删除它，否则它不会失效，并且 localStorage 也只能被同源页面所访问共享。</p><p>上面几种方式都是存储少量数据的时候的存储方式，当我们需要在本地存储大量数据的时候，我们可以使用浏览器的 indexDB 这是浏览器提供的一种本地的数据库存储机制。它不是关系型数据库，它内部采用对象仓库的形式存储数据，它更接近 NoSQL 数据库。</p><h3 id="_5、dtd-介绍" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#5dtd-%E4%BB%8B%E7%BB%8D" target="_blank" rel="noreferrer">5、DTD 介绍</a> <a class="header-anchor" href="#_5、dtd-介绍" aria-label="Permalink to &quot;[5、DTD 介绍](https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML最新面试题2021年，常见面试题及答案汇总.md#5dtd-介绍)&quot;">​</a></h3><p>DTD（ Document Type Definition 文档类型定义）是一组机器可读的规则，它们定义 XML 或 HTML 的特定版本中所有允许元</p><p>素及它们的属性和层次关系的定义。在解析网页时，浏览器将使用这些规则检查页面的有效性并且采取相应的措施。</p><p>DTD 是对 HTML 文档的声明，还会影响浏览器的渲染模式（工作模式）。</p><h3 id="_6、每个html文件里开头都有个很重要的东西-doctype-知道这是干什么的吗" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#6%E6%AF%8F%E4%B8%AAhtml%E6%96%87%E4%BB%B6%E9%87%8C%E5%BC%80%E5%A4%B4%E9%83%BD%E6%9C%89%E4%B8%AA%E5%BE%88%E9%87%8D%E8%A6%81%E7%9A%84%E4%B8%9C%E8%A5%BFdoctype%E7%9F%A5%E9%81%93%E8%BF%99%E6%98%AF%E5%B9%B2%E4%BB%80%E4%B9%88%E7%9A%84%E5%90%97" target="_blank" rel="noreferrer">6、每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？</a> <a class="header-anchor" href="#_6、每个html文件里开头都有个很重要的东西-doctype-知道这是干什么的吗" aria-label="Permalink to &quot;[6、每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？](https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML最新面试题2021年，常见面试题及答案汇总.md#6每个html文件里开头都有个很重要的东西doctype知道这是干什么的吗)&quot;">​</a></h3><h3 id="_7、什么是重绘和回流-浏览器绘制过程" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#7%E4%BB%80%E4%B9%88%E6%98%AF%E9%87%8D%E7%BB%98%E5%92%8C%E5%9B%9E%E6%B5%81%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%98%E5%88%B6%E8%BF%87%E7%A8%8B" target="_blank" rel="noreferrer">7、什么是重绘和回流？（浏览器绘制过程）</a> <a class="header-anchor" href="#_7、什么是重绘和回流-浏览器绘制过程" aria-label="Permalink to &quot;[7、什么是重绘和回流？（浏览器绘制过程）](https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML最新面试题2021年，常见面试题及答案汇总.md#7什么是重绘和回流浏览器绘制过程)&quot;">​</a></h3><p>重绘: 当渲染树中的一些元素需要更新属性，而这些属性只是影响元素的外观、风格，而不会影响布局的操作，比如 background-color，我们将这样的操作称为重绘。</p><p>回流：当渲染树中的一部分（或全部）因为元素的规模尺寸、布局、隐藏等改变而需要重新构建的操作，会影响到布局的操作，这样的操作我们称为回流。</p><p><strong>常见引起回流属性和方法：</strong></p><p>任何会改变元素几何信息（元素的位置和尺寸大小）的操作，都会触发回流。</p><p><strong>1、</strong> 添加或者删除可见的 DOM 元素；</p><p><strong>2、</strong> 元素尺寸改变——边距、填充、边框、宽度和高度</p><p><strong>3、</strong> 内容变化，比如用户在 input 框中输入文字</p><p><strong>4、</strong> 浏览器窗口尺寸改变——resize事件发生时</p><p><strong>5、</strong> 计算 offsetWidth 和 offsetHeight 属性</p><p><strong>6、</strong> 设置 style 属性的值</p><p><strong>7、</strong> 当你修改网页的默认字体时。</p><p>回流必定会发生重绘，重绘不一定会引发回流。回流所需的成本比重绘高的多，改变父节点里的子节点很可能会导致父节点的一系列</p><p>回流。</p><h3 id="_8、介绍一下你对浏览器内核的理解" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#8%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%B8%8B%E4%BD%A0%E5%AF%B9%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8%E7%9A%84%E7%90%86%E8%A7%A3" target="_blank" rel="noreferrer">8、介绍一下你对浏览器内核的理解</a> <a class="header-anchor" href="#_8、介绍一下你对浏览器内核的理解" aria-label="Permalink to &quot;[8、介绍一下你对浏览器内核的理解](https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML最新面试题2021年，常见面试题及答案汇总.md#8介绍一下你对浏览器内核的理解)&quot;">​</a></h3><p>主要分成两部分：渲染引擎(Layout Engine或Rendering Engine)和JS引擎。</p><p>渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。</p><p>JS引擎：解析和执行javascript来实现网页的动态效果。</p><p>最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。</p><h3 id="_9、常见的浏览器内核有哪些" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#9%E5%B8%B8%E8%A7%81%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8%E6%9C%89%E5%93%AA%E4%BA%9B" target="_blank" rel="noreferrer">9、常见的浏览器内核有哪些</a> <a class="header-anchor" href="#_9、常见的浏览器内核有哪些" aria-label="Permalink to &quot;[9、常见的浏览器内核有哪些](https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML最新面试题2021年，常见面试题及答案汇总.md#9常见的浏览器内核有哪些)&quot;">​</a></h3><p><strong>1、</strong> Trident( MSHTML )：IE MaxThon TT The World 360 搜狗浏览器</p><p><strong>2、</strong> Geckos：Netscape6及以上版本 FireFox Mozilla Suite/SeaMonkey</p><p><strong>3、</strong> Presto：Opera7及以上(Opera内核原为：Presto，现为：Blink)</p><p><strong>4、</strong> Webkit：Safari Chrome</p><h3 id="_10、label的作用是什么-是怎么用的" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#10label%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88-%E6%98%AF%E6%80%8E%E4%B9%88%E7%94%A8%E7%9A%84**" target="_blank" rel="noreferrer">10、label的作用是什么? 是怎么用的?**</a> <a class="header-anchor" href="#_10、label的作用是什么-是怎么用的" aria-label="Permalink to &quot;[10、label的作用是什么? 是怎么用的?**](https://gitee.com/souyunku/DevBooks/blob/master/docs/HTML/HTML最新面试题2021年，常见面试题及答案汇总.md#10label的作用是什么-是怎么用的**)&quot;">​</a></h3><p>label标签用来定义表单控件间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。label 中有两个属性是非常有用的, FOR和ACCESSKEY。</p><p>FOR属性功能：表示label标签要绑定的HTML元素，你点击这个标签的时候，所绑定的元素将获取焦点。例如，</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;Label FOR=&quot;InputBox&quot;&gt;姓名&lt;/Label&gt;&lt;input ID=&quot;InputBox&quot; type=&quot;text&quot;&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;Label FOR=&quot;InputBox&quot;&gt;姓名&lt;/Label&gt;&lt;input ID=&quot;InputBox&quot; type=&quot;text&quot;&gt;</span></span></code></pre></div><p>ACCESSKEY属性功能：表示访问label标签所绑定的元素的热键，当您按下热键，所绑定的元素将获取焦点。例如，</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;Label FOR=&quot;InputBox&quot; ACCESSKEY＝&quot;N&quot;&gt;姓名&lt;/Label&gt;&lt;input ID=&quot;InputBox&quot; type=&quot;text&quot;&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;Label FOR=&quot;InputBox&quot; ACCESSKEY＝&quot;N&quot;&gt;姓名&lt;/Label&gt;&lt;input ID=&quot;InputBox&quot; type=&quot;text&quot;&gt;</span></span></code></pre></div><h3 id="_11、html5的form如何关闭自动完成功能" tabindex="-1">11、HTML5的form如何关闭自动完成功能 <a class="header-anchor" href="#_11、html5的form如何关闭自动完成功能" aria-label="Permalink to &quot;11、HTML5的form如何关闭自动完成功能&quot;">​</a></h3><h3 id="_12、html标签" tabindex="-1">12、HTML标签： <a class="header-anchor" href="#_12、html标签" aria-label="Permalink to &quot;12、HTML标签：&quot;">​</a></h3><h3 id="_13、cookies-sessionstorage和localstorage的区别" tabindex="-1">13、cookies，sessionStorage和localStorage的区别 <a class="header-anchor" href="#_13、cookies-sessionstorage和localstorage的区别" aria-label="Permalink to &quot;13、cookies，sessionStorage和localStorage的区别&quot;">​</a></h3><h3 id="_14、iframe-有那些缺点" tabindex="-1">14、iframe 有那些缺点？ <a class="header-anchor" href="#_14、iframe-有那些缺点" aria-label="Permalink to &quot;14、iframe 有那些缺点？&quot;">​</a></h3><h3 id="_15、html5有哪些新特性-移除了那些元素-如何处理html5新标签的浏览器兼容问题-如何区分html和html5" tabindex="-1">15、HTML5有哪些新特性,移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分HTML和HTML5** <a class="header-anchor" href="#_15、html5有哪些新特性-移除了那些元素-如何处理html5新标签的浏览器兼容问题-如何区分html和html5" aria-label="Permalink to &quot;15、HTML5有哪些新特性,移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分HTML和HTML5**&quot;">​</a></h3><h3 id="_16、页面可见性-page-visibility-api-可以有哪些用途" tabindex="-1">16、页面可见性（Page Visibility API） 可以有哪些用途？ <a class="header-anchor" href="#_16、页面可见性-page-visibility-api-可以有哪些用途" aria-label="Permalink to &quot;16、页面可见性（Page Visibility API） 可以有哪些用途？&quot;">​</a></h3><h3 id="_17、页面导入样式时-使用link和-import有什么区别" tabindex="-1">17、页面导入样式时，使用link和@import有什么区别 <a class="header-anchor" href="#_17、页面导入样式时-使用link和-import有什么区别" aria-label="Permalink to &quot;17、页面导入样式时，使用link和@import有什么区别&quot;">​</a></h3><h3 id="_18、iframe框架有那些优缺点" tabindex="-1">18、iframe框架有那些优缺点 <a class="header-anchor" href="#_18、iframe框架有那些优缺点" aria-label="Permalink to &quot;18、iframe框架有那些优缺点&quot;">​</a></h3><h3 id="_19、浏览器架构" tabindex="-1">19、浏览器架构 <a class="header-anchor" href="#_19、浏览器架构" aria-label="Permalink to &quot;19、浏览器架构&quot;">​</a></h3><h3 id="_20、canvas-和-svg-有什么区别" tabindex="-1">20、Canvas 和 SVG 有什么区别？ <a class="header-anchor" href="#_20、canvas-和-svg-有什么区别" aria-label="Permalink to &quot;20、Canvas 和 SVG 有什么区别？&quot;">​</a></h3><h3 id="_21、行内元素有哪些-块级元素有哪些-css的盒模型" tabindex="-1">21、行内元素有哪些?块级元素有哪些?CSS的盒模型? <a class="header-anchor" href="#_21、行内元素有哪些-块级元素有哪些-css的盒模型" aria-label="Permalink to &quot;21、行内元素有哪些?块级元素有哪些?CSS的盒模型?&quot;">​</a></h3><h3 id="_22、介绍一下你对浏览器内核的理解" tabindex="-1">22、介绍一下你对浏览器内核的理解？ <a class="header-anchor" href="#_22、介绍一下你对浏览器内核的理解" aria-label="Permalink to &quot;22、介绍一下你对浏览器内核的理解？&quot;">​</a></h3><h3 id="_23、doctype有什么作用-标准模式与混杂模式如何区分-它们有何意义" tabindex="-1">23、DOCTYPE有什么作用？标准模式与混杂模式如何区分？它们有何意义? <a class="header-anchor" href="#_23、doctype有什么作用-标准模式与混杂模式如何区分-它们有何意义" aria-label="Permalink to &quot;23、DOCTYPE有什么作用？标准模式与混杂模式如何区分？它们有何意义?&quot;">​</a></h3><h3 id="_24、如何在页面上实现一个圆形的可点击区域" tabindex="-1">24、如何在页面上实现一个圆形的可点击区域 <a class="header-anchor" href="#_24、如何在页面上实现一个圆形的可点击区域" aria-label="Permalink to &quot;24、如何在页面上实现一个圆形的可点击区域&quot;">​</a></h3><h3 id="_25、display-none-与-visibility-hidden-的区别是什么" tabindex="-1">25、display：none；与 visibility： hidden 的区别是什么？ <a class="header-anchor" href="#_25、display-none-与-visibility-hidden-的区别是什么" aria-label="Permalink to &quot;25、display：none；与 visibility： hidden 的区别是什么？&quot;">​</a></h3><h3 id="_26、请描述一下-cookies-sessionstorage-和-localstorage-的区别" tabindex="-1">26、请描述一下 <code>cookies</code>，<code>sessionStorage</code> 和 <code>localStorage</code> 的区别？ <a class="header-anchor" href="#_26、请描述一下-cookies-sessionstorage-和-localstorage-的区别" aria-label="Permalink to &quot;26、请描述一下 \`cookies\`，\`sessionStorage\` 和 \`localStorage\` 的区别？&quot;">​</a></h3><h3 id="_27、浏览器是怎么对html5的离线储存资源进行管理和加载的呢" tabindex="-1">27、浏览器是怎么对<code>HTML5</code>的离线储存资源进行管理和加载的呢 <a class="header-anchor" href="#_27、浏览器是怎么对html5的离线储存资源进行管理和加载的呢" aria-label="Permalink to &quot;27、浏览器是怎么对\`HTML5\`的离线储存资源进行管理和加载的呢&quot;">​</a></h3><h3 id="_28、html5-有哪些新特性、移除了那些元素" tabindex="-1">28、HTML5 有哪些新特性、移除了那些元素？ <a class="header-anchor" href="#_28、html5-有哪些新特性、移除了那些元素" aria-label="Permalink to &quot;28、HTML5 有哪些新特性、移除了那些元素？&quot;">​</a></h3><h3 id="_29、img的alt与title有何异同-strong与em的异同" tabindex="-1">29、img的alt与title有何异同？ strong与em的异同？ <a class="header-anchor" href="#_29、img的alt与title有何异同-strong与em的异同" aria-label="Permalink to &quot;29、img的alt与title有何异同？ strong与em的异同？&quot;">​</a></h3><h3 id="_30、行内元素定义" tabindex="-1">30、行内元素定义 <a class="header-anchor" href="#_30、行内元素定义" aria-label="Permalink to &quot;30、行内元素定义&quot;">​</a></h3><h3 id="_31、用于预格式化文本的标签是" tabindex="-1">31、用于预格式化文本的标签是？ <a class="header-anchor" href="#_31、用于预格式化文本的标签是" aria-label="Permalink to &quot;31、用于预格式化文本的标签是？&quot;">​</a></h3>`,104),l=[n];function r(p,i,E,c,h,B){return e(),s("div",null,l)}const A=a(t,[["render",r]]);export{g as __pageData,A as default};
