import{_ as a,o as s,c as n,V as l}from"./chunks/framework.c6d8cbec.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/css/CSSBase.md","filePath":"frontend/css/CSSBase.md"}'),o={name:"frontend/css/CSSBase.md"},e=l(`<h2 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h2><h3 id="css引入方式-🚀" tabindex="-1">css引入方式 🚀 <a class="header-anchor" href="#css引入方式-🚀" aria-label="Permalink to &quot;css引入方式 🚀&quot;">​</a></h3><p><strong>html中书写css的方式，具体有3种</strong></p><table><thead><tr><th>名称</th><th>语法描述</th><th>示例</th></tr></thead><tbody><tr><td>内联样式</td><td>在标签内使用style属性，属性值是css属性键值对</td><td><code>&lt;div style=&quot;color: red;font-size: 34px&quot;&gt;hello css&lt;/div&gt;</code></td></tr><tr><td>内部样式</td><td>定义<code>&lt;style&gt;</code>标签，在标签内部定义css样式</td><td><code>&lt;style&gt; div { color: blue; }&lt;/style&gt; </code></td></tr><tr><td>外部样式</td><td>定义<code>&lt;link&gt;</code>标签，通过href属性引入外部css文件</td><td><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;css/demo.css&quot;&gt;</code></td></tr></tbody></table><ul><li><strong>内联样式</strong></li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;!</span><span style="color:#F286C4;">DOCTYPE</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">html</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">html</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">lang</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">en</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">head</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">meta</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">charset</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">UTF-8</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">title</span><span style="color:#F6F6F4;">&gt;CSS-介绍&lt;/</span><span style="color:#F286C4;">title</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">head</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">body</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">style</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">color: red;font-size: 34px</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;hello css&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">body</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">html</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;CSS-介绍&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;color: red;font-size: 34px&quot;</span><span style="color:#24292E;">&gt;hello css&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><hr><ul><li><strong>外部样式</strong>：</li></ul><p><strong>html文件</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;!</span><span style="color:#F286C4;">DOCTYPE</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">html</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">html</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">lang</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">en</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">head</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">meta</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">charset</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">UTF-8</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">title</span><span style="color:#F6F6F4;">&gt;CSS-介绍&lt;/</span><span style="color:#F286C4;">title</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">link</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">rel</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">stylesheet</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">href</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">demo.css</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">head</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">body</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;hello css&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">body</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">html</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;CSS-介绍&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">link</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rel</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stylesheet&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">href</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;demo.css&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;hello css&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><strong>demo.css</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;">color</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">red</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;">font-size</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">40</span><span style="color:#F286C4;">px</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">div</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">font-size</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">40</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>**对于上述3种引入方式，企业开发的使用情况如下：**前端工程师掌握</p><ol><li>内联样式会出现大量的代码冗余，不方便后期的维护，所以不常用。</li><li>内部样式，通过定义css选择器，让样式作用于指定的标签上</li><li>外部样式，html和css实现了完全的分离，企业开发常用方式。</li></ol><h3 id="选择器和属性-🚀" tabindex="-1">选择器和属性 🚀 <a class="header-anchor" href="#选择器和属性-🚀" aria-label="Permalink to &quot;选择器和属性 🚀&quot;">​</a></h3><ol><li>本小节主要来讲解css的选择器，包括css选择器中的属性 🎯。</li></ol><blockquote><p>顾名思义：选择器是选取需设置样式的元素（标签），但是我们根据业务场景不同，选择的标签的需求也是多种多样的，所以选择器有很多种，因为我们是做后台开发的，所以对于css选择器，我们只学习最基本的3种</p></blockquote><p><strong>选择器通用语法如下</strong>：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">选择器名</span><span style="color:#F6F6F4;">   {</span></span>
<span class="line"><span style="color:#F6F6F4;">    css样式名：css样式值;</span></span>
<span class="line"><span style="color:#F6F6F4;">    css样式名：css样式值;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">选择器名   {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">css</span><span style="color:#24292E;">样式名：</span><span style="color:#005CC5;">css</span><span style="color:#24292E;">样式值;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">css</span><span style="color:#24292E;">样式名：</span><span style="color:#005CC5;">css</span><span style="color:#24292E;">样式值;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>样式选择器</p><ul><li>元素选择器</li><li>id选择器</li><li>class选择器</li></ul><p><strong>1.元素（标签）选择器：</strong></p><ul><li>选择器的名字必须是标签的名字</li><li>作用：选择器中的样式会作用于所有同名的标签上</li></ul><p>例子如下：</p><p><strong>2.id选择器:</strong></p><ul><li>选择器的名字前面需要加上#</li><li>作用：选择器中的样式会作用于指定id的标签上，而且有且只有一个标签</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">#id属性值 {</span></span>
<span class="line"><span style="color:#f6f6f4;">    css样式名:css样式值；</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#id属性值 {</span></span>
<span class="line"><span style="color:#24292e;">    css样式名:css样式值；</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p>例子如下：</p><p><strong>3.类选择器：</strong></p><ul><li>选择器的名字前面需要加上.</li><li>作用：选择器中的样式会作用于所有class的属性值和该名字一样的标签上，可以是多个</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">.class属性值 {</span></span>
<span class="line"><span style="color:#f6f6f4;">    css样式名:css样式值；</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.class属性值 {</span></span>
<span class="line"><span style="color:#24292e;">    css样式名:css样式值；</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p>例子如下：</p><p>接下来我们需要通过代码来演示3种选择器的作用：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;!</span><span style="color:#F286C4;">DOCTYPE</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">html</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">html</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">lang</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">en</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">head</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">meta</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">charset</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">UTF-8</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">meta</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">http-equiv</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">X-UA-Compatible</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">content</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">IE=edge</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">meta</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">name</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">viewport</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">content</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">width=device-width, initial-scale=1.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">title</span><span style="color:#F6F6F4;">&gt;CSS-选择器&lt;/</span><span style="color:#F286C4;">title</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">style</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">color</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">red</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#62E884;font-style:italic;">#did</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">color</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">blue</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#62E884;font-style:italic;">.cls</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;">color</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">aqua</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;/</span><span style="color:#F286C4;">style</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">head</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">body</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;Hello CSS&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">id</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">did</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;Hello CSS id&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">class</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">cls</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;Hello CSS class&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">body</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">html</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">http-equiv</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;X-UA-Compatible&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">content</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;IE=edge&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;viewport&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">content</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;CSS-选择器&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">div</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">#did</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">blue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">.cls</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">aqua</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;Hello CSS&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;did&quot;</span><span style="color:#24292E;">&gt;Hello CSS id&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;cls&quot;</span><span style="color:#24292E;">&gt;Hello CSS class&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>🚩 1. 将文字的背景换成闪光绿，字体变成紫罗兰色</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;!</span><span style="color:#F286C4;">DOCTYPE</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">html</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">html</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">lang</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">en</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">head</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">meta</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">charset</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">UTF-8</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">title</span><span style="color:#F6F6F4;">&gt;CSS案例&lt;/</span><span style="color:#F286C4;">title</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">head</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">body</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#7B7F8B;">&lt;!--需求：将文字的背景换成闪光绿，字体变成紫罗兰色--&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">p</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    好好敲代码，每天都有进步</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">p</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">body</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">html</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;CSS案例&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--需求：将文字的背景换成闪光绿，字体变成紫罗兰色--&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    好好敲代码，每天都有进步</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="css基础" tabindex="-1">CSS基础 <a class="header-anchor" href="#css基础" aria-label="Permalink to &quot;CSS基础&quot;">​</a></h2><h2 id="选择器" tabindex="-1">选择器 <a class="header-anchor" href="#选择器" aria-label="Permalink to &quot;选择器&quot;">​</a></h2><h3 id="选择器优先级" tabindex="-1">选择器优先级 <a class="header-anchor" href="#选择器优先级" aria-label="Permalink to &quot;选择器优先级&quot;">​</a></h3><p>“越特别，越优先。”</p><h3 id="单一的选择器" tabindex="-1">单一的选择器 <a class="header-anchor" href="#单一的选择器" aria-label="Permalink to &quot;单一的选择器&quot;">​</a></h3><h4 id="类选择器" tabindex="-1">类选择器 <a class="header-anchor" href="#类选择器" aria-label="Permalink to &quot;类选择器&quot;">​</a></h4><p>最常用的选择器</p><p>CSS: <strong><code>.classname{}</code></strong></p><p>HTML: <strong><code>&lt;element class=&quot;classname&quot;&gt;&lt;/element&gt;</code></strong></p><h4 id="id选择器" tabindex="-1">id选择器 <a class="header-anchor" href="#id选择器" aria-label="Permalink to &quot;id选择器&quot;">​</a></h4><p>较常用的选择器，注意一个元素的id应当是唯一的</p><p>CSS: <strong><code>#id{}</code></strong></p><p>HTML: <strong><code>&lt;element id=&quot;id&quot;&gt;&lt;/element&gt;</code></strong></p><h4 id="元素选择器" tabindex="-1">元素选择器 <a class="header-anchor" href="#元素选择器" aria-label="Permalink to &quot;元素选择器&quot;">​</a></h4><p>选择一类元素</p><p>CSS: <strong><code>el{}</code></strong></p><p>HTML: <strong><code>&lt;el&gt;&lt;/el&gt;</code></strong></p><h4 id="属性选择器" tabindex="-1">属性选择器 <a class="header-anchor" href="#属性选择器" aria-label="Permalink to &quot;属性选择器&quot;">​</a></h4><p>根据属性选择元素，支持部分包含（使用~=或|=，字段用空格或&quot;-&quot;分隔）和匹配所有值（只保留属性名，不限制属性内容）</p><p>CSS: <strong><code>[category=&quot;pro&quot;]</code></strong></p><p>HTML: <strong><code>&lt;el category=&quot;pro&quot;&gt;&lt;/el&gt;</code></strong></p><h3 id="组合的选择器" tabindex="-1">组合的选择器 <a class="header-anchor" href="#组合的选择器" aria-label="Permalink to &quot;组合的选择器&quot;">​</a></h3><p>组合的选择器仍然可以组合，符合逻辑就行。</p><h4 id="派生选择器" tabindex="-1">派生选择器 <a class="header-anchor" href="#派生选择器" aria-label="Permalink to &quot;派生选择器&quot;">​</a></h4><p>如下<strong>后代选择器</strong>选择了a元素中的所有b元素。</p><p>CSS: <strong><code>a b{}</code></strong></p><p>HTML: <strong><code>&lt;a&gt;&lt;b&gt;&lt;/b&gt;&lt;/a&gt;</code></strong></p><h4 id="多类选择器" tabindex="-1">多类选择器 <a class="header-anchor" href="#多类选择器" aria-label="Permalink to &quot;多类选择器&quot;">​</a></h4><p><code>.class1.class2{}</code>选择了class属性同时包含class1与class2的元素</p><h4 id="结合元素的类选择器" tabindex="-1">结合元素的类选择器 <a class="header-anchor" href="#结合元素的类选择器" aria-label="Permalink to &quot;结合元素的类选择器&quot;">​</a></h4><p>如<code>p.classname{}</code>将选择class=&quot;classname&quot;的p元素</p><h4 id="结合元素的属性选择器" tabindex="-1">结合元素的属性选择器 <a class="header-anchor" href="#结合元素的属性选择器" aria-label="Permalink to &quot;结合元素的属性选择器&quot;">​</a></h4><p>如<code>a[href]</code>选择了所有具有href属性的a元素</p><h3 id="选择器中的符号" tabindex="-1">选择器中的符号 <a class="header-anchor" href="#选择器中的符号" aria-label="Permalink to &quot;选择器中的符号&quot;">​</a></h3><h4 id="逗号" tabindex="-1">逗号, <a class="header-anchor" href="#逗号" aria-label="Permalink to &quot;逗号,&quot;">​</a></h4><p><code>a,b{}</code>样式同时作用于a和b选中的元素，适用于选择多类元素</p><h4 id="通配符选择器" tabindex="-1">通配符选择器* <a class="header-anchor" href="#通配符选择器" aria-label="Permalink to &quot;通配符选择器\\*&quot;">​</a></h4><p>通配符选择器，允许选择所有元素</p><h4 id="子元素选择器" tabindex="-1">子元素选择器&gt; <a class="header-anchor" href="#子元素选择器" aria-label="Permalink to &quot;子元素选择器&gt;&quot;">​</a></h4><p>子元素选择器，a&gt;b将选择a的所有直接子元素中的b元素。也就是说b元素与a元素之间不能有一层其他元素（如<code>&lt;a&gt;&lt;span&gt;&lt;b&gt;&lt;/b&gt;&lt;/span&gt;&lt;/a&gt;</code>是不行的）。</p><h4 id="相邻兄弟选择器" tabindex="-1">相邻兄弟选择器+ <a class="header-anchor" href="#相邻兄弟选择器" aria-label="Permalink to &quot;相邻兄弟选择器+&quot;">​</a></h4><p>相邻兄弟选择器，a+b将选择与a具有同一父元素的相邻的b元素（如<code>&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;</code>中的b元素会被选中，但a不会被选中）。只能选择相邻的（下一个）元素，如果不相邻无法选择。</p><h2 id="伪类与伪元素" tabindex="-1">伪类与伪元素 <a class="header-anchor" href="#伪类与伪元素" aria-label="Permalink to &quot;伪类与伪元素&quot;">​</a></h2><p>伪类和伪元素用于css选择器，利用他们使css更灵活。</p><h3 id="常见的伪元素" tabindex="-1">常见的伪元素 <a class="header-anchor" href="#常见的伪元素" aria-label="Permalink to &quot;常见的伪元素&quot;">​</a></h3><h4 id="after" tabindex="-1">::after <a class="header-anchor" href="#after" aria-label="Permalink to &quot;::after&quot;">​</a></h4><p>::after用于描述处于css渲染层的一个伪元素，相当于选中元素的最后一个子元素，但这个元素与DOM节点无关，位于选择的元素之后，伪元素的内容用content属性描述。</p><h4 id="before" tabindex="-1">::before <a class="header-anchor" href="#before" aria-label="Permalink to &quot;::before&quot;">​</a></h4><p>与after相对应，相当于被选中元素的第一个子元素。</p><p>为after和before设置宽高</p><p>after和before默认情况下是inline元素，如需设置宽高，需要更改display属性</p><h4 id="selection" tabindex="-1">::selection <a class="header-anchor" href="#selection" aria-label="Permalink to &quot;::selection&quot;">​</a></h4><p>将用户选择的内容作为伪元素。</p><h4 id="first-letter" tabindex="-1">::first-letter <a class="header-anchor" href="#first-letter" aria-label="Permalink to &quot;::first-letter&quot;">​</a></h4><p>选中第一个字符作为伪元素。但只能用于块级元素，并且第一个字符前不能有图片或内联表格。</p><h4 id="first-line" tabindex="-1">::first-line <a class="header-anchor" href="#first-line" aria-label="Permalink to &quot;::first-line&quot;">​</a></h4><p>选中第一行作为伪元素，只能用于块级元素（行内元素也用不着这个说法...）。</p><h3 id="伪元素与伪类的区别" tabindex="-1">伪元素与伪类的区别 <a class="header-anchor" href="#伪元素与伪类的区别" aria-label="Permalink to &quot;伪元素与伪类的区别&quot;">​</a></h3><p>伪元素将元素的某些部分作为元素选中（但不选中真正的元素），而伪类对应选择的元素的特殊状态（选择真正的元素）。</p><p>w3c的定义是，伪类用于向某些选择器添加特殊的效果（选择器已选中元素），伪元素用于将特殊效果添加到选择器（通过伪元素才能确定选中元素）。</p><p>更直观的理解是，伪元素达到的效果必须通过添加真实的元素替代，而伪类达到的效果必须通过添加真实的类替代。</p><h4 id="hover" tabindex="-1">:hover <a class="header-anchor" href="#hover" aria-label="Permalink to &quot;:hover&quot;">​</a></h4><p>鼠标悬停于某一元素时生效。</p><h4 id="active" tabindex="-1">:active <a class="header-anchor" href="#active" aria-label="Permalink to &quot;:active&quot;">​</a></h4><p>通常用于<code>&lt;a&gt;</code>和<code>&lt;button&gt;</code>，对应鼠标按下时的状态。</p><h4 id="link" tabindex="-1">:link <a class="header-anchor" href="#link" aria-label="Permalink to &quot;:link&quot;">​</a></h4><p>匹配未访问过的链接，要求具有href属性的<code>&lt;a&gt;&lt;area&gt;&lt;link&gt;</code>元素。</p><h4 id="focus" tabindex="-1">:focus <a class="header-anchor" href="#focus" aria-label="Permalink to &quot;:focus&quot;">​</a></h4><p>被聚焦的状态，通常用于<code>&lt;input&gt;</code>元素。</p><h4 id="first-child" tabindex="-1">:first-child <a class="header-anchor" href="#first-child" aria-label="Permalink to &quot;:first-child&quot;">​</a></h4><p>选择一组兄弟元素中的第一个元素。</p><h4 id="first-of-type" tabindex="-1">:first-of-type <a class="header-anchor" href="#first-of-type" aria-label="Permalink to &quot;:first-of-type&quot;">​</a></h4><p>选择一组兄弟元素中的第一个指定类型的元素（可以不是第一个元素）。</p><h4 id="root" tabindex="-1">:root <a class="header-anchor" href="#root" aria-label="Permalink to &quot;:root&quot;">​</a></h4><p>匹配文档树的根元素，在HTML文档中匹配html元素</p><h2 id="盒子模型" tabindex="-1">盒子模型 <a class="header-anchor" href="#盒子模型" aria-label="Permalink to &quot;盒子模型&quot;">​</a></h2><p>content, padding,border,(outline),margin</p><p>一个元素所占的空间由以上的数值决定，其中padding是内边距，border是边框，margin是外边距。通常我们设置的width与height决定了content的宽高，但我们可以使用box-sizing属性改变宽高的定义，从而width与height包括border与padding。</p><p>outline并不在盒子模型讨论的范围内，因为虽然也会显示，但不占用空间，只会覆盖其他元素。</p><h3 id="box-sizing" tabindex="-1">box-sizing <a class="header-anchor" href="#box-sizing" aria-label="Permalink to &quot;box-sizing&quot;">​</a></h3><p><code>content-box|border-box</code></p><p>默认content-box，宽高不包括padding与border，border-box则包括两者。</p><h3 id="width" tabindex="-1">width <a class="header-anchor" href="#width" aria-label="Permalink to &quot;width&quot;">​</a></h3><p>content的宽度。border-box下包括padding与border。</p><h3 id="height" tabindex="-1">height <a class="header-anchor" href="#height" aria-label="Permalink to &quot;height&quot;">​</a></h3><p>content的高度。border-box下包括padding与border。</p><h3 id="min-width" tabindex="-1">min-width <a class="header-anchor" href="#min-width" aria-label="Permalink to &quot;min-width&quot;">​</a></h3><p>最小宽度。</p><h3 id="min-height" tabindex="-1">min-height <a class="header-anchor" href="#min-height" aria-label="Permalink to &quot;min-height&quot;">​</a></h3><p>最小高度。</p><h3 id="max-width" tabindex="-1">max-width <a class="header-anchor" href="#max-width" aria-label="Permalink to &quot;max-width&quot;">​</a></h3><p>最大宽度。</p><h3 id="max-height" tabindex="-1">max-height <a class="header-anchor" href="#max-height" aria-label="Permalink to &quot;max-height&quot;">​</a></h3><p>最大高度。</p><h3 id="line-height" tabindex="-1"><a href="#line-height-2">line-height</a> <a class="header-anchor" href="#line-height" aria-label="Permalink to &quot;[line-height](#line-height-2)&quot;">​</a></h3><h3 id="padding" tabindex="-1">padding <a class="header-anchor" href="#padding" aria-label="Permalink to &quot;padding&quot;">​</a></h3><h4 id="padding-left" tabindex="-1">padding-left <a class="header-anchor" href="#padding-left" aria-label="Permalink to &quot;padding-left&quot;">​</a></h4><p>左内边距</p><h4 id="padding-right" tabindex="-1">padding-right <a class="header-anchor" href="#padding-right" aria-label="Permalink to &quot;padding-right&quot;">​</a></h4><p>右内边距</p><h4 id="padding-bottom" tabindex="-1">padding-bottom <a class="header-anchor" href="#padding-bottom" aria-label="Permalink to &quot;padding-bottom&quot;">​</a></h4><p>底部内边距</p><h4 id="padding-top" tabindex="-1">padding-top <a class="header-anchor" href="#padding-top" aria-label="Permalink to &quot;padding-top&quot;">​</a></h4><p>顶部内边距</p><h3 id="border" tabindex="-1"><a href="#border-2">border</a> <a class="header-anchor" href="#border" aria-label="Permalink to &quot;[border](#border-2)&quot;">​</a></h3><h3 id="margin" tabindex="-1">margin <a class="header-anchor" href="#margin" aria-label="Permalink to &quot;margin&quot;">​</a></h3><p>直接设置margin相当于同时设置以下四个属性。margin也是元素占用的空间，但指一个元素的大小肯定不包括margin。</p><h4 id="margin-left" tabindex="-1">margin-left <a class="header-anchor" href="#margin-left" aria-label="Permalink to &quot;margin-left&quot;">​</a></h4><p>左外边距</p><h4 id="margin-right" tabindex="-1">margin-right <a class="header-anchor" href="#margin-right" aria-label="Permalink to &quot;margin-right&quot;">​</a></h4><p>右外边距</p><h4 id="margin-bottom" tabindex="-1">margin-bottom <a class="header-anchor" href="#margin-bottom" aria-label="Permalink to &quot;margin-bottom&quot;">​</a></h4><p>底部外边距</p><h4 id="margin-top" tabindex="-1">margin-top <a class="header-anchor" href="#margin-top" aria-label="Permalink to &quot;margin-top&quot;">​</a></h4><p>顶部外边距</p><h3 id="outline" tabindex="-1">outline <a class="header-anchor" href="#outline" aria-label="Permalink to &quot;outline&quot;">​</a></h3><p>直接设置outline相当于设置以下属性。轮廓是不能分别设置上下左右边的，也只能是矩形。</p><h4 id="outline-color" tabindex="-1">outline-color <a class="header-anchor" href="#outline-color" aria-label="Permalink to &quot;outline-color&quot;">​</a></h4><p>轮廓的颜色</p><h4 id="outline-style" tabindex="-1">outline-style <a class="header-anchor" href="#outline-style" aria-label="Permalink to &quot;outline-style&quot;">​</a></h4><p>轮廓的样式，通常solid（dotted、double等也可以）。</p><h4 id="outline-width" tabindex="-1">outline-width <a class="header-anchor" href="#outline-width" aria-label="Permalink to &quot;outline-width&quot;">​</a></h4><p>轮廓的宽度</p><h4 id="outline-offset" tabindex="-1">outline-offset <a class="header-anchor" href="#outline-offset" aria-label="Permalink to &quot;outline-offset&quot;">​</a></h4><p>如果是正值，轮廓包围的矩形放大，离padding与margin的交界的每个方向的边都保持这个距离；如果是负值，轮廓向内缩小。</p><h2 id="initial-inherit" tabindex="-1">initial, inherit <a class="header-anchor" href="#initial-inherit" aria-label="Permalink to &quot;initial, inherit&quot;">​</a></h2><p>任何属性都可以用这两个值填充，inherit表示继承父元素该属性的值，initial表示设为默认值。</p><h2 id="background" tabindex="-1">background <a class="header-anchor" href="#background" aria-label="Permalink to &quot;background&quot;">​</a></h2><p>background-size：设定背景图片大小、缩放。“100% 100%”可令图片拉伸。</p><p>backgrounf-repeat：设定背景重复方式。</p><p>background-clip：决定背景是否占据border、padding的空间。</p><p>background-origin：决定背景图原点的位置由boder、padding或content决定。</p><p>background-position：基于origin的定义，决定背景图的初始位置（上下左右等）。“center center”可令背景图居中。</p><h2 id="flex" tabindex="-1">flex <a class="header-anchor" href="#flex" aria-label="Permalink to &quot;flex&quot;">​</a></h2><p>justify-content：决定主轴上的对齐方式。</p><p>align-items：决定交叉轴上元素的对齐方式（行内）。</p><p>align-content：决定交叉轴上不同行的对齐方式。</p><p>flex-direction：主轴方向可以是横向或竖向。</p><p>flex-wrap：决定是否换行。</p><p>flex-flow：direction和wrap的简写。</p><h3 id="flex的子元素" tabindex="-1">flex的子元素 <a class="header-anchor" href="#flex的子元素" aria-label="Permalink to &quot;flex的子元素&quot;">​</a></h3><p>align-self：决定自己在交叉轴上的对齐方式。继承自父元素，无父元素默认stretch。</p><p>order：顺序，越小越靠前。</p><p>flex-grow：元素的放大比例，默认为0，如果大于0，有剩余空间时元素会占据更多主轴空间。</p><p>flex-shrink：元素的缩小比例，默认为1，如果等于0，即使空间不足也不会缩小。</p><p>flex-basis：分配具体空间前元素占据的主轴空间，默认取决于元素原本大小。空间不足或“空余且flex-grow大于0”，都会按flex-basis比例分配空间。</p><p>flex：flex-grow、flex-shrink、flex-basis的简写，默认为“0 1 auto”。</p><h2 id="gradient" tabindex="-1">gradient <a class="header-anchor" href="#gradient" aria-label="Permalink to &quot;gradient&quot;">​</a></h2><h3 id="linear-gradient" tabindex="-1">linear-gradient <a class="header-anchor" href="#linear-gradient" aria-label="Permalink to &quot;linear-gradient&quot;">​</a></h3><p>CSS函数，用于表现两种或多种颜色的渐变，第一个参数是可选的角度，之后的参数是颜色和位置。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/* 渐变轴为45度，从蓝色渐变到红色 */</span></span>
<span class="line"><span style="color:#F286C4;">linear-gradient(45deg</span><span style="color:#F6F6F4;">,</span><span style="color:#F286C4;"> blue</span><span style="color:#F6F6F4;">,</span><span style="color:#F286C4;"> red</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">/* 从右下到左上、从蓝色渐变到红色 */</span></span>
<span class="line"><span style="color:#F286C4;">linear-gradient(to left top</span><span style="color:#F6F6F4;">,</span><span style="color:#F286C4;"> blue</span><span style="color:#F6F6F4;">,</span><span style="color:#F286C4;"> red</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">/* 从下到上，从蓝色开始渐变、到高度40%位置是绿色渐变开始、最后以红色结束 */</span></span>
<span class="line"><span style="color:#F286C4;">linear-gradient(0deg</span><span style="color:#F6F6F4;">,</span><span style="color:#F286C4;"> blue</span><span style="color:#F6F6F4;">,</span><span style="color:#F286C4;"> green 40%</span><span style="color:#F6F6F4;">,</span><span style="color:#F286C4;"> red</span><span style="color:#F6F6F4;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* 渐变轴为45度，从蓝色渐变到红色 */</span></span>
<span class="line"><span style="color:#24292E;">linear-gradient(45deg, blue, red);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 从右下到左上、从蓝色渐变到红色 */</span></span>
<span class="line"><span style="color:#24292E;">linear-gradient(to left top, blue, red);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 从下到上，从蓝色开始渐变、到高度40%位置是绿色渐变开始、最后以红色结束 */</span></span>
<span class="line"><span style="color:#24292E;">linear-gradient(0deg, blue, green 40%, red);</span></span></code></pre></div><p><img src="https://developer.mozilla.org/files/3537/linear-gradient.png" alt="关于百分比的位置"></p><h3 id="radial-gradient" tabindex="-1">radial-gradient <a class="header-anchor" href="#radial-gradient" aria-label="Permalink to &quot;radial-gradient&quot;">​</a></h3><p>径向渐变，也就是说有圆心，暂时不介绍。</p><h2 id="border-1" tabindex="-1">border <a class="header-anchor" href="#border-1" aria-label="Permalink to &quot;border&quot;">​</a></h2><p>在CSS的世界里，border是很多奇淫技巧的基础。</p><p>你可能以为border是这样的：</p><p><img src="https://www.guohere.com/wp-content/uploads/2019/09/image-20190906155405061.png" alt="image-20190906155405061"></p><p>但其实，它是这样的：</p><p><img src="https://www.guohere.com/wp-content/uploads/2019/09/image-20190906155554795.png" alt="image-20190906155554795"></p><p>如果没有content，它是这样的：</p><p><img src="https://www.guohere.com/wp-content/uploads/2019/09/image-20190906155659150.png" alt="image-20190906155659150"></p><p>因此，border可以用于制造三角形，如果结合borader-radius，还可以变成扇形呢（原谅我用百度的搜索框做实验）：</p><p><img src="https://www.guohere.com/wp-content/uploads/2019/09/image-20190906160405402.png" alt="image-20190906160405402"></p><p>border-width：决定边框的宽度</p><p>border-color：决定边框的颜色</p><p>border-style：决定边框的风格，一般用solid（即实线）</p><p>border-radius：决定元素（）的四个角的弧长（四个角是以border-radius的值为半径的圆的四分之一，如下图，灰色部分被舍弃）。因此，border-radius是最大值是元素总长度/宽度的一半（超过的话会影响其他角，而实际上也无法超过该值）。</p><p><img src="https://www.guohere.com/wp-content/uploads/2019/09/WX20190906-165936@2x.png" alt="border-radius"></p><p>border：同时设置以上属性</p><p>border-(left/right/top/bottom)：设置一条边的color、style、width</p><p>border-(left/right/top/bottom)-(width/color/style)：设置某条边的某个属性</p><p>border-(top/bottom)-(left-right)-radius：设置某个角的radius</p><h2 id="overflow" tabindex="-1">overflow <a class="header-anchor" href="#overflow" aria-label="Permalink to &quot;overflow&quot;">​</a></h2><p>定义如何处理超出元素边界的内容。overflow接受一个值或两个值（按y、x的顺序），也可以单独设置overflow-y与overflow-x。</p><p>它允许的取值包括visible、hidden、scroll、auto，分别对应允许超出边界、隐藏超出边界的部分、用滚动的方式展示内容、超出边界时用滚动的方式展示内容（未超出边界时会建立BFC）。</p><h2 id="bfc" tabindex="-1">BFC <a class="header-anchor" href="#bfc" aria-label="Permalink to &quot;BFC&quot;">​</a></h2><p>Block Formatted Context，块格式化上下文。</p><h2 id="filter" tabindex="-1">filter <a class="header-anchor" href="#filter" aria-label="Permalink to &quot;filter&quot;">​</a></h2><h2 id="transform" tabindex="-1">transform <a class="header-anchor" href="#transform" aria-label="Permalink to &quot;transform&quot;">​</a></h2><p>改变元素的展示形态，但在文档流占用的空间不变。</p><h3 id="backface-visibility" tabindex="-1">backface-visibility <a class="header-anchor" href="#backface-visibility" aria-label="Permalink to &quot;backface-visibility&quot;">​</a></h3><p>定义能否看到元素的背面，因为transform支持旋转，默认情况下，元素的背面是可见的。</p><h2 id="animation" tabindex="-1">animation <a class="header-anchor" href="#animation" aria-label="Permalink to &quot;animation&quot;">​</a></h2><p>animation-name：播放的动画名</p><p>animation-duration：定义动画持续时间，如0.3s，默认值为0</p><p>animation-delay：定义动画的延迟播放时间</p><p>animation-fill-mode：当动画不播放时应用的样式，可选forwards（应用动画结束时的属性）、backwards（应用第一个关键帧的属性）</p><p>animation-direction：播放方向。可选normal、reverse（反向）、alternate（奇数次正向播放，偶数次反向播放）、alternate-reverse（与alternate相反）</p><p>animation：同时定义多个相关属性</p><p>animation-play-state：<code>running/paused</code>用于在播放过程中暂停</p><p>animation-timing-function：即动画播放的进度-时间函数（速度曲线），默认ease（慢-快-慢），常用linear（线性，50%的关键帧对应一半时间）。</p><p>animation-iteration-count：动画播放的次数，默认1次，可设置infinite（无限）。</p><h3 id="一个动画示例" tabindex="-1">一个动画示例 <a class="header-anchor" href="#一个动画示例" aria-label="Permalink to &quot;一个动画示例&quot;">​</a></h3><p>接下来看看如何定义和使用一个动画。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/*定义一个动画，由几个关键帧组成*/</span></span>
<span class="line"><span style="color:#F286C4;">@keyframes</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">hidden</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  0%{</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;">opacity</span><span style="color:#F286C4;">:</span><span style="color:#BF9EEE;">1</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  100%{</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;">opacity</span><span style="color:#F286C4;">:</span><span style="color:#BF9EEE;">0</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#62E884;font-style:italic;">.hide</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">animation-name</span><span style="color:#F286C4;">:</span><span style="color:#BF9EEE;">hide</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">animation-duration</span><span style="color:#F286C4;">:</span><span style="color:#BF9EEE;">1</span><span style="color:#F286C4;">s</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">animation-fill-mode</span><span style="color:#F286C4;">:</span><span style="color:#BF9EEE;">forwards</span><span style="color:#F6F6F4;">;</span><span style="color:#7B7F8B;">/*动画结束后元素会一直隐藏*/</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/*定义一个动画，由几个关键帧组成*/</span></span>
<span class="line"><span style="color:#D73A49;">@keyframes</span><span style="color:#24292E;"> </span><span style="color:#E36209;">hidden</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">0%</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">opacity</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">100%</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">opacity</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.hide</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation-name</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">hide</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation-duration</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">s</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">animation-fill-mode</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">forwards</span><span style="color:#24292E;">;</span><span style="color:#6A737D;">/*动画结束后元素会一直隐藏*/</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="transition" tabindex="-1">transition <a class="header-anchor" href="#transition" aria-label="Permalink to &quot;transition&quot;">​</a></h2><h2 id="font" tabindex="-1">font <a class="header-anchor" href="#font" aria-label="Permalink to &quot;font&quot;">​</a></h2><h3 id="font-family" tabindex="-1">font-family <a class="header-anchor" href="#font-family" aria-label="Permalink to &quot;font-family&quot;">​</a></h3><p>定义用到的字体。</p><p>ElementUI官方提供了一组font-family的取值，如果你单纯希望字体不至于太难看，可以考虑像他们那样做。</p><p><code>font-family: &quot;Helvetica Neue&quot;,Helvetica,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;微软雅黑&quot;,Arial,sans-serif;</code></p><h3 id="font-size" tabindex="-1">font-size <a class="header-anchor" href="#font-size" aria-label="Permalink to &quot;font-size&quot;">​</a></h3><p>文字大小，是em的单位取值。</p><h3 id="font-weight" tabindex="-1">font-weight <a class="header-anchor" href="#font-weight" aria-label="Permalink to &quot;font-weight&quot;">​</a></h3><p>设定文字粗细，可以设置如300、400的数值，也可以设定bold、bolder等。</p><h3 id="line-height-1" tabindex="-1">line-height <a class="header-anchor" href="#line-height-1" aria-label="Permalink to &quot;line-height&quot;">​</a></h3><p>行高，设置后字体默认垂直居中。</p><h2 id="text" tabindex="-1">text <a class="header-anchor" href="#text" aria-label="Permalink to &quot;text&quot;">​</a></h2><h3 id="text-align" tabindex="-1">text-align <a class="header-anchor" href="#text-align" aria-label="Permalink to &quot;text-align&quot;">​</a></h3><p><code>left|center|right</code></p><p>设定文本对齐方式，包括left、center、right。</p><h3 id="text-indent" tabindex="-1">text-indent <a class="header-anchor" href="#text-indent" aria-label="Permalink to &quot;text-indent&quot;">​</a></h3><p><code>0px</code></p><p>首行缩进，可以设置任意长度。</p><h3 id="text-decoration" tabindex="-1">text-decoration <a class="header-anchor" href="#text-decoration" aria-label="Permalink to &quot;text-decoration&quot;">​</a></h3><p>设定文本的装饰（比如下划线、删除线）。包括装饰的种类（underline、line-through等），颜色与样式（solid、dotted等）。</p><h3 id="text-transform" tabindex="-1">text-transform <a class="header-anchor" href="#text-transform" aria-label="Permalink to &quot;text-transform&quot;">​</a></h3><p><code>capitalize|uppercase|lowercase|none</code></p><p>定义大小写，包括单词首字母大写，全大写，全小写。</p><h3 id="word-spacing" tabindex="-1">word-spacing <a class="header-anchor" href="#word-spacing" aria-label="Permalink to &quot;word-spacing&quot;">​</a></h3><p><code>0px</code></p><p>单词与tag间的间隔。默认取值normal，取决于字体和浏览器，但你可以设置成任何大小（如0.3em）。</p><h3 id="letter-spacing" tabindex="-1">letter-spacing <a class="header-anchor" href="#letter-spacing" aria-label="Permalink to &quot;letter-spacing&quot;">​</a></h3><p><code>0px</code></p><p>字母间距。</p><h3 id="word-break" tabindex="-1">word-break <a class="header-anchor" href="#word-break" aria-label="Permalink to &quot;word-break&quot;">​</a></h3><p><code>normal|break-all|keep-all</code></p><p>定义单词内换行，对于中日韩语言则是定义句内换行。包括normal、break-all、keep-all。normal即英文等语言不换行，中日韩语言换行；break-all则全部换行；keep-all全部不换行。</p><h3 id="word-wrap-overflow-wrap" tabindex="-1">word-wrap/overflow-wrap <a class="header-anchor" href="#word-wrap-overflow-wrap" aria-label="Permalink to &quot;word-wrap/overflow-wrap&quot;">​</a></h3><p><code>normal|break-word</code></p><p>和word-break不同，仅当单词过长以至于一整排都放不下的时候适用。包括normal、break-word。normal即只在空格时打断，break-word会在任何地方断开单词。</p><p>还有一个值叫anywhere，break-word与anywhere的区别体现在和anywhere在计算min-content时考虑了单词折行，break-word不考虑。其实你<strong>不用了解</strong>，因为<strong>anywhere</strong>还在working draft阶段，现阶段也没有浏览器支持。</p><h3 id="white-space" tabindex="-1">white-space <a class="header-anchor" href="#white-space" aria-label="Permalink to &quot;white-space&quot;">​</a></h3><p><code>normal|nowrap|pre|pre-wrap|pre-line</code></p><p>决定如何处理元素内的空白区间。相比word-break与overflow-wrap定义单词内部换行，white-space定义文本如何排布（html代码中的排布与最终显示的排布间的关系）。normal即默认排布（受容器宽度限制，会自动换行，换行符无效，<code>&lt;br&gt;</code>有效，连续的空格被压缩），nowrap不会换行，pre即保留原有的换行（与html代码中原文一致，只有遇到换行符和<code>&lt;br&gt;</code>才换行，不受容器宽度限制，连续的空格也不会被压缩），pre-wrap保留原格式的同时也受容器宽度限制，pre-line不仅受容器宽度限制，连续空格也被压缩，但换行得到保留。</p><table><thead><tr><th>Value</th><th><strong>New lines</strong></th><th><strong>Spaces and tabs</strong></th><th><strong>Text wrapping</strong></th><th><strong>End-of-line spaces</strong></th></tr></thead><tbody><tr><td><code>normal</code></td><td>Collapse</td><td>Collapse</td><td>Wrap</td><td>Remove</td></tr><tr><td><code>nowrap</code></td><td>Collapse</td><td>Collapse</td><td>No wrap</td><td>Remove</td></tr><tr><td><code>pre</code></td><td>Preserve</td><td>Preserve</td><td>No wrap</td><td>Preserve</td></tr><tr><td><code>pre-wrap</code></td><td>Preserve</td><td>Preserve</td><td>Wrap</td><td>Hang</td></tr><tr><td><code>pre-line</code></td><td>Preserve</td><td>Collapse</td><td>Wrap</td><td>Remove</td></tr><tr><td><code>break-spaces</code></td><td>Preserve</td><td>Collapse</td><td>Wrap</td><td>Wrap</td></tr></tbody></table><h2 id="z-index" tabindex="-1">z-index <a class="header-anchor" href="#z-index" aria-label="Permalink to &quot;z-index&quot;">​</a></h2><p>z-index使元素可以自定义遮盖的层级，需要注意的是，如果父元素设定了z-index，子元素的z-index效果受父元素限制（也保证了层级不会太错乱）。以及，z-index只对已定位元素有效（需要设置position为非satic）。</p><h2 id="float" tabindex="-1">float <a class="header-anchor" href="#float" aria-label="Permalink to &quot;float&quot;">​</a></h2><p>经典的布局，原用于处理图片与文字混排，有2个取值：left、right。分别决定元素排在左边、右边，被float的元素会脱离原有的文档流，它的位置可能不会变，但它原来所占的空间会被下一个元素利用，元素可能会重叠。</p><h3 id="clear" tabindex="-1">clear <a class="header-anchor" href="#clear" aria-label="Permalink to &quot;clear&quot;">​</a></h3><p>取值有none、left、right、both，默认none允许浮动，left禁止左浮动，right禁止右浮动，both禁止浮动。</p><p>clear用于排版多个浮动元素，当两个连续的元素都浮动（会重叠），又想占两行的空间，那么在第二个元素上同时设置float和clear，第二个元素会位于第一个元素下面。</p><h2 id="css逻辑属性" tabindex="-1">CSS逻辑属性 <a class="header-anchor" href="#css逻辑属性" aria-label="Permalink to &quot;CSS逻辑属性&quot;">​</a></h2><p>逻辑属性意味着，属性的具体表现还被其他属性影响着，比如设置<code>direction:rtl</code>能让<code>margin-inline-start</code>体现为<code>margin-right</code>，而常规情况下<code>margin-inline-start</code>表现为<code>margin-left</code>。</p><p>需要注意，inline和block并不指inline元素和block元素，而是指这两种元素所代表的方向。当文档流从垂直变为水平，inline也可以指上下方向。</p><h3 id="writing-mode" tabindex="-1">writing-mode <a class="header-anchor" href="#writing-mode" aria-label="Permalink to &quot;writing-mode&quot;">​</a></h3><p>它不是逻辑属性，但它可以改变排版方向，从而影响逻辑属性。</p><h3 id="direction" tabindex="-1">direction <a class="header-anchor" href="#direction" aria-label="Permalink to &quot;direction&quot;">​</a></h3><p>它也可以改变排版方向。</p><h3 id="text-orientation" tabindex="-1">text-orientation <a class="header-anchor" href="#text-orientation" aria-label="Permalink to &quot;text-orientation&quot;">​</a></h3><p>较新的CSS属性，它也可以改变排版方向。</p><h3 id="margin-1" tabindex="-1">margin <a class="header-anchor" href="#margin-1" aria-label="Permalink to &quot;margin&quot;">​</a></h3><h4 id="margin-inline" tabindex="-1">margin-inline <a class="header-anchor" href="#margin-inline" aria-label="Permalink to &quot;margin-inline&quot;">​</a></h4><p>以下两属性的简写，对应margin-left/right。</p><h4 id="margin-inline-start" tabindex="-1">margin-inline-start <a class="header-anchor" href="#margin-inline-start" aria-label="Permalink to &quot;margin-inline-start&quot;">​</a></h4><h4 id="margin-inline-end" tabindex="-1">margin-inline-end <a class="header-anchor" href="#margin-inline-end" aria-label="Permalink to &quot;margin-inline-end&quot;">​</a></h4><h4 id="margin-block" tabindex="-1">margin-block <a class="header-anchor" href="#margin-block" aria-label="Permalink to &quot;margin-block&quot;">​</a></h4><p>以下两属性的简写，对应margin-top/bottom。</p><h4 id="margin-block-start" tabindex="-1">margin-block-start <a class="header-anchor" href="#margin-block-start" aria-label="Permalink to &quot;margin-block-start&quot;">​</a></h4><h4 id="margin-block-end" tabindex="-1">margin-block-end <a class="header-anchor" href="#margin-block-end" aria-label="Permalink to &quot;margin-block-end&quot;">​</a></h4><h3 id="border-2" tabindex="-1">border <a class="header-anchor" href="#border-2" aria-label="Permalink to &quot;border&quot;">​</a></h3><h3 id="inset" tabindex="-1">inset <a class="header-anchor" href="#inset" aria-label="Permalink to &quot;inset&quot;">​</a></h3><h3 id="padding-1" tabindex="-1">padding <a class="header-anchor" href="#padding-1" aria-label="Permalink to &quot;padding&quot;">​</a></h3><h3 id="block" tabindex="-1">block <a class="header-anchor" href="#block" aria-label="Permalink to &quot;block&quot;">​</a></h3><h3 id="inline" tabindex="-1">inline <a class="header-anchor" href="#inline" aria-label="Permalink to &quot;inline&quot;">​</a></h3><h3 id="text-1" tabindex="-1">text <a class="header-anchor" href="#text-1" aria-label="Permalink to &quot;text&quot;">​</a></h3><h4 id="text-align-start" tabindex="-1">text-align-start <a class="header-anchor" href="#text-align-start" aria-label="Permalink to &quot;text-align-start&quot;">​</a></h4><h4 id="text-align-end" tabindex="-1">text-align-end <a class="header-anchor" href="#text-align-end" aria-label="Permalink to &quot;text-align-end&quot;">​</a></h4><h2 id="媒体断点查询" tabindex="-1">媒体断点查询 <a class="header-anchor" href="#媒体断点查询" aria-label="Permalink to &quot;媒体断点查询&quot;">​</a></h2><h2 id="webkit-ms-moz" tabindex="-1">-webkit- -ms- -moz- <a class="header-anchor" href="#webkit-ms-moz" aria-label="Permalink to &quot;-webkit- -ms- -moz-&quot;">​</a></h2><p>CSS方言，某种类型的浏览器会自己支持一部分特性。</p><h2 id="—webkit—appearance" tabindex="-1">—webkit—appearance <a class="header-anchor" href="#—webkit—appearance" aria-label="Permalink to &quot;—webkit—appearance&quot;">​</a></h2><h2 id="pointer-events" tabindex="-1">pointer-events <a class="header-anchor" href="#pointer-events" aria-label="Permalink to &quot;pointer-events&quot;">​</a></h2><p>神级属性，它的大部分取值与svg有关，但只需要设定none即可使元素忽略任何点击事件，点击会穿透到视图的下层。比如可以在按钮上覆盖一个遮罩层，而按钮仍然能响应点击。（本来要在js实现的功能只需要这个属性就可以替代）</p><h2 id="单位" tabindex="-1">单位 <a class="header-anchor" href="#单位" aria-label="Permalink to &quot;单位&quot;">​</a></h2><p>长度单位包括%（100%=父元素该项的值）、px（像素）、em（当前字体尺寸）、rem（根元素的字体尺寸）、vh（1%可视区高度）、vw（1%可视区宽度）以及in、cm、mm、ex、pt、pc等。在有些小程序中出现了自适应设备放大比率的rpx单位，当缩放为200%，1rpx=2px。</p><p>颜色取值方法包括使用颜色名（如blue）、rgb(0,0,0)（也支持百分比）、rgba(0,0,0,50%)（也支持百分比，最后一项是透明度）、#FFFFFF（RGB，16进制数，2位一组）。</p><p>CSS还有很多其他单位，如时间（ms、s）、角度（deg、grad、rad、turn）、频率（Hz、kHz）等。</p>`,316),t=[e];function p(r,c,i,d,h,y){return s(),n("div",null,t)}const u=a(o,[["render",p]]);export{g as __pageData,u as default};
