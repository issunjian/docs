import{_ as o,o as r,c as e,V as a}from"./chunks/framework.c6d8cbec.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/springcloud/springcloud-05.md","filePath":"interview/backend/springcloud/springcloud-05.md"}'),t={name:"interview/backend/springcloud/springcloud-05.md"},n=a('<h3 id="_1、什么是spring引导的执行器" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#1%E4%BB%80%E4%B9%88%E6%98%AFspring%E5%BC%95%E5%AF%BC%E7%9A%84%E6%89%A7%E8%A1%8C%E5%99%A8" target="_blank" rel="noreferrer">1、什么是Spring引导的执行器？</a> <a class="header-anchor" href="#_1、什么是spring引导的执行器" aria-label="Permalink to &quot;[1、什么是Spring引导的执行器？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题，2021年面试题及答案汇总.md#1什么是spring引导的执行器)&quot;">​</a></h3><p>SpringBoot执行程序提供了restful Web服务，以访问生产环境中运行应用程序的当前状态。在执行器的帮助下，您可以检查各种指标并监控您的应用程序。</p><h3 id="_2、什么是持续集成-ci" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#2%E4%BB%80%E4%B9%88%E6%98%AF%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90ci" target="_blank" rel="noreferrer">2、什么是持续集成（CI）？</a> <a class="header-anchor" href="#_2、什么是持续集成-ci" aria-label="Permalink to &quot;[2、什么是持续集成（CI）？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题，2021年面试题及答案汇总.md#2什么是持续集成ci)&quot;">​</a></h3><p>持续集成（CI）是每次团队成员提交版本控制更改时自动构建和测试代码的过程。这鼓励开发人员通过在每个小任务完成后将更改合并到共享版本控制存储库来共享代码和单元测试。</p><h3 id="_3、你对springboot有什么了解" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#3%E4%BD%A0%E5%AF%B9springboot%E6%9C%89%E4%BB%80%E4%B9%88%E4%BA%86%E8%A7%A3" target="_blank" rel="noreferrer">3、你对SpringBoot有什么了解？</a> <a class="header-anchor" href="#_3、你对springboot有什么了解" aria-label="Permalink to &quot;[3、你对SpringBoot有什么了解？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题，2021年面试题及答案汇总.md#3你对springboot有什么了解)&quot;">​</a></h3><p>事实上，随着新功能的增加，弹簧变得越来越复杂。如果必须启动新的spring项目，则必须添加构建路径或添加maven依赖项，配置应用程序服务器，添加spring配置。所以一切都必须从头开始。</p><p>SpringBoot是解决这个问题的方法。使用spring boot可以避免所有样板代码和配置。因此，基本上认为自己就好像你正在烘烤蛋糕一样，春天就像制作蛋糕所需的成分一样，弹簧靴就是你手中的完整蛋糕。</p><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0816/01/img_12.png#alt=img%5C_12.png" alt=""></p><p>图10： SpringBoot的因素 – 微服务面试问题</p><h3 id="_4、ribbon和feign调用服务的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#4ribbon%E5%92%8Cfeign%E8%B0%83%E7%94%A8%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">4、Ribbon和Feign调用服务的区别</a> <a class="header-anchor" href="#_4、ribbon和feign调用服务的区别" aria-label="Permalink to &quot;[4、Ribbon和Feign调用服务的区别](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题，2021年面试题及答案汇总.md#4ribbon和feign调用服务的区别)&quot;">​</a></h3><p><strong>1、</strong> 调用方式同：Ribbon需要我们自己构建Http请求，模拟Http请求然后通过RestTemplate发给其他服务，步骤相当繁琐</p><p><strong>2、</strong> 而Feign则是在Ribbon的基础上进行了一次改进，采用接口的形式，将我们需要调用的服务方法定义成抽象方法保存在本地就可以了，不需要自己构建Http请求了，直接调用接口就行了，不过要注意，调用方法要和本地抽象方法的签名完全一致。</p><h3 id="_5、spring-cloud和springboot版本对应关系" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#5spring-cloud%E5%92%8Cspringboot%E7%89%88%E6%9C%AC%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB" target="_blank" rel="noreferrer">5、Spring Cloud和SpringBoot版本对应关系</a> <a class="header-anchor" href="#_5、spring-cloud和springboot版本对应关系" aria-label="Permalink to &quot;[5、Spring Cloud和SpringBoot版本对应关系](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题，2021年面试题及答案汇总.md#5spring-cloud和springboot版本对应关系)&quot;">​</a></h3><table><thead><tr><th>Spring Cloud Version</th><th>SpringBoot Version</th></tr></thead><tbody><tr><td>Hoxton</td><td>2.2.x</td></tr><tr><td>Greenwich</td><td>2.1.x</td></tr><tr><td>Finchley</td><td>2.0.x</td></tr><tr><td>Edgware</td><td>1.5.x</td></tr><tr><td>Dalston</td><td>1.5.x</td></tr></tbody></table><h3 id="_6、微服务有哪些特点" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#6%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9C%89%E5%93%AA%E4%BA%9B%E7%89%B9%E7%82%B9" target="_blank" rel="noreferrer">6、微服务有哪些特点？</a> <a class="header-anchor" href="#_6、微服务有哪些特点" aria-label="Permalink to &quot;[6、微服务有哪些特点？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题，2021年面试题及答案汇总.md#6微服务有哪些特点)&quot;">​</a></h3><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0816/01/img_3.png#alt=img%5C_3.png" alt=""></p><p>图3：微服务的 特点 – 微服务访谈问题</p><p>解耦 – 系统内的服务很大程度上是分离的。因此，整个应用程序可以轻松构建，更改和扩展</p><p>组件化 – 微服务被视为可以轻松更换和升级的独立组件</p><p>业务能力 – 微服务非常简单，专注于单一功能</p><p>自治 – 开发人员和团队可以彼此独立工作，从而提高速度</p><p>持续交付 – 通过软件创建，测试和批准的系统自动化，允许频繁发布软件</p><p>责任 – 微服务不关注应用程序作为项目。相反，他们将应用程序视为他们负责的产品</p><p>分散治理 – 重点是使用正确的工具来做正确的工作。这意味着没有标准化模式或任何技术模式。开发人员可以自由选择最有用的工具来解决他们的问题</p><p>敏捷 – 微服务支持敏捷开发。任何新功能都可以快速开发并再次丢弃</p><h3 id="_7、ribbon是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#7ribbon%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">7、Ribbon是什么？</a> <a class="header-anchor" href="#_7、ribbon是什么" aria-label="Permalink to &quot;[7、Ribbon是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题，2021年面试题及答案汇总.md#7ribbon是什么)&quot;">​</a></h3><p><strong>1、</strong> Ribbon是Netflix发布的开源项目，主要功能是提供客户端的软件负载均衡算法</p><p><strong>2、</strong> Ribbon客户端组件提供一系列完善的配置项，如连接超时，重试等。简单的说，就是在配置文件中列出后面所有的机器，Ribbon会自动的帮助你基于某种规则（如简单轮询，随即连接等）去连接这些机器。我们也很容易使用Ribbon实现自定义的负载均衡算法。（有点类似Nginx）</p><h3 id="_8、微服务之间是如何独立通讯的" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E6%98%AF%E5%A6%82%E4%BD%95%E7%8B%AC%E7%AB%8B%E9%80%9A%E8%AE%AF%E7%9A%84" target="_blank" rel="noreferrer">8、微服务之间是如何独立通讯的?</a> <a class="header-anchor" href="#_8、微服务之间是如何独立通讯的" aria-label="Permalink to &quot;[8、微服务之间是如何独立通讯的?](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题，2021年面试题及答案汇总.md#8微服务之间是如何独立通讯的)&quot;">​</a></h3><p><strong>1、</strong> 远程调用，比如feign调用，直接通过远程过程调用来访问别的service。 2.消息中间件</p><h3 id="_9、什么是网关" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#9%E4%BB%80%E4%B9%88%E6%98%AF%E7%BD%91%E5%85%B3" target="_blank" rel="noreferrer">9、什么是网关?</a> <a class="header-anchor" href="#_9、什么是网关" aria-label="Permalink to &quot;[9、什么是网关?](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题，2021年面试题及答案汇总.md#9什么是网关)&quot;">​</a></h3><p>网关相当于一个网络服务架构的入口，所有网络请求必须通过网关转发到具体的服务。</p><h3 id="_10、使用spring-cloud有什么优势" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#10%E4%BD%BF%E7%94%A8spring-cloud%E6%9C%89%E4%BB%80%E4%B9%88%E4%BC%98%E5%8A%BF" target="_blank" rel="noreferrer">10、使用Spring Cloud有什么优势？</a> <a class="header-anchor" href="#_10、使用spring-cloud有什么优势" aria-label="Permalink to &quot;[10、使用Spring Cloud有什么优势？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新面试题，2021年面试题及答案汇总.md#10使用spring-cloud有什么优势)&quot;">​</a></h3><p>使用SpringBoot开发分布式微服务时，我们面临以下问题</p><p><strong>1、</strong> 与分布式系统相关的复杂性-这种开销包括网络问题，延迟开销，带宽问题，安全问题。</p><p><strong>2、</strong> 服务发现-服务发现工具管理群集中的流程和服务如何查找和互相交谈。它涉及一个服务目录，在该目录中注册服务，然后能够查找并连接到该目录中的服务。</p><p><strong>3、</strong> 冗余-分布式系统中的冗余问题。</p><p><strong>4、</strong> 负载平衡 --负载平衡改善跨多个计算资源的工作负荷，诸如计算机，计算机集群，网络链路，中央处理单元，或磁盘驱动器的分布。</p><p><strong>5、</strong> 性能-问题 由于各种运营开销导致的性能问题。</p><p><strong>6、</strong> 部署复杂性-Devops技能的要求。</p><h3 id="_11、单片-soa和微服务架构有什么区别" tabindex="-1">11、单片，SOA和微服务架构有什么区别？ <a class="header-anchor" href="#_11、单片-soa和微服务架构有什么区别" aria-label="Permalink to &quot;11、单片，SOA和微服务架构有什么区别？&quot;">​</a></h3><h3 id="_12、什么是hystrix断路器-我们需要它吗" tabindex="-1">12、什么是Hystrix断路器？我们需要它吗？ <a class="header-anchor" href="#_12、什么是hystrix断路器-我们需要它吗" aria-label="Permalink to &quot;12、什么是Hystrix断路器？我们需要它吗？&quot;">​</a></h3><h3 id="_13、discoveryclient的作用" tabindex="-1">13、DiscoveryClient的作用 <a class="header-anchor" href="#_13、discoveryclient的作用" aria-label="Permalink to &quot;13、DiscoveryClient的作用&quot;">​</a></h3><h3 id="_14、微服务限流-http限流-我们使用nginx的limitzone来完成" tabindex="-1">14、微服务限流 http限流：我们使用nginx的limitzone来完成： <a class="header-anchor" href="#_14、微服务限流-http限流-我们使用nginx的limitzone来完成" aria-label="Permalink to &quot;14、微服务限流 http限流：我们使用nginx的limitzone来完成：&quot;">​</a></h3><h3 id="_15、zuul网关如何搭建集群" tabindex="-1">15、Zuul网关如何搭建集群 <a class="header-anchor" href="#_15、zuul网关如何搭建集群" aria-label="Permalink to &quot;15、Zuul网关如何搭建集群&quot;">​</a></h3><h3 id="_16、使用-springboot-开发分布式微服务时-我们面临什么问题" tabindex="-1">16、使用 SpringBoot 开发分布式微服务时，我们面临什么问题 <a class="header-anchor" href="#_16、使用-springboot-开发分布式微服务时-我们面临什么问题" aria-label="Permalink to &quot;16、使用 SpringBoot 开发分布式微服务时，我们面临什么问题&quot;">​</a></h3><h3 id="_17、如何设置服务发现" tabindex="-1">17、如何设置服务发现？ <a class="header-anchor" href="#_17、如何设置服务发现" aria-label="Permalink to &quot;17、如何设置服务发现？&quot;">​</a></h3><h3 id="_18、如何实现动态zuul网关路由转发" tabindex="-1">18、如何实现动态Zuul网关路由转发 <a class="header-anchor" href="#_18、如何实现动态zuul网关路由转发" aria-label="Permalink to &quot;18、如何实现动态Zuul网关路由转发&quot;">​</a></h3><h3 id="_19、过渡到微服务时的常见错误" tabindex="-1">19、过渡到微服务时的常见错误 <a class="header-anchor" href="#_19、过渡到微服务时的常见错误" aria-label="Permalink to &quot;19、过渡到微服务时的常见错误&quot;">​</a></h3><h3 id="_20、springcloud主要项目" tabindex="-1">20、SpringCloud主要项目 <a class="header-anchor" href="#_20、springcloud主要项目" aria-label="Permalink to &quot;20、SpringCloud主要项目&quot;">​</a></h3><h3 id="_21、常用网关框架有那些" tabindex="-1">21、常用网关框架有那些？ <a class="header-anchor" href="#_21、常用网关框架有那些" aria-label="Permalink to &quot;21、常用网关框架有那些？&quot;">​</a></h3><h3 id="_22、在微服务中-如何保护服务" tabindex="-1">22、在微服务中，如何保护服务? <a class="header-anchor" href="#_22、在微服务中-如何保护服务" aria-label="Permalink to &quot;22、在微服务中，如何保护服务?&quot;">​</a></h3><h3 id="_23、您将如何在微服务上执行安全测试" tabindex="-1">23、您将如何在微服务上执行安全测试？ <a class="header-anchor" href="#_23、您将如何在微服务上执行安全测试" aria-label="Permalink to &quot;23、您将如何在微服务上执行安全测试？&quot;">​</a></h3><h3 id="_24、docker的目的是什么" tabindex="-1">24、Docker的目的是什么？ <a class="header-anchor" href="#_24、docker的目的是什么" aria-label="Permalink to &quot;24、Docker的目的是什么？&quot;">​</a></h3><h3 id="_25、微服务的优点" tabindex="-1">25、微服务的优点 <a class="header-anchor" href="#_25、微服务的优点" aria-label="Permalink to &quot;25、微服务的优点&quot;">​</a></h3><h3 id="_26、缓存机制" tabindex="-1">26、缓存机制： <a class="header-anchor" href="#_26、缓存机制" aria-label="Permalink to &quot;26、缓存机制：&quot;">​</a></h3><h3 id="_27、如何设计一套api接口" tabindex="-1">27、如何设计一套API接口 <a class="header-anchor" href="#_27、如何设计一套api接口" aria-label="Permalink to &quot;27、如何设计一套API接口&quot;">​</a></h3><h3 id="_28、什么是微服务架构" tabindex="-1">28、什么是微服务架构 <a class="header-anchor" href="#_28、什么是微服务架构" aria-label="Permalink to &quot;28、什么是微服务架构&quot;">​</a></h3><h3 id="_29、什么是双因素身份验证" tabindex="-1">29、什么是双因素身份验证？ <a class="header-anchor" href="#_29、什么是双因素身份验证" aria-label="Permalink to &quot;29、什么是双因素身份验证？&quot;">​</a></h3><h3 id="_30、什么是领域驱动设计" tabindex="-1">30、什么是领域驱动设计？ <a class="header-anchor" href="#_30、什么是领域驱动设计" aria-label="Permalink to &quot;30、什么是领域驱动设计？&quot;">​</a></h3>',60),i=[n];function s(l,d,E,u,h,p){return r(),e("div",null,i)}const c=o(t,[["render",s]]);export{b as __pageData,c as default};
