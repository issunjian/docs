import{d as f,h as y,o as E,c as i,C as l,t as C,b as c,G as D,F as v,H as _,J as F,E as g,a as $,V as m}from"./chunks/framework.c6d8cbec.js";const j={key:0},b=23,k=f({__name:"demo1",setup(h){const e={name:"Chocolate",age:b,nationality:"China"},n=y(""),r=y(""),o=y(0),u=y(e),p=new Proxy(e,{get:(a,t)=>{n.value=`The value of ${t} is ${a[t]}`},set:(a,t,d)=>(n.value=`Changed ${t} from ${a[t]} to ${d}`,a[t]=d,!0)});function s(){n.value="",r.value="",o.value=0,e.age=b}return(a,t)=>(E(),i(v,null,[l("pre",null,C(u.value),1),l("button",{onClick:t[0]||(t[0]=d=>r.value=c(p).name)}," get name "),l("button",{onClick:t[1]||(t[1]=d=>o.value=c(p).age=18)}," set age "),l("button",{class:"gray",onClick:s}," reset "),n.value?(E(),i("p",j," log message: "+C(n.value),1)):D("",!0)],64))}}),T={key:0},x=22,B=f({__name:"demo2",setup(h){const e={name:"John Doe",age:x,nationality:"American"},n=y(""),r=y(e),o=new Proxy(e,{get:(p,s)=>{p[s]?n.value=`The value of ${s} is ${p[s]}`:n.value="Hmm.. this property doesn't seem to exist"},set:(p,s,a)=>(s==="age"&&typeof a!="number"?n.value="Sorry, you can only pass numeric values for age.":s==="name"&&a.length<2?n.value="You need to provide a valid name.":(n.value=`Changed ${s} from ${p[s]} to ${a}.`,p[s]=a),!0)});function u(){n.value="",e.age=x}return(p,s)=>(E(),i(v,null,[l("pre",null,C(r.value),1),l("button",{onClick:s[0]||(s[0]=a=>{c(o).nonExistentProperty})}," get nonExistentProperty "),l("button",{onClick:s[1]||(s[1]=a=>c(o).age=44)}," set age = 44 "),l("button",{onClick:s[2]||(s[2]=a=>c(o).name="")}," set name = '' "),l("button",{class:"gray",onClick:u}," reset "),n.value?(E(),i("p",T," log message: "+C(n.value),1)):D("",!0)],64))}}),S={key:0},A=42,P="John Doe",R=f({__name:"demo3",setup(h){const e={name:P,age:A,nationality:"American"},n=y(""),r=y(e),o=new Proxy(e,{get:(p,s)=>{n.value=`The value of ${s} is ${Reflect.get(p,s)}`},set:(p,s,a)=>(n.value=`Changed ${s} from ${p[s]} to ${a}`,Reflect.set(p,s,a))});function u(){n.value="",e.name=P,e.age=A}return(p,s)=>(E(),i(v,null,[l("pre",null,C(r.value),1),l("button",{onClick:s[0]||(s[0]=(...a)=>c(o).name&&c(o).name(...a))}," get name "),l("button",{onClick:s[1]||(s[1]=a=>c(o).age=43)}," set age = 43 "),l("button",{onClick:s[2]||(s[2]=a=>c(o).name="Chocolate")}," set name = 'Chocolate' "),l("button",{class:"gray",onClick:u}," reset "),n.value?(E(),i("p",S," log message: "+C(n.value),1)):D("",!0)],64))}}),V=l("h1",{id:"代理模式",tabindex:"-1"},[$("代理模式 "),l("a",{class:"header-anchor",href:"#代理模式","aria-label":'Permalink to "代理模式"'},"​")],-1),q=m(`<p>代理模式，就拿部门工作来说，如果我是总监，那委派需求的话，就找开发组的产品经理就好了，我不需要和开发对接，那么也就是我只需要和中间的代理对象交谈就行了。</p><h2 id="proxy-使用" tabindex="-1">proxy 使用 <a class="header-anchor" href="#proxy-使用" aria-label="Permalink to &quot;proxy 使用&quot;">​</a></h2><p>提到代理模式，一定会想到 proxy 这玩意，用法如下，比较常用的两个方式就是 <code>get</code> 和 <code>set</code> 了。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> person </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">Chocolate</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  age</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">23</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  nationality</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">China</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> personProxy </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Proxy</span><span style="color:#F6F6F4;">(person, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">get</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">obj</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">prop</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`The value of </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">prop</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> is </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">obj[prop]</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">set</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">obj</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">prop</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">value</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`Changed </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">prop</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> from </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">obj[prop]</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> to </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">value</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    obj[prop] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> value</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line highlighted"><span style="color:#F6F6F4;">personProxy.name </span></span>
<span class="line highlighted"><span style="color:#F6F6F4;">personProxy.age </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">18</span><span style="color:#F6F6F4;"> </span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">person</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&#39;Chocolate&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">23</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  nationality: </span><span style="color:#032F62;">&#39;China&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">personProxy</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(person, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`The value of \${</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">} is \${</span><span style="color:#24292E;">obj</span><span style="color:#032F62;">[</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">]</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">, </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`Changed \${</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">} from \${</span><span style="color:#24292E;">obj</span><span style="color:#032F62;">[</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">]</span><span style="color:#032F62;">} to \${</span><span style="color:#24292E;">value</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    obj[prop] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line highlighted"><span style="color:#24292E;">personProxy.name </span></span>
<span class="line highlighted"><span style="color:#24292E;">personProxy.age </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> </span></span></code></pre></div><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-label="Permalink to &quot;Demo&quot;">​</a></h2>`,5),w=m(`<h2 id="属性校验" tabindex="-1">属性校验 <a class="header-anchor" href="#属性校验" aria-label="Permalink to &quot;属性校验&quot;">​</a></h2><p>通过 <code>proxy</code> 方法，其实我们对于其中一些属性校验很有帮助，比如下面这个例子：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> person </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">John Doe</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  age</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">42</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  nationality</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">American</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> personProxy </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Proxy</span><span style="color:#F6F6F4;">(person, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">get</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">obj</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">prop</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">obj[prop])</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">Hmm.. this property doesn</span><span style="color:#F286C4;">\\&#39;</span><span style="color:#E7EE98;">t seem to exist</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">else</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`The value of </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">prop</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> is </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">obj[prop]</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">set</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">obj</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">prop</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">value</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (prop </span><span style="color:#F286C4;">===</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">age</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">typeof</span><span style="color:#F6F6F4;"> value </span><span style="color:#F286C4;">!==</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">number</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">Sorry, you can only pass numeric values for age.</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (prop </span><span style="color:#F286C4;">===</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">name</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> value.length </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">You need to provide a valid name.</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`Changed </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">prop</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> from </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">obj[prop]</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> to </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">value</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">.\`</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">      obj[prop] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> value</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">personProxy.nonExistentProperty</span></span>
<span class="line"><span style="color:#F6F6F4;">personProxy.age </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">44</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">personProxy.name </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">person</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&#39;John Doe&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">42</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  nationality: </span><span style="color:#032F62;">&#39;American&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">personProxy</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(person, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">obj[prop])</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Hmm.. this property doesn</span><span style="color:#005CC5;">\\&#39;</span><span style="color:#032F62;">t seem to exist&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`The value of \${</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">} is \${</span><span style="color:#24292E;">obj</span><span style="color:#032F62;">[</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">]</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">, </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (prop </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> value </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Sorry, you can only pass numeric values for age.&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (prop </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> value.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;You need to provide a valid name.&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`Changed \${</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">} from \${</span><span style="color:#24292E;">obj</span><span style="color:#032F62;">[</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">]</span><span style="color:#032F62;">} to \${</span><span style="color:#24292E;">value</span><span style="color:#032F62;">}.\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      obj[prop] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">personProxy.nonExistentProperty</span></span>
<span class="line"><span style="color:#24292E;">personProxy.age </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;44&#39;</span></span>
<span class="line"><span style="color:#24292E;">personProxy.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span></span></code></pre></div><h2 id="demo-1" tabindex="-1">Demo <a class="header-anchor" href="#demo-1" aria-label="Permalink to &quot;Demo&quot;">​</a></h2>`,4),N=m(`<h2 id="reflect" tabindex="-1">Reflect <a class="header-anchor" href="#reflect" aria-label="Permalink to &quot;Reflect&quot;">​</a></h2><p>在 JS 当中，有一个内置的对象，叫做 <code>Reflect</code>，它能让我们更容易操作目标对象。</p><p>上文当中，我们通过 Proxy new 了一个代理对象出来，然后通过 <code>get</code> 和 <code>set</code> 方法来访问和修改数据。</p><p>同样，我们可以通过 <code>Reflect</code> 对象来操作，如下代码所示：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> person </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">John Doe</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  age</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">42</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  nationality</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">American</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> personProxy </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Proxy</span><span style="color:#F6F6F4;">(person, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">get</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">obj</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">prop</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`The value of </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">prop</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> is </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">Reflect.</span><span style="color:#62E884;">get</span><span style="color:#F6F6F4;">(obj</span><span style="color:#E7EE98;">, </span><span style="color:#F6F6F4;">prop)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">set</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">obj</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">prop</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">value</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`Changed </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">prop</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> from </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">obj[prop]</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> to </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">value</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> Reflect.</span><span style="color:#62E884;">set</span><span style="color:#F6F6F4;">(obj, prop, value)</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">personProxy.name</span></span>
<span class="line"><span style="color:#F6F6F4;">personProxy.age </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">43</span></span>
<span class="line"><span style="color:#F6F6F4;">personProxy.name </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">Chocolate</span><span style="color:#DEE492;">&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">person</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&#39;John Doe&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">42</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  nationality: </span><span style="color:#032F62;">&#39;American&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">personProxy</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Proxy</span><span style="color:#24292E;">(person, {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`The value of \${</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">} is \${</span><span style="color:#24292E;">Reflect</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">get</span><span style="color:#032F62;">(</span><span style="color:#24292E;">obj</span><span style="color:#032F62;">, </span><span style="color:#24292E;">prop</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#E36209;">prop</span><span style="color:#24292E;">, </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`Changed \${</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">} from \${</span><span style="color:#24292E;">obj</span><span style="color:#032F62;">[</span><span style="color:#24292E;">prop</span><span style="color:#032F62;">]</span><span style="color:#032F62;">} to \${</span><span style="color:#24292E;">value</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Reflect.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(obj, prop, value)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">personProxy.name</span></span>
<span class="line"><span style="color:#24292E;">personProxy.age </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">43</span></span>
<span class="line"><span style="color:#24292E;">personProxy.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Chocolate&#39;</span></span></code></pre></div><h3 id="demo-2" tabindex="-1">Demo <a class="header-anchor" href="#demo-2" aria-label="Permalink to &quot;Demo&quot;">​</a></h3>`,6),I=m('<p>从示例代码和 Demo 中可以看到，上文我们是通过 <code>obj[prop]</code> 来获取，通过 <code>obj[prop] = value</code> 来进行 set 操作。</p><p>现在我们可以通过 <code>Reflect.get()</code> 和 <code>Reflect.set()</code> 分别来进行读取和写入操作。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>通过代理，我们能够对我们对象的行为进行控制。比如它可以帮助进行验证、格式化、通知或调试等。</p><p>但是，过度使用 Proxy 对象或对每个处理程序方法调用执行繁重的操作很容易对应用程序的性能产生负面影响。</p><blockquote><p>这里举例说明一下，虽然使用代理很方便，放到现实中，叫人跑腿拿东西也是需要支付金钱的，但过多的去使用，可以理解为会消费许多没必要的资源。</p></blockquote><p>因此，对于性能关键型代码，最好不要使用代理。</p>',7),H=JSON.parse('{"title":"代理模式","description":"","frontmatter":{},"headers":[],"relativePath":"patterns/proxy-pattern/index.md","filePath":"patterns/proxy-pattern/index.md"}'),J={name:"patterns/proxy-pattern/index.md"},Y=Object.assign(J,{setup(h){return(e,n)=>{const r=_("VideoLink"),o=_("DemoContainer");return E(),i("div",null,[V,F(r,{bvId:"BV1FM41187Rx"},{default:g(()=>[$("前端代理模式，介绍 Proxy 与 Reflect | Proxy Pattern B 站视频传送门")]),_:1}),q,F(o,{pkg:"patterns/proxy-pattern",path:"demo1.vue"},{default:g(()=>[F(k)]),_:1}),w,F(o,{pkg:"patterns/proxy-pattern",path:"demo2.vue"},{default:g(()=>[F(B)]),_:1}),N,F(o,{pkg:"patterns/proxy-pattern",path:"demo3.vue"},{default:g(()=>[F(R)]),_:1}),I])}}});export{H as __pageData,Y as default};
