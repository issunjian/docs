import{_ as s,o as a,c as n,V as l}from"./chunks/framework.c6d8cbec.js";const h=JSON.parse('{"title":"01-开篇","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/graph/从0到1实现流程图.md","filePath":"frontend/graph/从0到1实现流程图.md"}'),p={name:"frontend/graph/从0到1实现流程图.md"},o=l(`<h1 id="_01-开篇" tabindex="-1">01-开篇 <a class="header-anchor" href="#_01-开篇" aria-label="Permalink to &quot;01-开篇&quot;">​</a></h1><h3 id="开始" tabindex="-1">开始 <a class="header-anchor" href="#开始" aria-label="Permalink to &quot;开始&quot;">​</a></h3><p>一个图可以简单的解释一个复杂的思想，同样，一个流程图可以清晰的可视化展示组织、工作流等复杂层次结构。在后面的一系列文章中，将会从 0 到 1 完成一个流程图应用的开发。如果对你的工作有帮助或者你对图编辑引擎感兴趣，请静下心来读完这一系列文章，相信会有惊喜。</p><h3 id="技术选型" tabindex="-1">技术选型 <a class="header-anchor" href="#技术选型" aria-label="Permalink to &quot;技术选型&quot;">​</a></h3><p>提到绘图能力，web主要有两种实现方式：Canvas 和 SVG，我们看看这两种有什么差异：</p><table><thead><tr><th>方案</th><th>图形定制能力</th><th>上手难度</th><th>性能</th></tr></thead><tbody><tr><td>Canvas</td><td>定制图形比较复杂</td><td>较高</td><td>大数据量场景性能突出</td></tr><tr><td>SVG</td><td>基于 DOM，图形定制能力强</td><td>较低</td><td>大数据量场景性能较差</td></tr></tbody></table><p>再来看看前端社区开源解决方案：</p><h4 id="jtopo" tabindex="-1">jTopo <a class="header-anchor" href="#jtopo" aria-label="Permalink to &quot;jTopo&quot;">​</a></h4><p>简介：jTopo 是一款完全基于HTML5 Canvas的关系、拓扑图形化界面开发工具包 官网：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.jtopo.com%2F" target="_blank" rel="noreferrer">http://www.jtopo.com/</a> 优点：国产，文档简单，性能优越 缺点：没有开放源代码，2015 年已经停止更新，在 Vue/React/Angular 等现代框架中使用成本高</p><h4 id="vis-js" tabindex="-1">Vis.js <a class="header-anchor" href="#vis-js" aria-label="Permalink to &quot;Vis.js&quot;">​</a></h4><p>简介：Vis.js 是基于 HTML5 Canvas 开发的动态可视化库。该库被设计为易于使用，处理大量的动态数据 官网：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fvisjs.org%2F" target="_blank" rel="noreferrer">https://visjs.org/</a> 优点：开源免费，性能优越，功能比较丰富 缺点：英文文档，上手成本较高，节点定制能力较弱</p><h4 id="logicflow" tabindex="-1">LogicFlow <a class="header-anchor" href="#logicflow" aria-label="Permalink to &quot;LogicFlow&quot;">​</a></h4><p>简介：专注流程可视化的前端解决方案 官网：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Flogic-flow.org%2F" target="_blank" rel="noreferrer">http://logic-flow.org/</a> 优点：具备流程图应用的常用功能，扩展性强 缺点：内置连线功能较弱，定制复杂节点比较麻烦</p><h4 id="jsplumb" tabindex="-1">Jsplumb <a class="header-anchor" href="#jsplumb" aria-label="Permalink to &quot;Jsplumb&quot;">​</a></h4><p>简介：jsPlumb 是一个比较强大的绘图组件 官网：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fjsplumbtoolkit.com%2F" target="_blank" rel="noreferrer">https://jsplumbtoolkit.com/</a> 优点：功能丰富，支持各种自定义操作 缺点：分收费版和社区版，社区版功能较弱</p><h4 id="joint" tabindex="-1">Joint <a class="header-anchor" href="#joint" aria-label="Permalink to &quot;Joint&quot;">​</a></h4><p>简介：JointJS 是一个开源前端框架，支持绘制各种各样的流程图、工作流图等。Rappid 是 Joint 的商业版，提供了一些更强的插件 官网：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.jointjs.com%2F" target="_blank" rel="noreferrer">https://www.jointjs.com/</a> 优点：功能十分完善，上手比较容易 缺点：布局能力较弱，节点定制能力一般</p><h4 id="antv-g6" tabindex="-1">AntV G6 <a class="header-anchor" href="#antv-g6" aria-label="Permalink to &quot;AntV G6&quot;">​</a></h4><p>简介：G6 是一个图可视化引擎。它提供了图的绘制、布局、分析、交互、动画等图可视化的基础能力 官网：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fg6.antv.vision%2Fzh%2F" target="_blank" rel="noreferrer">https://g6.antv.vision/zh/</a> 优点：功能完备，扩展性强，性能好，支持大量布局算法 缺点：节点定制能力一般</p><h4 id="antv-x6" tabindex="-1">AntV X6 <a class="header-anchor" href="#antv-x6" aria-label="Permalink to &quot;AntV X6&quot;">​</a></h4><p>简介：X6 是 AntV 旗下的图编辑引擎，提供了一系列开箱即用的交互组件和简单易用的节点定制能力，方便我们快速搭建 DAG 图、ER 图、流程图等应用 官网：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh" target="_blank" rel="noreferrer">https://x6.antv.vision/zh</a> 优点：节点极易定制，支持 React/Vue 节点，上手成本低，支持大量布局算法 缺点：基于 SVG，性能一般</p><h3 id="最后" tabindex="-1">最后 <a class="header-anchor" href="#最后" aria-label="Permalink to &quot;最后&quot;">​</a></h3><p>图形定制能力强、上手成本低是我们需要重点考虑的地方，另外一方面流程图场景，不需要渲染大量的节点，所以 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 更适合来完成我们的流程图应用。</p><ol><li><p>源码：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6%2Ftree%2Fop-demo%2Fexamples%2Fx6-app-draw" target="_blank" rel="noreferrer">传送门</a></p></li><li><p>记得给 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 仓库加星</p></li></ol><h1 id="_02-画布篇" tabindex="-1">02-画布篇 <a class="header-anchor" href="#_02-画布篇" aria-label="Permalink to &quot;02-画布篇&quot;">​</a></h1><h3 id="开始-1" tabindex="-1">开始 <a class="header-anchor" href="#开始-1" aria-label="Permalink to &quot;开始&quot;">​</a></h3><p>下面我们开始实现流程图的画布功能，从两个方面着手，第一个是画布的样式，包括网格和背景，第二个是画布的操作，包括平移和缩放。首先来看看两个经典的流程图应用 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fapp.diagrams.net%2F" target="_blank" rel="noreferrer">Drawio</a> 和 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdemo.bpmn.io%2Fs%2Fstart" target="_blank" rel="noreferrer">BPMN editor</a>。</p><p><img src="https://upload-images.jianshu.io/upload_images/26523285-e3ed0a730c5d6861.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/26523285-8f6b07c6994ccd45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>从上图我们可以看到两种不同的画布，带滚动条的和不带滚动条的，两种类型画布都有各自的优缺点，比如带滚动条的画布可以根据滚动条位置清晰的了解当前画面处于整个画布的位置，但是滚动条在 windows 下样式不够美观。不带滚动条的画布也能实现和滚动条画布一样的无限拖拽、缩放等效果，但是如果画布上图形较分散，容易丢失视野，比较难以查找。</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 同时支持上面两种类型画布，在这里我们还是看重画布的颜值，所以选择不带滚动条的，如果需要实现带滚动条的画布，可以参考<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Ftutorial%2Fbasic%2Fscroller" target="_blank" rel="noreferrer">这里</a>。</p><h3 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-label="Permalink to &quot;实现&quot;">​</a></h3><h4 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h4><p>首先进入安装步骤，如果再 Vue/React/Angular 等项目中使用，可以使用 npm 或者 yarn 进行安装，如果使用 script 标签引入，可以使用 CDN 地址。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;"># npm</span></span>
<span class="line"><span style="color:#62E884;">$</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">npm</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@antv/x6</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">--save</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;"># yarn</span></span>
<span class="line"><span style="color:#62E884;">$</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">yarn</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">add</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@antv/x6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;"># cdn</span></span>
<span class="line"><span style="color:#7B7F8B;"># &lt;script href=&quot;https://unpkg.com/@antv/x6/dist/x6.js&quot;&gt;&lt;/script&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># npm</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@antv/x6</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># yarn</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@antv/x6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># cdn</span></span>
<span class="line"><span style="color:#6A737D;"># &lt;script href=&quot;https://unpkg.com/@antv/x6/dist/x6.js&quot;&gt;&lt;/script&gt;</span></span></code></pre></div><p>然后我们在页面上创建一个容纳画布的容器：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">id</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">container</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;container&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>接下来我们就可以初始化一个画布了：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  container</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> document.</span><span style="color:#62E884;">getElementById</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">container</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">),</span></span>
<span class="line"><span style="color:#F6F6F4;">  width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">800</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">800</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  container: document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;container&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">800</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">800</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h4 id="网格与背景" tabindex="-1">网格与背景 <a class="header-anchor" href="#网格与背景" aria-label="Permalink to &quot;网格与背景&quot;">​</a></h4><p>X6 可以在 Grpah 中全局配置网格形态与样式，例如下面配置了双线条网格，主网格尺寸为 10px * 10px，主网格线条颜色为 #E7E8EA，宽度为 1px，次网格线条颜色为 #CBCED3，宽度为 1px，次网格线条之间间隔 4 个主网格。同样可以在 Graph 中全局配置画布的背景颜色和背景图片，如果需要配置，可以参考<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Ftutorial%2Fbasic%2Fbackground" target="_blank" rel="noreferrer">官网</a>。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  grid</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    size</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    visible</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    type</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">doubleMesh</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    args</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">      {</span></span>
<span class="line"><span style="color:#F6F6F4;">        color</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#E7E8EA</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        thickness</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      },</span></span>
<span class="line"><span style="color:#F6F6F4;">      {</span></span>
<span class="line"><span style="color:#F6F6F4;">        color</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#CBCED3</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        thickness</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        factor</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      },</span></span>
<span class="line"><span style="color:#F6F6F4;">    ],</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  grid: {</span></span>
<span class="line"><span style="color:#24292E;">    size: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    visible: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    type: </span><span style="color:#032F62;">&#39;doubleMesh&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    args: [</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        color: </span><span style="color:#032F62;">&#39;#E7E8EA&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        thickness: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        color: </span><span style="color:#032F62;">&#39;#CBCED3&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        thickness: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        factor: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>画布呈现的样式如下图：</p><p><img src="https://upload-images.jianshu.io/upload_images/26523285-2a388e9c3463f19e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/902/format/webp" alt="img"></p><h4 id="平移与缩放" tabindex="-1">平移与缩放 <a class="header-anchor" href="#平移与缩放" aria-label="Permalink to &quot;平移与缩放&quot;">​</a></h4><p>画布的拖拽平移与滚轮缩放是高频操作，是画布需要具备的基本功能。首先来看拖拽平移，基本用法：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 等价于 panning: true</span></span>
<span class="line"><span style="color:#F6F6F4;">  panning</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    enabled</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 等价于 panning: true</span></span>
<span class="line"><span style="color:#24292E;">  panning: {</span></span>
<span class="line"><span style="color:#24292E;">    enabled: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>这样在按下鼠标左键，移动鼠标就可以拖拽画布，有些用户习惯用右键或者触摸板来进行画布的平移操作，X6 也是支持的,其中左键移动和右键移动有一个小小的区别：在图形上按下左键不会触发画布平移，但是右键可以。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  panning</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    enabled</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    eventTypes</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">leftMouseDown</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rightMouseDown</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">mouseWheel</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  panning: {</span></span>
<span class="line"><span style="color:#24292E;">    enabled: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    eventTypes: [</span><span style="color:#032F62;">&#39;leftMouseDown&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;rightMouseDown&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;mouseWheel&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>在 Graph 上配置 mousewheel 可以实现画布缩放功能，基本用法：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 等价于 mousewheel: true</span></span>
<span class="line"><span style="color:#F6F6F4;">  mousewheel</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    enabled</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 等价于 mousewheel: true</span></span>
<span class="line"><span style="color:#24292E;">  mousewheel: {</span></span>
<span class="line"><span style="color:#24292E;">    enabled: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>实验后发现三个问题：</p><ol><li>缩放和平移冲突，滚动滚轮或者滑动触摸板的时候，画布既会缩放，同时也会平移</li><li>画布总是按照画布中心点进行缩放，想要的是按照鼠标位置进行缩放</li><li>没法控制缩放的最小和最大级别</li></ol><p>阅读<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Ftutorial%2Fbasic%2Fmousewheel" target="_blank" rel="noreferrer">官网文档</a>后发现，这些问题 X6 都有考虑到，可以用以下方式来解决：</p><ol><li>设置修饰键 modifiers 为 ctrl，这样在触摸板上使用双指缩放或者按下 Ctrl 键再滚动鼠标才会触发画布缩放，就不会和拖拽平移冲突</li><li>设置 zoomAtMousePosition 为 true，这样画布会以鼠标位置为中心点进行缩放</li><li>设置 minScale 和 maxScale 可以控制画布可缩放的最小和最大级别</li></ol><p>最终的配置和效果如下：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 等价于 mousewheel: true</span></span>
<span class="line"><span style="color:#F6F6F4;">  mousewheel</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    enabled</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    zoomAtMousePosition</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    modifiers</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ctrl</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    minScale</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0.5</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    maxScale</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 等价于 mousewheel: true</span></span>
<span class="line"><span style="color:#24292E;">  mousewheel: {</span></span>
<span class="line"><span style="color:#24292E;">    enabled: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    zoomAtMousePosition: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    modifiers: </span><span style="color:#032F62;">&#39;ctrl&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    minScale: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    maxScale: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-b189e06087717c39.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/928/format/webp" alt="img"></p><h3 id="最后-1" tabindex="-1">最后 <a class="header-anchor" href="#最后-1" aria-label="Permalink to &quot;最后&quot;">​</a></h3><p>从上面实现的过程来看，<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 不仅有完备的功能，而且在每个功能上考虑得很细致，通过组合一些配置项就能完成基本的功能，体现了 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 开箱即用的特点。</p><ol><li>源码：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6%2Ftree%2Fop-demo%2Fexamples%2Fx6-app-draw" target="_blank" rel="noreferrer">传送门</a></li><li>记得给 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 仓库加星</li></ol><h1 id="_03-图形篇" tabindex="-1">03-图形篇 <a class="header-anchor" href="#_03-图形篇" aria-label="Permalink to &quot;03-图形篇&quot;">​</a></h1><h3 id="开始-2" tabindex="-1">开始 <a class="header-anchor" href="#开始-2" aria-label="Permalink to &quot;开始&quot;">​</a></h3><p>在流程图中我们需要通过拖拽交互往画布中添加节点，X6 不仅内置了强大的拖拽功能，还内置了很多常用的图形，接下来我们一起实现基础的流程图图形以及图形拖拽功能。</p><h3 id="实现-1" tabindex="-1">实现 <a class="header-anchor" href="#实现-1" aria-label="Permalink to &quot;实现&quot;">​</a></h3><h4 id="图形定义" tabindex="-1">图形定义 <a class="header-anchor" href="#图形定义" aria-label="Permalink to &quot;图形定义&quot;">​</a></h4><p>首先来看下一个简单的矩形节点的基础配置：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addNode</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  shape</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  x</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  y</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">80</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">40</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    body</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">red</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addNode</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  shape: </span><span style="color:#032F62;">&#39;rect&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  x: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  y: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    body: {</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;red&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-fd4f71e348eef37c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/285/format/webp" alt="img"></p><p>shape：定义图形的形状，X6 内置了 rect、circle、ellipse、polygon、polyline、image、html 等基础形状 x/y：定义图形的左上角坐标 width/height：定义图形的尺寸 看到 attrs 大家可能比较奇怪，这是什么东西？其实可以将 attrs 看做 css 样式集合，其中 body 类似于 css 选择器，body 的值是被选中元素的属性。那 body 又是哪来的呢？这里就要说的另一个重要的配置项markup，markup 表示的是图形的 DOM 结构，内置的 rect 的默认 markup 为：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">[</span></span>
<span class="line"><span style="color:#F6F6F4;">  {</span></span>
<span class="line"><span style="color:#F6F6F4;">    tagName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    selector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">body</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  {</span></span>
<span class="line"><span style="color:#F6F6F4;">    tagName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">text</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    selector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">label</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    tagName: </span><span style="color:#032F62;">&#39;rect&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    selector: </span><span style="color:#032F62;">&#39;body&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    tagName: </span><span style="color:#032F62;">&#39;text&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    selector: </span><span style="color:#032F62;">&#39;label&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><p>渲染完成后，实际生效的 DOM 为：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#EE6666;font-style:italic;text-decoration:underline;">g</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">data-cell-id</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">ca715562-8faf-4c88-a242-2b18d4ce47a6</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">data-shape</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">rect</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">class</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">x6-cell x6-node</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">transform</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">translate(100,100)</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">  &lt;</span><span style="color:#EE6666;font-style:italic;text-decoration:underline;">rect</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">fill</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">#ffffff</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">stroke</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">red</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">stroke-width</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">width</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">80</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">height</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">40</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;&lt;/</span><span style="color:#EE6666;font-style:italic;text-decoration:underline;">rect</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">  &lt;</span><span style="color:#EE6666;font-style:italic;text-decoration:underline;">text</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">font-size</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">14</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">fill</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">#000000</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">text-anchor</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">middle</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">text-vertical-anchor</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">middle</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">font-family</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Arial, helvetica, sans-serif</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">transform</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">matrix(1,0,0,1,40,20)</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;&lt;/</span><span style="color:#EE6666;font-style:italic;text-decoration:underline;">text</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#EE6666;font-style:italic;text-decoration:underline;">g</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#B31D28;font-style:italic;">g</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">data-cell-id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ca715562-8faf-4c88-a242-2b18d4ce47a6&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">data-shape</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;rect&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;x6-cell x6-node&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">transform</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;translate(100,100)&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#B31D28;font-style:italic;">rect</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;#ffffff&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stroke</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;red&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stroke-width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;2&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;80&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;40&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#B31D28;font-style:italic;">rect</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#B31D28;font-style:italic;">text</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">font-size</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;14&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;#000000&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">text-anchor</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;middle&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">text-vertical-anchor</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;middle&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">font-family</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Arial, helvetica, sans-serif&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">transform</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;matrix(1,0,0,1,40,20)&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#B31D28;font-style:italic;">text</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#B31D28;font-style:italic;">g</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>所以说一个图形是由 markup 和 attrs 来决定结构和样式，我们可以通过设置 markup 和 attrs 来定义自己业务中的图形，看下面的例子：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addNode</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  shape</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  x</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">60</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  y</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">60</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">70</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">70</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  markup</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">    {</span></span>
<span class="line"><span style="color:#F6F6F4;">      tagName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      selector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">r1</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    {</span></span>
<span class="line"><span style="color:#F6F6F4;">      tagName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">circle</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      selector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">c1</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    {</span></span>
<span class="line"><span style="color:#F6F6F4;">      tagName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">circle</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      selector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">c2</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    {</span></span>
<span class="line"><span style="color:#F6F6F4;">      tagName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">circle</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      selector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">c3</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    {</span></span>
<span class="line"><span style="color:#F6F6F4;">      tagName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">circle</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      selector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">c4</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  ],</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    r1</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">70</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">70</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#ccc</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      rx</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      ry</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    c1</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      r</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      cx</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      cy</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      fill</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#000</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    c2</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      r</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      cx</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      cy</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      fill</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#000</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    c3</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      r</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      cx</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      cy</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      fill</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#000</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    c4</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      r</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      cx</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      cy</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      fill</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#000</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addNode</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  shape: </span><span style="color:#032F62;">&#39;rect&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  x: </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  y: </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">70</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">70</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  markup: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      tagName: </span><span style="color:#032F62;">&#39;rect&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      selector: </span><span style="color:#032F62;">&#39;r1&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      tagName: </span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      selector: </span><span style="color:#032F62;">&#39;c1&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      tagName: </span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      selector: </span><span style="color:#032F62;">&#39;c2&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      tagName: </span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      selector: </span><span style="color:#032F62;">&#39;c3&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      tagName: </span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      selector: </span><span style="color:#032F62;">&#39;c4&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    r1: {</span></span>
<span class="line"><span style="color:#24292E;">      width: </span><span style="color:#005CC5;">70</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      height: </span><span style="color:#005CC5;">70</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;#ccc&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      rx: </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      ry: </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    c1: {</span></span>
<span class="line"><span style="color:#24292E;">      r: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      cx: </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      cy: </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      fill: </span><span style="color:#032F62;">&#39;#000&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    c2: {</span></span>
<span class="line"><span style="color:#24292E;">      r: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      cx: </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      cy: </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      fill: </span><span style="color:#032F62;">&#39;#000&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    c3: {</span></span>
<span class="line"><span style="color:#24292E;">      r: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      cx: </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      cy: </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      fill: </span><span style="color:#032F62;">&#39;#000&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    c4: {</span></span>
<span class="line"><span style="color:#24292E;">      r: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      cx: </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      cy: </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      fill: </span><span style="color:#032F62;">&#39;#000&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-f18f69936933835b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/326/format/webp" alt="img"></p><p>上面可以看到定义图形的时候，属性是固定写死的，在业务场景中，经常需要动态修改节点的样式，X6 中也提供了非常便利的方法：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> node </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> graph.</span><span style="color:#62E884;">addNode</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  shape</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  x</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  y</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">80</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">40</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    body</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">red</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"><span style="color:#F6F6F4;">node.</span><span style="color:#62E884;">attr</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">body/stroke</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">green</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">node.</span><span style="color:#62E884;">attr</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">body/fill</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">yellow</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> graph.</span><span style="color:#6F42C1;">addNode</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  shape: </span><span style="color:#032F62;">&#39;rect&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  x: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  y: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    body: {</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;red&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">node.</span><span style="color:#6F42C1;">attr</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;body/stroke&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;green&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">node.</span><span style="color:#6F42C1;">attr</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;body/fill&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;yellow&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>我们的图形将会变成下面这样：</p><p><img src="https://upload-images.jianshu.io/upload_images/26523285-297bc202876af065.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/325/format/webp" alt="img"></p><p>那么问题来了，如果多个图形的结构和样式相似度很高，每次定义图形都要写很多类似的代码，有没有一种方式可以将图形之间的公共属性抽象出来呢？X6 提供了很优雅的方式来解决这个问题，首先注册自定义的节点类型，在这里配置公共的属性，然后在添加节点的时候指定 shape 值为刚才注册的节点类型。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">Graph.</span><span style="color:#62E884;">registerNode</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">custom-rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  inherit</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 继承自 Shape.Rect</span></span>
<span class="line"><span style="color:#F6F6F4;">  width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">300</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 默认宽度</span></span>
<span class="line"><span style="color:#F6F6F4;">  height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">40</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 默认高度</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    body</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      rx</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 圆角矩形</span></span>
<span class="line"><span style="color:#F6F6F4;">      ry</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      strokeWidth</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      fill</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#5755a1</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#5755a1</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    label</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      fill</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#fff</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      fontSize</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">18</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      refX</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// x 轴偏移，类似 css 中的 margin-left</span></span>
<span class="line"><span style="color:#F6F6F4;">      textAnchor</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">left</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 左对齐</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addNode</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  shape</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">custom-rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  x</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  y</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  label</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rect1</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addNode</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  shape</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">custom-rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  x</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">200</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  y</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  label</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rect2</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    body</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      fill</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#ccc</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Graph.</span><span style="color:#6F42C1;">registerNode</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;custom-rect&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">  inherit: </span><span style="color:#032F62;">&#39;rect&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 继承自 Shape.Rect</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">300</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 默认宽度</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 默认高度</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    body: {</span></span>
<span class="line"><span style="color:#24292E;">      rx: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 圆角矩形</span></span>
<span class="line"><span style="color:#24292E;">      ry: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      strokeWidth: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      fill: </span><span style="color:#032F62;">&#39;#5755a1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;#5755a1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    label: {</span></span>
<span class="line"><span style="color:#24292E;">      fill: </span><span style="color:#032F62;">&#39;#fff&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      fontSize: </span><span style="color:#005CC5;">18</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      refX: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// x 轴偏移，类似 css 中的 margin-left</span></span>
<span class="line"><span style="color:#24292E;">      textAnchor: </span><span style="color:#032F62;">&#39;left&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 左对齐</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addNode</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  shape: </span><span style="color:#032F62;">&#39;custom-rect&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  x: </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  y: </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  label: </span><span style="color:#032F62;">&#39;rect1&#39;</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addNode</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  shape: </span><span style="color:#032F62;">&#39;custom-rect&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  x: </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  y: </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  label: </span><span style="color:#032F62;">&#39;rect2&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    body: {</span></span>
<span class="line"><span style="color:#24292E;">      fill: </span><span style="color:#032F62;">&#39;#ccc&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-03a8d34a4c673184.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/325/format/webp" alt="img"></p><h4 id="图形拖拽" tabindex="-1">图形拖拽 <a class="header-anchor" href="#图形拖拽" aria-label="Permalink to &quot;图形拖拽&quot;">​</a></h4><p>图形定义好了，接下来我们要实现图形拖拽功能，X6 提供了 Dnd 插件来提供基础的拖拽能力，并在 Dnd 基础上的进一步封装，提供了一个类似侧边栏的 UI 组件 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Ftutorial%2Fbasic%2Fdnd%23stencil" target="_blank" rel="noreferrer">Stencil</a>，支持分组、折叠、搜索等能力。 首先提供一个 Stencil 的容器：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">&lt;!-- stencil 容器需要设置 position:relative 的样式 --&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">id</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">stencil</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">style</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">position:relative</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- stencil 容器需要设置 position:relative 的样式 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stencil&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;position:relative&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>然后进行初始化（具体配置见<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Ftutorial%2Fbasic%2Fdnd%23stencil" target="_blank" rel="noreferrer">官网</a>）：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> stencil </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> Addon.</span><span style="color:#62E884;">Stencil</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  title</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">Flowchart</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  target</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.graph,</span></span>
<span class="line"><span style="color:#F6F6F4;">  stencilGraphWidth</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">214</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  stencilGraphHeight</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> document.body.offsetHeight </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">105</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  layoutOptions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    columns</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    columnWidth</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">48</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    rowHeight</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">30</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    marginY</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">30</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> stencilContainer </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> document.</span><span style="color:#62E884;">querySelector</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#stencil</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (stencilContainer) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  stencilContainer.</span><span style="color:#62E884;">appendChild</span><span style="color:#F6F6F4;">(stencil.container)</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">stencil</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Addon.</span><span style="color:#6F42C1;">Stencil</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  title: </span><span style="color:#032F62;">&#39;Flowchart&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  target: </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.graph,</span></span>
<span class="line"><span style="color:#24292E;">  stencilGraphWidth: </span><span style="color:#005CC5;">214</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  stencilGraphHeight: document.body.offsetHeight </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">105</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  layoutOptions: {</span></span>
<span class="line"><span style="color:#24292E;">    columns: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    columnWidth: </span><span style="color:#005CC5;">48</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    rowHeight: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    marginY: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">stencilContainer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#stencil&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (stencilContainer) {</span></span>
<span class="line"><span style="color:#24292E;">  stencilContainer.</span><span style="color:#6F42C1;">appendChild</span><span style="color:#24292E;">(stencil.container)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>然后将我们定义的图形加载到 stencil 中：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> r1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> graph.</span><span style="color:#62E884;">createNode</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  shape</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">30</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">15</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"><span style="color:#F6F6F4;">stencil.</span><span style="color:#62E884;">load</span><span style="color:#F6F6F4;">([r1])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">r1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> graph.</span><span style="color:#6F42C1;">createNode</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  shape: </span><span style="color:#032F62;">&#39;rect&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">stencil.</span><span style="color:#6F42C1;">load</span><span style="color:#24292E;">([r1])</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-cc8ff92ab9234514.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>当我们将图形拖拽到画布的时候，想将 Stencil 中的图形等比例放大。查看官网，拖拽的流程为：</p><ol><li>拖拽过程中可以在 getDragNode 中返回新的节点来自定义拖拽节点样式</li><li>拖拽结束可以在 getDropNode 中返回新的节点来自定义放置在画布中节点样式</li></ol><p>下面的代码就是将拖拽节点等比例放大 3 倍后放置到画布中：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> stencil </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> Addon.</span><span style="color:#62E884;">Stencil</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">getDropNode</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">node</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> size </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> node.</span><span style="color:#62E884;">size</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> node.</span><span style="color:#62E884;">clone</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">size</span><span style="color:#F6F6F4;">(size.width </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">, size.height </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">stencil</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Addon.</span><span style="color:#6F42C1;">Stencil</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">getDropNode</span><span style="color:#24292E;">(</span><span style="color:#E36209;">node</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">size</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> node.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> node.</span><span style="color:#6F42C1;">clone</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">(size.width </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, size.height </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>最终效果：</p><p><img src="https://upload-images.jianshu.io/upload_images/26523285-0b14caeb89fd529c.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><h3 id="最后-2" tabindex="-1">最后 <a class="header-anchor" href="#最后-2" aria-label="Permalink to &quot;最后&quot;">​</a></h3><p>X6 不仅支持上文提到的基础的 SVG 节点，还具备在节点中渲染 React、Vue 组件的能力。在实际业务场景中，如果对 SVG 不熟悉或者节点内容复杂，我们可以根据技术栈选择 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Ftutorial%2Fadvanced%2Freact" target="_blank" rel="noreferrer">React/Vue 渲染</a>，这样在节点内部，我们可以用熟悉的方式绘制各种复杂的内容，可谓为所欲为。</p><ol><li>源码：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6%2Ftree%2Fop-demo%2Fexamples%2Fx6-app-draw" target="_blank" rel="noreferrer">传送门</a></li><li>记得给 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 仓库加星</li></ol><h1 id="_04-连线篇" tabindex="-1">04-连线篇 <a class="header-anchor" href="#_04-连线篇" aria-label="Permalink to &quot;04-连线篇&quot;">​</a></h1><h3 id="开始-3" tabindex="-1">开始 <a class="header-anchor" href="#开始-3" aria-label="Permalink to &quot;开始&quot;">​</a></h3><p>连线是 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 中非常重要的一部分，<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 内置了很多实用的连线功能，也提供了优雅的扩展机制 ，这是相比于其他流程图框架占据绝对优势的地方。本文通过实现流程图的连线功能来一步步介绍 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 的连线机制。</p><h3 id="实现-2" tabindex="-1">实现 <a class="header-anchor" href="#实现-2" aria-label="Permalink to &quot;实现&quot;">​</a></h3><h4 id="图形定义-1" tabindex="-1">图形定义 <a class="header-anchor" href="#图形定义-1" aria-label="Permalink to &quot;图形定义&quot;">​</a></h4><p>X6 中连线分两种形式，代码生成的和用户手动拖拽而成，首先来看怎么通过代码建立连线：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// source 或 target 是坐标点</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addEdge</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  source</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">  target</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// source 或 target 是节点对象</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addEdge</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  source</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> sourceNode,</span></span>
<span class="line"><span style="color:#F6F6F4;">  target</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> targetNode,</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// source 或 target 是节点 ID</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addEdge</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  source</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">sourceId</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  target</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">targetId</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// source 或 target 是连接桩</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addEdge</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  source</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> { cell</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">cellId1</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, port</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">portId1</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> },</span></span>
<span class="line"><span style="color:#F6F6F4;">  target</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> { cell</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">cellId2</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, port</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">portId2</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// source 或 target 是坐标点</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addEdge</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  source: [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  target: [</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// source 或 target 是节点对象</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addEdge</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  source: sourceNode,</span></span>
<span class="line"><span style="color:#24292E;">  target: targetNode,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// source 或 target 是节点 ID</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addEdge</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  source: </span><span style="color:#032F62;">&#39;sourceId&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  target: </span><span style="color:#032F62;">&#39;targetId&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// source 或 target 是连接桩</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addEdge</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  source: { cell: </span><span style="color:#032F62;">&#39;cellId1&#39;</span><span style="color:#24292E;">, port: </span><span style="color:#032F62;">&#39;portId1&#39;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  target: { cell: </span><span style="color:#032F62;">&#39;cellId2&#39;</span><span style="color:#24292E;">, port: </span><span style="color:#032F62;">&#39;portId2&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>如果想通过手动操作来创建连线，需要有两个条件：</p><ol><li>需要从具有 magnet: true 属性的元素上才能手动拖拽出连线</li><li>需要在全局 connecting 配置中自定义 createEdge 方法</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { Graph, Shape } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@antv/x6</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  connecting</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">createEdge</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> Shape.</span><span style="color:#62E884;">Edge</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addNode</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  shape</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  x</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  y</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">80</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">40</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    body</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">red</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      magnet</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addNode</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  shape</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rect</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  x</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">400</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  y</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">80</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">40</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    body</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">red</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      magnet</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Graph, Shape } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@antv/x6&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  connecting: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">createEdge</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Shape.</span><span style="color:#6F42C1;">Edge</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addNode</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  shape: </span><span style="color:#032F62;">&#39;rect&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  x: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  y: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    body: {</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;red&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      magnet: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addNode</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  shape: </span><span style="color:#032F62;">&#39;rect&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  x: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  y: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    body: {</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;red&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      magnet: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-704745d253d3c7f1.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/974/format/webp" alt="img"></p><p>默认的连线样式并不好看，我们经常需要自己来定义连线的样式，其实连线和图形都是由 markup 和 attrs 来定义的，默认连线的 markup 为：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">[</span></span>
<span class="line"><span style="color:#F6F6F4;">  {</span></span>
<span class="line"><span style="color:#F6F6F4;">    tagName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">path</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    selector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">wrap</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    groupSelector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">lines</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      fill</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">none</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      cursor</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">pointer</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">transparent</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      strokeLinecap</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">round</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  {</span></span>
<span class="line"><span style="color:#F6F6F4;">    tagName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">path</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    selector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">line</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    groupSelector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">lines</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      fill</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">none</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      pointerEvents</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">none</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    tagName: </span><span style="color:#032F62;">&#39;path&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    selector: </span><span style="color:#032F62;">&#39;wrap&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    groupSelector: </span><span style="color:#032F62;">&#39;lines&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    attrs: {</span></span>
<span class="line"><span style="color:#24292E;">      fill: </span><span style="color:#032F62;">&#39;none&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      cursor: </span><span style="color:#032F62;">&#39;pointer&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;transparent&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      strokeLinecap: </span><span style="color:#032F62;">&#39;round&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    tagName: </span><span style="color:#032F62;">&#39;path&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    selector: </span><span style="color:#032F62;">&#39;line&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    groupSelector: </span><span style="color:#032F62;">&#39;lines&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    attrs: {</span></span>
<span class="line"><span style="color:#24292E;">      fill: </span><span style="color:#032F62;">&#39;none&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      pointerEvents: </span><span style="color:#032F62;">&#39;none&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><p>其中 line 为实际展示的连线，wrap 是为了方便响应交互的占位元素。一般场景我们不需要去自定义连线的 markup，但是我们经常需要配置 attrs 来定制连线样式：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addEdge</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  source</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">sourceId</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  target</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">targetId</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    line</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#000</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// 连线颜色</span></span>
<span class="line"><span style="color:#F6F6F4;">      strokeWidth</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,  </span><span style="color:#7B7F8B;">// 连线宽度</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addEdge</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  source: </span><span style="color:#032F62;">&#39;sourceId&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  target: </span><span style="color:#032F62;">&#39;targetId&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    line: {</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;#000&#39;</span><span style="color:#24292E;">,  </span><span style="color:#6A737D;">// 连线颜色</span></span>
<span class="line"><span style="color:#24292E;">      strokeWidth: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,  </span><span style="color:#6A737D;">// 连线宽度</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-e4e7ea218c8799ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/736/format/webp" alt="img"></p><p>连线的箭头也是非常容易配置，比如我们想将上面箭头修改为实心箭头，并且显示的修长一点儿：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addEdge</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  source</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">sourceId</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  target</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">targetId</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    line</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#000</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      strokeWidth</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      targetMarker</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">block</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">8</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addEdge</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  source: </span><span style="color:#032F62;">&#39;sourceId&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  target: </span><span style="color:#032F62;">&#39;targetId&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    line: {</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;#000&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      strokeWidth: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      targetMarker: {</span></span>
<span class="line"><span style="color:#24292E;">        name: </span><span style="color:#032F62;">&#39;block&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        width: </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        height: </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-2a6b384188096ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/974/format/webp" alt="img"></p><p>和节点类似，动态修改连线的属性方式如下：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> edge </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> graph.</span><span style="color:#62E884;">addEdge</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  source</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">sourceId</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  target</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">targetId</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    line</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#000</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      strokeWidth</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">edge.</span><span style="color:#62E884;">attr</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">line/stroke</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#ccc</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">edge</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> graph.</span><span style="color:#6F42C1;">addEdge</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  source: </span><span style="color:#032F62;">&#39;sourceId&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  target: </span><span style="color:#032F62;">&#39;targetId&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    line: {</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;#000&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      strokeWidth: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">edge.</span><span style="color:#6F42C1;">attr</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;line/stroke&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;#ccc&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>同样，连线也提供了注册自定义连线的方式来解决重复定义问题：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">Graph.</span><span style="color:#62E884;">registerEdge</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">custom-edge</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  inherit</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">edge</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    line</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      strokeWidth</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#5755a1</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      targetMarker</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">path</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        d</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">M5.5,15.499,15.8,21.447,15.8,15.846,25.5,21.447,25.5,9.552,15.8,15.152,15.8,9.552z</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addEdge</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  shape</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">custom-edge</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  source</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">  target</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">300</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addEdge</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  shape</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">custom-edge</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  source</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">150</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">  target</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">300</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">150</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    line</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#31d0c6</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Graph.</span><span style="color:#6F42C1;">registerEdge</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;custom-edge&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">  inherit: </span><span style="color:#032F62;">&#39;edge&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    line: {</span></span>
<span class="line"><span style="color:#24292E;">      strokeWidth: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;#5755a1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      targetMarker: {</span></span>
<span class="line"><span style="color:#24292E;">        name: </span><span style="color:#032F62;">&#39;path&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        d: </span><span style="color:#032F62;">&#39;M5.5,15.499,15.8,21.447,15.8,15.846,25.5,21.447,25.5,9.552,15.8,15.152,15.8,9.552z&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addEdge</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  shape: </span><span style="color:#032F62;">&#39;custom-edge&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  source: [</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  target: [</span><span style="color:#005CC5;">300</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addEdge</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  shape: </span><span style="color:#032F62;">&#39;custom-edge&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  source: [</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">150</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  target: [</span><span style="color:#005CC5;">300</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">150</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  attrs: {</span></span>
<span class="line"><span style="color:#24292E;">    line: {</span></span>
<span class="line"><span style="color:#24292E;">      stroke: </span><span style="color:#032F62;">&#39;#31d0c6&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-001a8c7e9d69270e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/734/format/webp" alt="img"></p><h4 id="路由和连接器" tabindex="-1">路由和连接器 <a class="header-anchor" href="#路由和连接器" aria-label="Permalink to &quot;路由和连接器&quot;">​</a></h4><p>在每一种图场景中，连线形态有所不同，比如流程图和思维导图的连线样式：</p><p><img src="https://upload-images.jianshu.io/upload_images/26523285-1721b192354e10e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/954/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/26523285-682d8be0ef35613c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1028/format/webp" alt="img"></p><p>流程图的连线是横平竖直的，思维导图的连线是一种树状，X6 提供了路由和连接器两个概念来实现不同形态的连线。路由就是在原有连线基础上增加一些固定点，让连线符合某种规则，比如 orth 路由，增加固定点后，边的每一条线段都是水平或垂直的正交线段。连接器就是将连线所有点经过一定规则加工后，产生一定形状的连线，比如 smooth 连接器，是用三次贝塞尔曲线线连接起点、路由点和终点。</p><p>在我们的流程图中，需要横平竖直的连线，并且能避开重合的图形，所以选择 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Fapi%2Fregistry%2Frouter%23manhattan" target="_blank" rel="noreferrer">manhattan</a> 路由，然后连线的拐角处需要平滑处理，这里选择 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Fapi%2Fregistry%2Fconnector%23rounded" target="_blank" rel="noreferrer">rounded</a> 连接器。路由和连接器都可以在 connecting 配置中全局配置（对所有连线有效），也可以在一条连线中单独配置：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 全局配置</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  connecting</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    router</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">manhattan</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    connector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rounded</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      args</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        radius</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">8</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// 单独针对一条边配置</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addEdge</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  source</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">sourceId</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  target</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">targetId</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  router</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">manhattan</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  connector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rounded</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    args</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      radius</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">8</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 全局配置</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  connecting: {</span></span>
<span class="line"><span style="color:#24292E;">    router: </span><span style="color:#032F62;">&#39;manhattan&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    connector: {</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;rounded&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      args: {</span></span>
<span class="line"><span style="color:#24292E;">        radius: </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 单独针对一条边配置</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addEdge</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  source: </span><span style="color:#032F62;">&#39;sourceId&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  target: </span><span style="color:#032F62;">&#39;targetId&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  router: </span><span style="color:#032F62;">&#39;manhattan&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  connector: {</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#032F62;">&#39;rounded&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    args: {</span></span>
<span class="line"><span style="color:#24292E;">      radius: </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-f9bacc82209e6af5.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1050/format/webp" alt="img"></p><h4 id="起点和终点" tabindex="-1">起点和终点 <a class="header-anchor" href="#起点和终点" aria-label="Permalink to &quot;起点和终点&quot;">​</a></h4><p>连线的起点和终点是由 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Fapi%2Fregistry%2Fnode-anchor" target="_blank" rel="noreferrer">NodeAnchor</a> 和 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Fapi%2Fregistry%2Fconnection-point" target="_blank" rel="noreferrer">ConnectionPoint</a> 共同确定。</p><ol><li>起点：从第一个路径点或目标节点的中心（没有路径点时）画一条参考线到源节点的锚点，然后根据 connectionPoint 指定的交点计算方法，计算参考线与图形的交点，该交点就是边的起点。</li><li>终点：从最后一个路径点或源节点的中心（没有路径点时）画一条参考线到目标节点的锚点，然后根据 connectionPoint 指定的交点计算方法，计算参考线与图形的交点，该交点就是边的终点。</li></ol><p>上面的描述可能比较难以理解，可以看下面的例子，图形 1 和 图形 2 的 NodeAnchor 默认在图形中心，ConnectionPoint 默认是 boundary，也就是图形边框，从锚点 1 拉出一条线来连接到锚点 2，这条线与图形边框的交点就是连线的起点和终点。</p><p><img src="https://upload-images.jianshu.io/upload_images/26523285-5103a835dda53f0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/918/format/webp" alt="img"></p><p>经常会遇到这种情况，起点和终点在连接桩的中心，那么 NodeAnchor 和 ConnectionPoint 该怎么设置呢？</p><p><img src="https://upload-images.jianshu.io/upload_images/26523285-8bd874b118640d25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/880/format/webp" alt="img"></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 锚点在连接桩的中心，连接点是锚点本身</span></span>
<span class="line"><span style="color:#F6F6F4;">  connecting</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    anchor</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">center</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    connectionPoint</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">anchor</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 锚点在连接桩的中心，连接点是锚点本身</span></span>
<span class="line"><span style="color:#24292E;">  connecting: {</span></span>
<span class="line"><span style="color:#24292E;">    anchor: </span><span style="color:#032F62;">&#39;center&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    connectionPoint: </span><span style="color:#032F62;">&#39;anchor&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h4 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">​</a></h4><p>工具是渲染在节点/边上的小部件，用于增强节点/边的交互能力，现在我们需要在连线上增加一个线段工具，在边的每条线段的中心渲染一个工具条，可以拖动工具条调整线段两端的路径点的位置。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addEdge</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  tools</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">    {</span></span>
<span class="line"><span style="color:#F6F6F4;">      name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">segments</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      args</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">          fill</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#459CDB</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  ]</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addEdge</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  tools: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;segments&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      args: {</span></span>
<span class="line"><span style="color:#24292E;">        attrs: {</span></span>
<span class="line"><span style="color:#24292E;">          fill: </span><span style="color:#032F62;">&#39;#459CDB&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-2d23540f2a446487.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1050/format/webp" alt="img"></p><h3 id="最后-3" tabindex="-1">最后 <a class="header-anchor" href="#最后-3" aria-label="Permalink to &quot;最后&quot;">​</a></h3><p>连线是 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 的核心功能之一，通过本文可以了解到连线的基础用法，我们可以完成大部分场景下连线的配置，在一些复杂场景下，还需要在连线上定制标签的需求，可以参考 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Ftutorial%2Fintermediate%2Fedge-labels" target="_blank" rel="noreferrer">edge-label</a>。</p><ol><li>源码：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6%2Ftree%2Fop-demo%2Fexamples%2Fx6-app-draw" target="_blank" rel="noreferrer">传送门</a></li><li>记得给 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 仓库加星</li></ol><h1 id="_05-连接桩篇" tabindex="-1">05-连接桩篇 <a class="header-anchor" href="#_05-连接桩篇" aria-label="Permalink to &quot;05-连接桩篇&quot;">​</a></h1><h3 id="开始-4" tabindex="-1">开始 <a class="header-anchor" href="#开始-4" aria-label="Permalink to &quot;开始&quot;">​</a></h3><p>很多图形都有连接桩的概念，连接桩是节点上固定的点，常用于连线。连接桩的使用方式非常灵活，本文只介绍最佳实践。</p><h3 id="实现-3" tabindex="-1">实现 <a class="header-anchor" href="#实现-3" aria-label="Permalink to &quot;实现&quot;">​</a></h3><h4 id="连接桩定义" tabindex="-1">连接桩定义 <a class="header-anchor" href="#连接桩定义" aria-label="Permalink to &quot;连接桩定义&quot;">​</a></h4><p>首先来看一个节点四周中心各一个连接桩的节点配置：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addNode</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  ports</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    groups</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      group1</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        position</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">top</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">          circle</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">            stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#D06269</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            strokeWidth</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            r</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            magnet</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">          }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">      },</span></span>
<span class="line"><span style="color:#F6F6F4;">      group2</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        position</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">right</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">          circle</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">            stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#D06269</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            strokeWidth</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            r</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            magnet</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">          }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">      },</span></span>
<span class="line"><span style="color:#F6F6F4;">      group3</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        position</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">bottom</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">          circle</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">            stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#D06269</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            strokeWidth</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            r</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            magnet</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">          }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">      },</span></span>
<span class="line"><span style="color:#F6F6F4;">      group4</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        position</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">left</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">          circle</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">            stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#D06269</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            strokeWidth</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            r</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            magnet</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">          }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    items</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">      { group</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">group1</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> },</span></span>
<span class="line"><span style="color:#F6F6F4;">      { group</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">group2</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> },</span></span>
<span class="line"><span style="color:#F6F6F4;">      { group</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">group3</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> },</span></span>
<span class="line"><span style="color:#F6F6F4;">      { group</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">group4</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> }</span></span>
<span class="line"><span style="color:#F6F6F4;">    ]</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addNode</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  ports:{</span></span>
<span class="line"><span style="color:#24292E;">    groups: {</span></span>
<span class="line"><span style="color:#24292E;">      group1: {</span></span>
<span class="line"><span style="color:#24292E;">        position: </span><span style="color:#032F62;">&#39;top&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        attrs: {</span></span>
<span class="line"><span style="color:#24292E;">          circle: {</span></span>
<span class="line"><span style="color:#24292E;">            stroke: </span><span style="color:#032F62;">&#39;#D06269&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            strokeWidth: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            r: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            magnet: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      group2: {</span></span>
<span class="line"><span style="color:#24292E;">        position: </span><span style="color:#032F62;">&#39;right&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        attrs: {</span></span>
<span class="line"><span style="color:#24292E;">          circle: {</span></span>
<span class="line"><span style="color:#24292E;">            stroke: </span><span style="color:#032F62;">&#39;#D06269&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            strokeWidth: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            r: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            magnet: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      group3: {</span></span>
<span class="line"><span style="color:#24292E;">        position: </span><span style="color:#032F62;">&#39;bottom&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        attrs: {</span></span>
<span class="line"><span style="color:#24292E;">          circle: {</span></span>
<span class="line"><span style="color:#24292E;">            stroke: </span><span style="color:#032F62;">&#39;#D06269&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            strokeWidth: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            r: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            magnet: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      group4: {</span></span>
<span class="line"><span style="color:#24292E;">        position: </span><span style="color:#032F62;">&#39;left&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        attrs: {</span></span>
<span class="line"><span style="color:#24292E;">          circle: {</span></span>
<span class="line"><span style="color:#24292E;">            stroke: </span><span style="color:#032F62;">&#39;#D06269&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            strokeWidth: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            r: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            magnet: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    items: [</span></span>
<span class="line"><span style="color:#24292E;">      { group: </span><span style="color:#032F62;">&#39;group1&#39;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">      { group: </span><span style="color:#032F62;">&#39;group2&#39;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">      { group: </span><span style="color:#032F62;">&#39;group3&#39;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">      { group: </span><span style="color:#032F62;">&#39;group4&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-79d6158821d44a22.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/814/format/webp" alt="img"></p><p>下面详细解释上面关键配置项：</p><ol><li>group：group 选项来设置链接桩分组，使该组中的链接桩具有相同的行为和样式，在 items 里面添加连接桩的时候，可以指定该连接桩属于哪个分组。</li><li>position：每一个分组内可以配置连接桩的位置属性，位置支持绝对定位以及均匀分布定位，详细配置可参考 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Fapi%2Fregistry%2Fport-layout" target="_blank" rel="noreferrer">PortLayout</a>。</li><li>attrs：这里又出现 attrs 了，那么必定有与其配对的 markup，连接桩默认的 markup 为：</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  tagName: </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">circle</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  selector: </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">circle</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs: {</span></span>
<span class="line"><span style="color:#F6F6F4;">    r: </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    fill: </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#fff</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    stroke: </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#000</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">tagName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">selector</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;circle&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">attrs</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;#fff&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">stroke</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;#000&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>markup 定制连接桩的结构，attrs 定制连接桩的样式，注意，只有设置 magnet: true 属性的连接桩才能手动连线。</p><ol><li>items：group 只是定义了连接桩分组，也就是 group1 、group2、group3、group4 分别长成什么样子，真正配置需要哪些连接桩的是 items 属性，items 的配置如下：</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  id: </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">id1</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  group: </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">group1</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  markup: </span><span style="color:#BF9EEE;">undefined</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  attrs: </span><span style="color:#BF9EEE;">undefined</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;id1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">group</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;group1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">markup</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">attrs</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>如果 id 不设置，会自动生成唯一 id，如果手动设置，记住，必须保证全局唯一，否则会产生不可预期的错误。在 items 中配置的 markup 或 attrs 会和所属 group 中的配置深度合并。</p><h4 id="动态修改属性" tabindex="-1">动态修改属性 <a class="header-anchor" href="#动态修改属性" aria-label="Permalink to &quot;动态修改属性&quot;">​</a></h4><p>那么怎么动态修改连接桩的属性呢？在前面的节点和连线中我们知道，动态修改样式使用的是 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Fapi%2Fmodel%2Fcell%23attr" target="_blank" rel="noreferrer">attr</a> 方法，那么 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Fapi%2Fmodel%2Fcell%23attr" target="_blank" rel="noreferrer">attr</a> 方法的原理是什么呢？ 通过阅读源码知道，<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Fapi%2Fmodel%2Fcell%23attr" target="_blank" rel="noreferrer">attr</a> 方法其实是一个修改节点或边中 store/data/attrs 中数据的快捷方法。</p><p><img src="https://upload-images.jianshu.io/upload_images/26523285-c0d5aa4be1812e4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>从上图可知，ports 相关的配置并不处于 attrs 属性内部，所以修改连接桩的配置不能使用 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Fapi%2Fmodel%2Fcell%23attr" target="_blank" rel="noreferrer">attr</a> 方法，那只有使用更通用的 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Fapi%2Fmodel%2Fcell%23prop" target="_blank" rel="noreferrer">prop</a> 方法, <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Fapi%2Fmodel%2Fcell%23prop" target="_blank" rel="noreferrer">prop</a> 可以用来修改 store/data 中的任意数据 ，例如，需要修改第一个连接桩的边框颜色为红色：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">node.</span><span style="color:#62E884;">prop</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ports/items/0/attrs/circle</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, { stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">red</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">node.</span><span style="color:#6F42C1;">prop</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ports/items/0/attrs/circle&#39;</span><span style="color:#24292E;">, { stroke: </span><span style="color:#032F62;">&#39;red&#39;</span><span style="color:#24292E;"> })</span></span></code></pre></div><p>这么写会显得特别冗长，X6 提供了更简单一点的方法：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">node.</span><span style="color:#62E884;">portProp</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">portId</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">attrs/circle</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, { stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">red</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">node.</span><span style="color:#6F42C1;">portProp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;portId&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;attrs/circle&#39;</span><span style="color:#24292E;">, { stroke: </span><span style="color:#032F62;">&#39;red&#39;</span><span style="color:#24292E;"> })</span></span></code></pre></div><h4 id="显示-隐藏" tabindex="-1">显示/隐藏 <a class="header-anchor" href="#显示-隐藏" aria-label="Permalink to &quot;显示/隐藏&quot;">​</a></h4><p>在业务场景中，经常需要鼠标移入节点时显示连接桩、鼠标移出节点时隐藏连接桩的功能。这里就要涉及到 X6 的事件系统，X6 中基本上所有操作都会触发对应的事件，方便用户处理自己的逻辑，详细内容见 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Ftutorial%2Fintermediate%2Fevents" target="_blank" rel="noreferrer">Events</a> 。实现这个功能，我们可以：监听节点的鼠标移入和移出事件，然后通过样式来显示/隐藏连接桩，这就是基于 SVG 的一个非常明显的优势，我们可以使用熟悉的 DOM 操作来操作 SVG 元素。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">showPorts</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">ports</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">show</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">, len </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ports.length; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> len; i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    ports[i].style.visibility </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> show </span><span style="color:#F286C4;">?</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">visible</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">hidden</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">on</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">node:mouseenter</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> ports </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> container.</span><span style="color:#62E884;">querySelectorAll</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">.x6-port-body</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">showPorts</span><span style="color:#F6F6F4;">(ports, </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">on</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">node:mouseleave</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> ports </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> container.</span><span style="color:#62E884;">querySelectorAll</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">.x6-port-body</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">showPorts</span><span style="color:#F6F6F4;">(ports, </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showPorts</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ports</span><span style="color:#24292E;">, </span><span style="color:#E36209;">show</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ports.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> len; i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    ports[i].style.visibility </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> show </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;visible&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;hidden&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;node:mouseenter&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> container.</span><span style="color:#6F42C1;">querySelectorAll</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.x6-port-body&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">showPorts</span><span style="color:#24292E;">(ports, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;node:mouseleave&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> container.</span><span style="color:#6F42C1;">querySelectorAll</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.x6-port-body&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">showPorts</span><span style="color:#24292E;">(ports, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-efdb6fbe9a65f893.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1006/format/webp" alt="img"></p><h3 id="最后-4" tabindex="-1">最后 <a class="header-anchor" href="#最后-4" aria-label="Permalink to &quot;最后&quot;">​</a></h3><p>基于 SVG 的图框架最大的优势在于我们可以使用熟悉的处理 HTML 元素的思维方式来处理 SVG 元素的交互，因为可以使用 DOM API 来操作 SVG 元素，我们就可以实现很多交互细节，而图编辑应用的难点往往就在于这些交互细节。</p><ol><li>源码：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6%2Ftree%2Fop-demo%2Fexamples%2Fx6-app-draw" target="_blank" rel="noreferrer">传送门</a></li><li>记得给 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 仓库加星</li></ol><h1 id="_06-连接状态篇" tabindex="-1">06-连接状态篇 <a class="header-anchor" href="#_06-连接状态篇" aria-label="Permalink to &quot;06-连接状态篇&quot;">​</a></h1><h3 id="开始-5" tabindex="-1">开始 <a class="header-anchor" href="#开始-5" aria-label="Permalink to &quot;开始&quot;">​</a></h3><p>在手动连线的过程中，还需要处理一些交互细节，比如到达连接桩附近自动吸附、可连接元素的高亮显示等，幸运的是这些都不需要我们自己去实现，<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 提供了便利的配置方式帮我们解决这些问题。</p><h3 id="实现-4" tabindex="-1">实现 <a class="header-anchor" href="#实现-4" aria-label="Permalink to &quot;实现&quot;">​</a></h3><h4 id="连接配置" tabindex="-1">连接配置 <a class="header-anchor" href="#连接配置" aria-label="Permalink to &quot;连接配置&quot;">​</a></h4><p>当连线到达连接桩附近时，我们希望连线会自动吸附到连接桩上面，这样交互体验会更好：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  connecting</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    snap</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      radius</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">, </span><span style="color:#7B7F8B;">// 离目标 20px 的时候自动吸附</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  connecting: {</span></span>
<span class="line"><span style="color:#24292E;">    snap: {</span></span>
<span class="line"><span style="color:#24292E;">      radius: </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 离目标 20px 的时候自动吸附</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>现在拖动连线到空白处放开后，会生成一条终点在空白处的连线，这种连线在流程图中是无效的连线，所以希望如果终点在空白处时，该连线自动消失：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  connecting</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    allowBlank</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  connecting: {</span></span>
<span class="line"><span style="color:#24292E;">    allowBlank: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-b644731d3306609e.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1006/format/webp" alt="img"></p><p>在实际业务中还需要用户根据业务逻辑来定义连线有效性，X6 根据判断的先后顺序提供了三个方法：</p><table><thead><tr><th>方法</th><th>触发时机</th></tr></thead><tbody><tr><td>validateMagnet</td><td>点击 magnet 元素时根据 validateMagnet 返回值判断是否新增边</td></tr><tr><td>validateConnection</td><td>拖拽连线的过程中根据 validateConnection 返回值判断是否可以连接</td></tr><tr><td>validateEdge</td><td>当停止拖动边的时候根据 validateEdge 返回值来判断边是否生效，如果返回 false, 该边会被清除</td></tr></tbody></table><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  connecting</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">validateConnection</span><span style="color:#F6F6F4;">({ </span><span style="color:#FFB86C;font-style:italic;">targetMagnet</span><span style="color:#F6F6F4;"> }) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (targetMagnet) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 只能连接 group 为 top 的连接桩</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> targetMagnet</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">getAttribute</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">port-group</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">===</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">top</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  connecting: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">validateConnection</span><span style="color:#24292E;">({ </span><span style="color:#E36209;">targetMagnet</span><span style="color:#24292E;"> }) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (targetMagnet) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 只能连接 group 为 top 的连接桩</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> targetMagnet</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getAttribute</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;port-group&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;top&#39;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-611caaeb986f9da5.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1006/format/webp" alt="img"></p><h4 id="高亮配置" tabindex="-1">高亮配置 <a class="header-anchor" href="#高亮配置" aria-label="Permalink to &quot;高亮配置&quot;">​</a></h4><p>从上图我们可以发现，当连接桩可以被连接的时候，当连线到达它附近时，会出现高亮的效果，这个效果其实也是可以自定义的：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  highlighting</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    magnetAdsorbed</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">stroke</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      args</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        attrs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">          fill</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#D06269</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">          stroke</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#D06269</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        },</span></span>
<span class="line"><span style="color:#F6F6F4;">      },</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  highlighting: {</span></span>
<span class="line"><span style="color:#24292E;">    magnetAdsorbed: {</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;stroke&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      args: {</span></span>
<span class="line"><span style="color:#24292E;">        attrs: {</span></span>
<span class="line"><span style="color:#24292E;">          fill: </span><span style="color:#032F62;">&#39;#D06269&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          stroke: </span><span style="color:#032F62;">&#39;#D06269&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-e13a1e77a52fb496.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1006/format/webp" alt="img"></p><h3 id="最后-5" tabindex="-1">最后 <a class="header-anchor" href="#最后-5" aria-label="Permalink to &quot;最后&quot;">​</a></h3><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 的很多功能都是从实际业务场景中沉淀出来的，在一些交互细节的地方打磨的已经足够光滑，但是还有一些不够好的地方，希望能得到大家的反馈。</p><ol><li><p>源码：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6%2Ftree%2Fop-demo%2Fexamples%2Fx6-app-draw" target="_blank" rel="noreferrer">传送门</a></p></li><li><p>记得给 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 仓库加星</p></li></ol><h1 id="_07-工具篇" tabindex="-1">07-工具篇 <a class="header-anchor" href="#_07-工具篇" aria-label="Permalink to &quot;07-工具篇&quot;">​</a></h1><h3 id="开始-6" tabindex="-1">开始 <a class="header-anchor" href="#开始-6" aria-label="Permalink to &quot;开始&quot;">​</a></h3><p>一个开箱即用的技术框架，一定会有完备的配套工具。<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 提供了大量的图编辑功能，它们基本上都是基于配置式，而且配置参数是经过大量业务实践出来的，开发过程中充分考虑可扩展性以及兼容性，能覆盖到大部分的功能场景。</p><h3 id="实现-5" tabindex="-1">实现 <a class="header-anchor" href="#实现-5" aria-label="Permalink to &quot;实现&quot;">​</a></h3><h4 id="节点缩放" tabindex="-1">节点缩放 <a class="header-anchor" href="#节点缩放" aria-label="Permalink to &quot;节点缩放&quot;">​</a></h4><p>通过拖拽修改节点的尺寸和旋转角度是常见功能，在 X6 中只需要做简单的配置：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  resizing</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  rotating</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  resizing: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  rotating: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>还可以通过 css 来修改操作元素的默认样式：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;font-style:italic;">.x6-widget-transform</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">margin</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-1</span><span style="color:#F286C4;">px</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-1</span><span style="color:#F286C4;">px</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">padding</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F286C4;">px</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">border</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F286C4;">px</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">solid</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">#239EDD</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  &gt; div {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;">border</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F286C4;">px</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">solid</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">#239EDD</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">div</span><span style="color:#F286C4;font-style:italic;">:</span><span style="color:#62E884;font-style:italic;">hover</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;">background-color</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">#3DAFE4</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;font-style:italic;">.x6-widget-transform-active-handle</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;">background-color</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">#3DAFE4</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#62E884;font-style:italic;">.x6-widget-transform-resize</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">border-radius</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.x6-widget-transform</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">margin</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">-1</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-1</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">padding</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">border</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">solid</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">#239EDD</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  &gt; </span><span style="color:#005CC5;">div</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">border</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">solid</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">#239EDD</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#22863A;">div</span><span style="color:#6F42C1;">:hover</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#3DAFE4</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">.x6-widget-transform-active-handle</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#3DAFE4</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.x6-widget-transform-resize</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">border-radius</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-bbeaf1955529b750.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/740/format/webp" alt="img"></p><h4 id="选择" tabindex="-1">选择 <a class="header-anchor" href="#选择" aria-label="Permalink to &quot;选择&quot;">​</a></h4><p>选择功能提供了快捷的方式批量移动、删除节点，是使用频次非常高的功能。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  selecting</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    enabled</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    rubberband</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    showNodeSelectionBox</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  selecting: {</span></span>
<span class="line"><span style="color:#24292E;">    enabled: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    rubberband: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    showNodeSelectionBox: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-c82c89ac8ed8ea5e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/708/format/webp" alt="img"></p><h4 id="对齐线" tabindex="-1">对齐线 <a class="header-anchor" href="#对齐线" aria-label="Permalink to &quot;对齐线&quot;">​</a></h4><p>对齐线是用来帮助我们实现节点对齐的重要辅助手段：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  snapline</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  snapline: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>同样也可以通过修改 css 来自定义对齐线样式：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;font-style:italic;">.x6-widget-snapline-vertical</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">border-right-color</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">#239EDD</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#62E884;font-style:italic;">.x6-widget-snapline-horizontal</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">border-bottom-color</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">#239EDD</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.x6-widget-snapline-vertical</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">border-right-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#239EDD</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.x6-widget-snapline-horizontal</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">border-bottom-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#239EDD</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-b22e758aa0461863.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/760/format/webp" alt="img"></p><h4 id="撤销重做" tabindex="-1">撤销重做 <a class="header-anchor" href="#撤销重做" aria-label="Permalink to &quot;撤销重做&quot;">​</a></h4><p>X6 会实时记录节点添加、删除、属性修改的变动，通过撤销操作可以返回到历史记录中的任意位置。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  history</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">addNode</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.history.</span><span style="color:#62E884;">undo</span><span style="color:#F6F6F4;">() </span><span style="color:#7B7F8B;">// 删除新增节点</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.history.</span><span style="color:#62E884;">redo</span><span style="color:#F6F6F4;">()  </span><span style="color:#7B7F8B;">// 恢复新增节点</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  history: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">addNode</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">graph.history.</span><span style="color:#6F42C1;">undo</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">// 删除新增节点</span></span>
<span class="line"><span style="color:#24292E;">graph.history.</span><span style="color:#6F42C1;">redo</span><span style="color:#24292E;">()  </span><span style="color:#6A737D;">// 恢复新增节点</span></span></code></pre></div><p>有时候我们希望多个操作能一次性撤销，X6 提供了批量更新的方法 batchUpdate，一次批量操作只会被记录一次。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">batchUpdate</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">rename</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  rect.</span><span style="color:#62E884;">prop</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">zIndex</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">  rect.</span><span style="color:#62E884;">attr</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">label/text</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">hello</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">  rect.</span><span style="color:#62E884;">attr</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">label/fill</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#ff0000</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)  </span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">batchUpdate</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;rename&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  rect.</span><span style="color:#6F42C1;">prop</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;zIndex&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  rect.</span><span style="color:#6F42C1;">attr</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;label/text&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  rect.</span><span style="color:#6F42C1;">attr</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;label/fill&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;#ff0000&#39;</span><span style="color:#24292E;">)  </span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h4 id="小地图" tabindex="-1">小地图 <a class="header-anchor" href="#小地图" aria-label="Permalink to &quot;小地图&quot;">​</a></h4><p>在无限画布场景，需要关注当前视口处于画布的什么位置并能快速定位到远处的画布元素，这时就需要小地图功能。小地图其实是画布的一个缩略图，可以通过小地图快速平移和缩放画布。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  minimap</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    enabled</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    container</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> document.</span><span style="color:#62E884;">getElementById</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">minimap</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    width</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">198</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">198</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    padding</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  minimap: {</span></span>
<span class="line"><span style="color:#24292E;">    enabled: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    container: document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;minimap&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    width: </span><span style="color:#005CC5;">198</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    height: </span><span style="color:#005CC5;">198</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    padding: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p><img src="https://upload-images.jianshu.io/upload_images/26523285-b3dca9bcbb7e3de3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/406/format/webp" alt="img"></p><h3 id="最后-6" tabindex="-1">最后 <a class="header-anchor" href="#最后-6" aria-label="Permalink to &quot;最后&quot;">​</a></h3><p>工欲善其事必先利其器，选择一个好的框架能极大程度上提高开发效率，X6 通过几个简单的配置提供了丰富的开箱即用的功能，对于新手来说是非常友好的。</p><ol><li><p>源码：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6%2Ftree%2Fop-demo%2Fexamples%2Fx6-app-draw" target="_blank" rel="noreferrer">传送门</a></p></li><li><p>记得给 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 仓库加星</p></li></ol><h1 id="_08-快捷键篇" tabindex="-1">08-快捷键篇 <a class="header-anchor" href="#_08-快捷键篇" aria-label="Permalink to &quot;08-快捷键篇&quot;">​</a></h1><h3 id="开始-7" tabindex="-1">开始 <a class="header-anchor" href="#开始-7" aria-label="Permalink to &quot;开始&quot;">​</a></h3><p>在使用软件的过程中，我们经常会使用一些快捷键来提高效率，比如 Ctrl +C、Ctrl + V，同样，在流程图应用中，也需要一些快捷键来提高编辑效率。</p><h3 id="实现-6" tabindex="-1">实现 <a class="header-anchor" href="#实现-6" aria-label="Permalink to &quot;实现&quot;">​</a></h3><p>X6 提供了 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx6.antv.vision%2Fzh%2Fdocs%2Ftutorial%2Fbasic%2Fclipboard" target="_blank" rel="noreferrer">clipboard</a> 来实现画布上节点的复制、剪切、粘贴功能，经常和快捷键搭使用。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> graph </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Graph</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  clipboard</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// copy</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">bindKey</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">meta+c</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ctrl+c</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">], () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> cells </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> graph.</span><span style="color:#62E884;">getSelectedCells</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (cells.length) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    graph.</span><span style="color:#62E884;">copy</span><span style="color:#F6F6F4;">(cells)</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">//cut</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">bindKey</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">meta+x</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ctrl+x</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">], () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> cells </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> graph.</span><span style="color:#62E884;">getSelectedCells</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (cells.length) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    graph.</span><span style="color:#62E884;">cut</span><span style="color:#F6F6F4;">(cells)</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// paste</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">bindKey</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">meta+v</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ctrl+v</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">], () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">isClipboardEmpty</span><span style="color:#F6F6F4;">()) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> cells </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> graph.</span><span style="color:#62E884;">paste</span><span style="color:#F6F6F4;">({ offset</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">32</span><span style="color:#F6F6F4;"> })</span></span>
<span class="line"><span style="color:#F6F6F4;">    graph.</span><span style="color:#62E884;">cleanSelection</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">    graph.</span><span style="color:#62E884;">select</span><span style="color:#F6F6F4;">(cells)</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">graph</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Graph</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  clipboard: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// copy</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">bindKey</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;meta+c&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ctrl+c&#39;</span><span style="color:#24292E;">], () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">cells</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> graph.</span><span style="color:#6F42C1;">getSelectedCells</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (cells.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    graph.</span><span style="color:#6F42C1;">copy</span><span style="color:#24292E;">(cells)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//cut</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">bindKey</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;meta+x&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ctrl+x&#39;</span><span style="color:#24292E;">], () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">cells</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> graph.</span><span style="color:#6F42C1;">getSelectedCells</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (cells.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    graph.</span><span style="color:#6F42C1;">cut</span><span style="color:#24292E;">(cells)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// paste</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">bindKey</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;meta+v&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ctrl+v&#39;</span><span style="color:#24292E;">], () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">isClipboardEmpty</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">cells</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> graph.</span><span style="color:#6F42C1;">paste</span><span style="color:#24292E;">({ offset: </span><span style="color:#005CC5;">32</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">    graph.</span><span style="color:#6F42C1;">cleanSelection</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    graph.</span><span style="color:#6F42C1;">select</span><span style="color:#24292E;">(cells)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>快捷键还可以搭配选择功能使用，实现常见的 Ctrl + A 全选、Backspace 删除选择元素。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// select all</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">bindKey</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">meta+a</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ctrl+a</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">], () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> nodes </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> graph.</span><span style="color:#62E884;">getNodes</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (nodes) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    graph.</span><span style="color:#62E884;">select</span><span style="color:#F6F6F4;">(nodes)</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">//delete</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">bindKey</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">backspace</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> cells </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> graph.</span><span style="color:#62E884;">getSelectedCells</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (cells.length) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    graph.</span><span style="color:#62E884;">removeCells</span><span style="color:#F6F6F4;">(cells)</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// select all</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">bindKey</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;meta+a&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ctrl+a&#39;</span><span style="color:#24292E;">], () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nodes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> graph.</span><span style="color:#6F42C1;">getNodes</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (nodes) {</span></span>
<span class="line"><span style="color:#24292E;">    graph.</span><span style="color:#6F42C1;">select</span><span style="color:#24292E;">(nodes)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//delete</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">bindKey</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;backspace&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">cells</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> graph.</span><span style="color:#6F42C1;">getSelectedCells</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (cells.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    graph.</span><span style="color:#6F42C1;">removeCells</span><span style="color:#24292E;">(cells)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>在流程图编辑过程中经常要使用撤销、恢复功能，将这两个操作和 Ctrl + Z、Ctrl + Shift + Z 绑定在一起是常见的需求。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//undo redo</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">bindKey</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">meta+z</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ctrl+z</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">], () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (graph.history.</span><span style="color:#62E884;">canUndo</span><span style="color:#F6F6F4;">()) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    graph.history.</span><span style="color:#62E884;">undo</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"><span style="color:#F6F6F4;">graph.</span><span style="color:#62E884;">bindKey</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">meta+shift+z</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ctrl+shift+z</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">], () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (graph.history.</span><span style="color:#62E884;">canRedo</span><span style="color:#F6F6F4;">()) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    graph.history.</span><span style="color:#62E884;">redo</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//undo redo</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">bindKey</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;meta+z&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ctrl+z&#39;</span><span style="color:#24292E;">], () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (graph.history.</span><span style="color:#6F42C1;">canUndo</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">    graph.history.</span><span style="color:#6F42C1;">undo</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">graph.</span><span style="color:#6F42C1;">bindKey</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;meta+shift+z&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ctrl+shift+z&#39;</span><span style="color:#24292E;">], () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (graph.history.</span><span style="color:#6F42C1;">canRedo</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">    graph.history.</span><span style="color:#6F42C1;">redo</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="最后-7" tabindex="-1">最后 <a class="header-anchor" href="#最后-7" aria-label="Permalink to &quot;最后&quot;">​</a></h3><p>快捷键对于一款应用来说是非常重要的一部分，但是设计不好的快捷键会让用户抓狂，所以在设计快捷键的时候一般与传统的软件对齐，而不是自己随心所欲的设定。如果为一个全新的功能配置快捷键，可能需要好好花心思研究用户的使用习惯。</p><ol><li>源码：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6%2Ftree%2Fop-demo%2Fexamples%2Fx6-app-draw" target="_blank" rel="noreferrer">传送门</a></li><li>记得给 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fantvis%2FX6" target="_blank" rel="noreferrer">X6</a> 仓库加星</li></ol>`,242),e=[o];function t(c,r,F,y,i,E){return a(),n("div",null,e)}const g=s(p,[["render",t]]);export{h as __pageData,g as default};
