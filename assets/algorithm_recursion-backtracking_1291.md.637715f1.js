import{_ as s,o as n,c as a,V as l}from"./chunks/framework.c6d8cbec.js";const h=JSON.parse('{"title":"LeetCode 1291. 顺次数","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/recursion-backtracking/1291.md","filePath":"algorithm/recursion-backtracking/1291.md"}'),p={name:"algorithm/recursion-backtracking/1291.md"},o=l(`<h1 id="leetcode-1291-顺次数" tabindex="-1">LeetCode 1291. 顺次数 <a class="header-anchor" href="#leetcode-1291-顺次数" aria-label="Permalink to &quot;LeetCode 1291. 顺次数&quot;">​</a></h1><h2 id="题目描述" tabindex="-1">题目描述 <a class="header-anchor" href="#题目描述" aria-label="Permalink to &quot;题目描述&quot;">​</a></h2><p>我们定义「顺次数」为：每一位上的数字都比前一位上的数字大 1 的整数。</p><p>请你返回由 [low, high] 范围内所有顺次数组成的 有序 列表（从小到大排序）。</p><p>示例 1：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">输出：low = 100</span><span style="color:#F6F6F4;">,</span><span style="color:#F286C4;"> high = 300</span></span>
<span class="line"><span style="color:#F286C4;">输出：</span><span style="color:#F6F6F4;">[</span><span style="color:#F286C4;">123,234</span><span style="color:#F6F6F4;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">输出：low = 100, high = 300</span></span>
<span class="line"><span style="color:#24292E;">输出：[123,234]</span></span></code></pre></div><p>示例 2：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">输出：low = 1000</span><span style="color:#F6F6F4;">,</span><span style="color:#F286C4;"> high = 13000</span></span>
<span class="line"><span style="color:#F286C4;">输出：</span><span style="color:#F6F6F4;">[</span><span style="color:#F286C4;">1234,2345,3456,4567,5678,6789,12345</span><span style="color:#F6F6F4;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">输出：low = 1000, high = 13000</span></span>
<span class="line"><span style="color:#24292E;">输出：[1234,2345,3456,4567,5678,6789,12345]</span></span></code></pre></div><p>提示：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">10 &lt;= </span><span style="color:#F286C4;">low &lt;= high &lt;= 10^9</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">10 &lt;= low &lt;= high &lt;= 10^9</span></span></code></pre></div><p>来源：力扣（LeetCode）链接：<a href="https://leetcode-cn.com/problems/sequential-digits" target="_blank" rel="noreferrer">https://leetcode-cn.com/problems/sequential-digits</a> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解题思路" tabindex="-1">解题思路 <a class="header-anchor" href="#解题思路" aria-label="Permalink to &quot;解题思路&quot;">​</a></h2><p>「顺次数」为：每一位上的数字都比前一位上的数字大 1 的整数。</p><p>也就是例如 <code>1234</code>这样的数字，然后给你一段区间确定范围。</p><p>官方给了枚举方式，反正数据量也不是很大，但是我觉得还是有很多数字没必要枚举，可以直接剪枝掉。我的做法是先求出最小值和最大值对应字符串的长度，即求出我们能枚举的数字的长度范围。</p><p>然后我们的起点的最小值从 <code>1</code> 开始，起点的最大值从 <code>10-len</code> 开始。为什么是 <code>10-len</code>？举例说明，示例 1 给的是 <code>[100,300]</code>范围的值，那么可枚举的长度 <code>len</code> 为 3，起点的最大值就位 10 - 3 = 7。那么此时顺次数为 <code>789</code> 但是不在我们区间范围内，舍弃。然后<code>8、9</code>开头的数字就不需要枚举了。 这样，我们就能剪掉一部门数据了。（虽然暴力是永远滴神...）</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-vrK12" id="tab-L0nzP7M" checked="checked"><label for="tab-L0nzP7M">javascript</label><input type="radio" name="group-vrK12" id="tab-8kV9Sqm"><label for="tab-8kV9Sqm">cpp</label><input type="radio" name="group-vrK12" id="tab-omR4bZs"><label for="tab-omR4bZs">java</label><input type="radio" name="group-vrK12" id="tab-2t3cU04"><label for="tab-2t3cU04">python</label></div><div class="blocks"><div class="language-javascript vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{number}</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">low</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{number}</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">high</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@return</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{number[]}</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">sequentialDigits</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">low</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">high</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> res </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [];</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> lowLen </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> low.</span><span style="color:#62E884;">toString</span><span style="color:#F6F6F4;">().length;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> highLen </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> high.</span><span style="color:#62E884;">toString</span><span style="color:#F6F6F4;">().length;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> lowLen; i </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> highLen; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> j </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; j </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> i; j</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> str </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> num </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> j;</span></span>
<span class="line"><span style="color:#F6F6F4;">      str </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> num;</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> k </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (k</span><span style="color:#F286C4;">--</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        num</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        str </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> num;</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> ans </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">parseInt</span><span style="color:#F6F6F4;">(str);</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (ans </span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;"> low </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> ans </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> high) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        res.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(ans);</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> res;</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{number}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">low</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{number}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">high</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{number[]}</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sequentialDigits</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">low</span><span style="color:#24292E;">, </span><span style="color:#E36209;">high</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> lowLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> low.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> highLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> high.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lowLen; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> highLen; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> i; j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> j;</span></span>
<span class="line"><span style="color:#24292E;">      str </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> num;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> k </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (k</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        num</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        str </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> num;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(str);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (ans </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> low </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> ans </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> high) {</span></span>
<span class="line"><span style="color:#24292E;">        res.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(ans);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Solution</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F286C4;">public:</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">vector</span><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;">&gt; </span><span style="color:#62E884;">sequentialDigits</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">low</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">high</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        vector</span><span style="color:#F286C4;">&lt;int&gt;</span><span style="color:#F6F6F4;"> res;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> lowLen </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">to_string</span><span style="color:#F6F6F4;">(low).</span><span style="color:#62E884;">size</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> highLen </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">to_string</span><span style="color:#F6F6F4;">(high).</span><span style="color:#62E884;">size</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">lowLen;i</span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;">highLen;i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> j</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;j</span><span style="color:#F286C4;">&lt;=</span><span style="color:#BF9EEE;">10</span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;">i;j</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">                string str </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> num </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> j;</span></span>
<span class="line"><span style="color:#F6F6F4;">                str </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">to_string</span><span style="color:#F6F6F4;">(num);</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> k </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> i</span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;">(k</span><span style="color:#F286C4;">--</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">                    num</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                    str </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">to_string</span><span style="color:#F6F6F4;">(num);</span></span>
<span class="line"><span style="color:#F6F6F4;">                }</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> ans </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">stoi</span><span style="color:#F6F6F4;">(str);</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(ans</span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;">low </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> ans</span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;">high){</span></span>
<span class="line"><span style="color:#F6F6F4;">                    res.</span><span style="color:#62E884;">push_back</span><span style="color:#F6F6F4;">(ans);</span></span>
<span class="line"><span style="color:#F6F6F4;">                }</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> res;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Solution</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">public:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">sequentialDigits</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">low</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">high</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        vector</span><span style="color:#D73A49;">&lt;int&gt;</span><span style="color:#24292E;"> res;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> lowLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to_string</span><span style="color:#24292E;">(low).</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> highLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to_string</span><span style="color:#24292E;">(high).</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">lowLen;i</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">highLen;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;j</span><span style="color:#D73A49;">&lt;=</span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">i;j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">                string str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> j;</span></span>
<span class="line"><span style="color:#24292E;">                str </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to_string</span><span style="color:#24292E;">(num);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> k </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(k</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">                    num</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                    str </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to_string</span><span style="color:#24292E;">(num);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stoi</span><span style="color:#24292E;">(str);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ans</span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;">low </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> ans</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">high){</span></span>
<span class="line"><span style="color:#24292E;">                    res.</span><span style="color:#6F42C1;">push_back</span><span style="color:#24292E;">(ans);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Solution</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">List</span><span style="color:#F6F6F4;">&lt;Integer&gt; </span><span style="color:#62E884;">sequentialDigits</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">low</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">high</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">List</span><span style="color:#F6F6F4;">&lt;Integer&gt; res </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ArrayList</span><span style="color:#F6F6F4;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> lowLen </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> String.</span><span style="color:#62E884;">valueOf</span><span style="color:#F6F6F4;">(low).</span><span style="color:#62E884;">length</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> highLen </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> String.</span><span style="color:#62E884;">valueOf</span><span style="color:#F6F6F4;">(high).</span><span style="color:#62E884;">length</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">lowLen;i</span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;">highLen;i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> j</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;j</span><span style="color:#F286C4;">&lt;=</span><span style="color:#BF9EEE;">10</span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;">i;j</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> str </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> num </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> j;</span></span>
<span class="line"><span style="color:#F6F6F4;">                str </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> num;</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> k </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> i</span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;">(k</span><span style="color:#F286C4;">--&gt;</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">                    num</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">                    str </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> num;</span></span>
<span class="line"><span style="color:#F6F6F4;">                }</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> ans </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Integer.</span><span style="color:#62E884;">parseInt</span><span style="color:#F6F6F4;">(str);</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(ans</span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;">low </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> ans</span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;">high){</span></span>
<span class="line"><span style="color:#F6F6F4;">                    res.</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(ans);</span></span>
<span class="line"><span style="color:#F6F6F4;">                }</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> res;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Solution</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">sequentialDigits</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">low</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">high</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        List&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> lowLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(low).</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> highLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(high).</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">lowLen;i</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">highLen;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;j</span><span style="color:#D73A49;">&lt;=</span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">i;j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">                String str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> j;</span></span>
<span class="line"><span style="color:#24292E;">                str </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> num;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> k </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(k</span><span style="color:#D73A49;">--&gt;</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">                    num</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                    str </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> num;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Integer.</span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(str);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ans</span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;">low </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> ans</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">high){</span></span>
<span class="line"><span style="color:#24292E;">                    res.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(ans);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Solution</span><span style="color:#F6F6F4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">def</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">sequentialDigits</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;font-style:italic;">self</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">low</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">high</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;"> List[</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">]:</span></span>
<span class="line"><span style="color:#F6F6F4;">        res </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> []</span></span>
<span class="line"><span style="color:#F6F6F4;">        lowLen </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">len</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">str</span><span style="color:#F6F6F4;">(low))</span></span>
<span class="line"><span style="color:#F6F6F4;">        highLen </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">len</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">str</span><span style="color:#F6F6F4;">(high))</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">in</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">range</span><span style="color:#F6F6F4;">(lowLen,highLen</span><span style="color:#F286C4;">+</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">):</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> j </span><span style="color:#F286C4;">in</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">range</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">10</span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">+</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">):</span></span>
<span class="line"><span style="color:#F6F6F4;">                num </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> j</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#97E1F1;font-style:italic;">str</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#97E1F1;font-style:italic;">str</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">str</span><span style="color:#F6F6F4;">(num)</span></span>
<span class="line"><span style="color:#F6F6F4;">                k </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> i</span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">1</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> k</span><span style="color:#F286C4;">&gt;</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">                    num </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span></span>
<span class="line"><span style="color:#F6F6F4;">                    </span><span style="color:#97E1F1;font-style:italic;">str</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">str</span><span style="color:#F6F6F4;">(num)</span></span>
<span class="line"><span style="color:#F6F6F4;">                    k </span><span style="color:#F286C4;">-=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span></span>
<span class="line"><span style="color:#F6F6F4;">                ans </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">str</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> ans</span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;">low </span><span style="color:#F286C4;">and</span><span style="color:#F6F6F4;"> ans</span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;">high:</span></span>
<span class="line"><span style="color:#F6F6F4;">                    res.append(ans)</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> res</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Solution</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sequentialDigits</span><span style="color:#24292E;">(self, low: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, high: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">) -&gt; List[</span><span style="color:#005CC5;">int</span><span style="color:#24292E;">]:</span></span>
<span class="line"><span style="color:#24292E;">        res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">        lowLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(low))</span></span>
<span class="line"><span style="color:#24292E;">        highLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(high))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(lowLen,highLen</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">i</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">                num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> j</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(num)</span></span>
<span class="line"><span style="color:#24292E;">                k </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> k</span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">                    num </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(num)</span></span>
<span class="line"><span style="color:#24292E;">                    k </span><span style="color:#D73A49;">-=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">                ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ans</span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;">low </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> ans</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">high:</span></span>
<span class="line"><span style="color:#24292E;">                    res.append(ans)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res</span></span></code></pre></div></div></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">学如逆水行舟，不进则退</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">学如逆水行舟，不进则退</span></span></code></pre></div>`,18),e=[o];function t(c,r,F,y,i,E){return n(),a("div",null,e)}const g=s(p,[["render",t]]);export{h as __pageData,g as default};
