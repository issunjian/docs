import{_ as a,o as e,c as o,V as r}from"./chunks/framework.c6d8cbec.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/前端/前端高级面试题及答案，企业真面试题.md","filePath":"interview/backend/前端/前端高级面试题及答案，企业真面试题.md"}'),t={name:"interview/backend/前端/前端高级面试题及答案，企业真面试题.md"},s=r('<h3 id="_1、语义化的理解" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#1%E8%AF%AD%E4%B9%89%E5%8C%96%E7%9A%84%E7%90%86%E8%A7%A3" target="_blank" rel="noreferrer">1、语义化的理解</a> <a class="header-anchor" href="#_1、语义化的理解" aria-label="Permalink to &quot;[1、语义化的理解](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端高级面试题及答案，企业真面试题.md#1语义化的理解)&quot;">​</a></h3><p><strong>1、</strong> 用正确的标签做正确的事情！</p><p><strong>2、</strong> <code>html</code>语义化就是让页面的内容结构化，便于对浏览器、搜索引擎解析；</p><p><strong>3、</strong> 在没有样式<code>CSS</code>情况下也以一种文档格式显示，并且是容易阅读的。</p><p><strong>4、</strong> 搜索引擎的爬虫依赖于标记来确定上下文和各个关键字的权重，利于 <code>SEO</code>。</p><p><strong>5、</strong> 使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解</p><h3 id="_2、css优化" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#2css%E4%BC%98%E5%8C%96" target="_blank" rel="noreferrer">2、CSS优化</a> <a class="header-anchor" href="#_2、css优化" aria-label="Permalink to &quot;[2、CSS优化](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端高级面试题及答案，企业真面试题.md#2css优化)&quot;">​</a></h3><p><strong>1、</strong> 优化选择器路径：使用 .c {} 而不是 .a .b .c {}。</p><p><strong>2、</strong> 选择器合并：共同的属性内容提起出来，压缩空间和资源开销。</p><p><strong>3、</strong> 精准样式：使用 padding-left: 10px 而不是 padding: 0 0 0 10px。</p><p><strong>4、</strong> 雪碧图：将小的图标合并到一张图中，这样所有的图片只需要请求一次。</p><p><strong>5、</strong> 避免通配符：.a .b _ {} 这样的选择器，根据从右到左的解析顺序在解析过程中遇到通配符 _ {} 6、会遍历整个 DOM，性能大大损耗。</p><p><strong>7、</strong> 少用 float：float 在渲染时计算量比较大，可以使用 flex 布局。</p><p><strong>8、</strong> 为 0 值去单位：增加兼容性。</p><p><strong>9、</strong> 压缩文件大小，减少资源下载负担。</p><h3 id="_3、什么是语义化的html" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#3%E4%BB%80%E4%B9%88%E6%98%AF%E8%AF%AD%E4%B9%89%E5%8C%96%E7%9A%84html" target="_blank" rel="noreferrer">3、什么是语义化的HTML?</a> <a class="header-anchor" href="#_3、什么是语义化的html" aria-label="Permalink to &quot;[3、什么是语义化的HTML?](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端高级面试题及答案，企业真面试题.md#3什么是语义化的html)&quot;">​</a></h3><p>直观的认识标签 对于搜索引擎的抓取有好处</p><h3 id="_4、一个满屏品字布局如何设计" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#4%E4%B8%80%E4%B8%AA%E6%BB%A1%E5%B1%8F%E5%93%81%E5%AD%97%E5%B8%83%E5%B1%80%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1" target="_blank" rel="noreferrer">4、一个满屏品字布局如何设计?</a> <a class="header-anchor" href="#_4、一个满屏品字布局如何设计" aria-label="Permalink to &quot;[4、一个满屏品字布局如何设计?](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端高级面试题及答案，企业真面试题.md#4一个满屏品字布局如何设计)&quot;">​</a></h3><p>第一种真正的品字：</p><p><strong>1、</strong> 三块高宽是确定的；</p><p><strong>2、</strong> 上面那块用margin: 0 auto;居中；</p><p><strong>3、</strong> 下面两块用float或者inline-block不换行；</p><p><strong>4、</strong> 用margin调整位置使他们居中。</p><p>第二种全屏的品字布局:</p><p>上面的div设置成100%，下面的div分别宽50%，然后使用float或者inline使其不换行。</p><h3 id="_5、实现不使用-border-画出1px高的线-在不同浏览器的quirks-mode和css-compat模式下都能保持同一效果" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#5%E5%AE%9E%E7%8E%B0%E4%B8%8D%E4%BD%BF%E7%94%A8-border-%E7%94%BB%E5%87%BA1px%E9%AB%98%E7%9A%84%E7%BA%BF%E5%9C%A8%E4%B8%8D%E5%90%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84quirks-mode%E5%92%8Ccss-compat%E6%A8%A1%E5%BC%8F%E4%B8%8B%E9%83%BD%E8%83%BD%E4%BF%9D%E6%8C%81%E5%90%8C%E4%B8%80%E6%95%88%E6%9E%9C**" target="_blank" rel="noreferrer">5、实现不使用 border 画出1px高的线，在不同浏览器的Quirks mode和CSS Compat模式下都能保持同一效果**</a> <a class="header-anchor" href="#_5、实现不使用-border-画出1px高的线-在不同浏览器的quirks-mode和css-compat模式下都能保持同一效果" aria-label="Permalink to &quot;[5、实现不使用 border 画出1px高的线，在不同浏览器的Quirks mode和CSS Compat模式下都能保持同一效果**](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端高级面试题及答案，企业真面试题.md#5实现不使用-border-画出1px高的线在不同浏览器的quirks-mode和css-compat模式下都能保持同一效果**)&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;div style=&quot;height:1px;overflow:hidden;background:red&quot;&gt;&lt;/div&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;div style=&quot;height:1px;overflow:hidden;background:red&quot;&gt;&lt;/div&gt;</span></span></code></pre></div><h3 id="_6、require-import之间的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#6require/import%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">6、<code>require</code>/<code>import</code>之间的区别？</a> <a class="header-anchor" href="#_6、require-import之间的区别" aria-label="Permalink to &quot;[6、`require`/`import`之间的区别？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端高级面试题及答案，企业真面试题.md#6require/import之间的区别)&quot;">​</a></h3><p><strong>1、</strong> <code>require</code>是CommonJS语法，<code>import</code>是ES6语法；</p><p><strong>2、</strong> <code>require</code>只在后端服务器支持，<code>import</code>在高版本浏览器及Node中都可以支持；</p><p><strong>3、</strong> <code>require</code>引入的是原始导出值的复制，<code>import</code>则是导出值的引用；</p><p><strong>4、</strong> <code>require</code>时运行时动态加载，<code>import</code>是静态编译；</p><p><strong>5、</strong> <code>require</code>调用时默认不是严格模式，<code>import</code>则默认调用严格模式.</p><h3 id="_7、iframe-有那些缺点" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#7iframe-%E6%9C%89%E9%82%A3%E4%BA%9B%E7%BC%BA%E7%82%B9" target="_blank" rel="noreferrer">7、iframe 有那些缺点？</a> <a class="header-anchor" href="#_7、iframe-有那些缺点" aria-label="Permalink to &quot;[7、iframe 有那些缺点？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端高级面试题及答案，企业真面试题.md#7iframe-有那些缺点)&quot;">​</a></h3><p>iframe 元素会创建包含另外一个文档的内联框架（即行内框架）。</p><p><strong>主要缺点有：</strong></p><p><strong>1、</strong> iframe 会阻塞主页面的 onload 事件。window 的 onload 事件需要在所有 iframe 加载完毕后（包含里面的元素）才会触发。在 Safari 和 Chrome 里，通过 JavaScript 动态设置 iframe 的 src 可以避免这种阻塞情况。</p><p><strong>2、</strong> 搜索引擎的检索程序无法解读这种页面，不利于网页的 SEO 。</p><p><strong>3、</strong> iframe 和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。</p><p><strong>4、</strong> 浏览器的后退按钮失效。</p><p><strong>5、</strong> 小型的移动设备无法完全显示框架。</p><h3 id="_8、如何减少回流-浏览器绘制过程" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#8%E5%A6%82%E4%BD%95%E5%87%8F%E5%B0%91%E5%9B%9E%E6%B5%81%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%98%E5%88%B6%E8%BF%87%E7%A8%8B" target="_blank" rel="noreferrer">8、如何减少回流？（浏览器绘制过程）</a> <a class="header-anchor" href="#_8、如何减少回流-浏览器绘制过程" aria-label="Permalink to &quot;[8、如何减少回流？（浏览器绘制过程）](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端高级面试题及答案，企业真面试题.md#8如何减少回流浏览器绘制过程)&quot;">​</a></h3><p><strong>1、</strong> 使用 transform 替代 top</p><p><strong>2、</strong> 不要把节点的属性值放在一个循环里当成循环里的变量</p><p><strong>3、</strong> 不要使用 table 布局，可能很小的一个小改动会造成整个 table 的重新布局</p><p><strong>4、</strong> 把 DOM 离线后修改。如：使用 documentFragment 对象在内存里操作 DOM</p><p><strong>5、</strong> 不要一条一条地修改 DOM 的样式。与其这样，还不如预先定义好 css 的 class，然后修改 DOM 的 className。</p><h3 id="_9、你对数据校验是怎么样处理的-jquery-validate" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#9%E4%BD%A0%E5%AF%B9%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E5%A4%84%E7%90%86%E7%9A%84jqueryvalidate" target="_blank" rel="noreferrer">9、你对数据校验是怎么样处理的？jquery.validate？</a> <a class="header-anchor" href="#_9、你对数据校验是怎么样处理的-jquery-validate" aria-label="Permalink to &quot;[9、你对数据校验是怎么样处理的？jquery.validate？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端高级面试题及答案，企业真面试题.md#9你对数据校验是怎么样处理的jqueryvalidate)&quot;">​</a></h3><p>通俗的说，就是为保证数据的完整性，用一种指定的算法对原始数据计算出的一个校验值。接收方用同样的算法计算一次校验值，如果和随数据提供的校验值一样，就说明数据是完整的。</p><p>用正则表达式来处理;</p><p>jquery.validate：为表单验证插件</p><h3 id="_10、设置元素浮动后-该元素的display值是多少" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#10%E8%AE%BE%E7%BD%AE%E5%85%83%E7%B4%A0%E6%B5%AE%E5%8A%A8%E5%90%8E%E8%AF%A5%E5%85%83%E7%B4%A0%E7%9A%84display%E5%80%BC%E6%98%AF%E5%A4%9A%E5%B0%91" target="_blank" rel="noreferrer">10、设置元素浮动后，该元素的display值是多少？</a> <a class="header-anchor" href="#_10、设置元素浮动后-该元素的display值是多少" aria-label="Permalink to &quot;[10、设置元素浮动后，该元素的display值是多少？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端高级面试题及答案，企业真面试题.md#10设置元素浮动后该元素的display值是多少)&quot;">​</a></h3><p>自动变成display:block</p><h3 id="_11、强制转换-显式转换-隐式转换" tabindex="-1">11、强制转换 显式转换 隐式转换? <a class="header-anchor" href="#_11、强制转换-显式转换-隐式转换" aria-label="Permalink to &quot;11、强制转换 显式转换 隐式转换?&quot;">​</a></h3><h3 id="_12、xml和json的区别" tabindex="-1">12、XML和JSON的区别？ <a class="header-anchor" href="#_12、xml和json的区别" aria-label="Permalink to &quot;12、XML和JSON的区别？&quot;">​</a></h3><h3 id="_13、如何创建一个ajax" tabindex="-1">13、如何创建一个ajax <a class="header-anchor" href="#_13、如何创建一个ajax" aria-label="Permalink to &quot;13、如何创建一个ajax&quot;">​</a></h3><h3 id="_14、如何提高webpack构建速度" tabindex="-1">14、如何提高webpack构建速度 <a class="header-anchor" href="#_14、如何提高webpack构建速度" aria-label="Permalink to &quot;14、如何提高webpack构建速度&quot;">​</a></h3><h3 id="_15、介绍一下你对浏览器内核的理解" tabindex="-1">15、介绍一下你对浏览器内核的理解？ <a class="header-anchor" href="#_15、介绍一下你对浏览器内核的理解" aria-label="Permalink to &quot;15、介绍一下你对浏览器内核的理解？&quot;">​</a></h3><h3 id="_16、js延迟加载的方式有哪些" tabindex="-1">16、js延迟加载的方式有哪些？ <a class="header-anchor" href="#_16、js延迟加载的方式有哪些" aria-label="Permalink to &quot;16、js延迟加载的方式有哪些？&quot;">​</a></h3><h3 id="_17、上一个项目是什么-主要负责哪些-购物车流程-支付功能" tabindex="-1">17、上一个项目是什么？主要负责哪些？购物车流程?支付功能? <a class="header-anchor" href="#_17、上一个项目是什么-主要负责哪些-购物车流程-支付功能" aria-label="Permalink to &quot;17、上一个项目是什么？主要负责哪些？购物车流程?支付功能?&quot;">​</a></h3><h3 id="_18、如何确保ajax或连接不走缓存路径" tabindex="-1">18、如何确保ajax或连接不走缓存路径 <a class="header-anchor" href="#_18、如何确保ajax或连接不走缓存路径" aria-label="Permalink to &quot;18、如何确保ajax或连接不走缓存路径&quot;">​</a></h3><h3 id="_19、行内元素有哪些-块级元素有哪些-空-void-元素有那些-行内元素和块级元素有什么区别" tabindex="-1">19、行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？行内元素和块级元素有什么区别？ <a class="header-anchor" href="#_19、行内元素有哪些-块级元素有哪些-空-void-元素有那些-行内元素和块级元素有什么区别" aria-label="Permalink to &quot;19、行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？行内元素和块级元素有什么区别？&quot;">​</a></h3><h3 id="_20、json-的了解" tabindex="-1">20、JSON 的了解？ <a class="header-anchor" href="#_20、json-的了解" aria-label="Permalink to &quot;20、JSON 的了解？&quot;">​</a></h3><h3 id="_21、doctype-的作用是什么" tabindex="-1">21、DOCTYPE 的作用是什么？ <a class="header-anchor" href="#_21、doctype-的作用是什么" aria-label="Permalink to &quot;21、DOCTYPE 的作用是什么？&quot;">​</a></h3><h3 id="_22、表格自动换行怎么实现" tabindex="-1">22、表格自动换行怎么实现？ <a class="header-anchor" href="#_22、表格自动换行怎么实现" aria-label="Permalink to &quot;22、表格自动换行怎么实现？&quot;">​</a></h3><h3 id="_23、什么是闭包" tabindex="-1">23、什么是闭包？ <a class="header-anchor" href="#_23、什么是闭包" aria-label="Permalink to &quot;23、什么是闭包？&quot;">​</a></h3><h3 id="_24、ajax的缺点" tabindex="-1">24、ajax的缺点 <a class="header-anchor" href="#_24、ajax的缺点" aria-label="Permalink to &quot;24、ajax的缺点&quot;">​</a></h3><h3 id="_25、如何解决跨域问题" tabindex="-1">25、如何解决跨域问题? <a class="header-anchor" href="#_25、如何解决跨域问题" aria-label="Permalink to &quot;25、如何解决跨域问题?&quot;">​</a></h3><h3 id="_26、如何解决跨域问题" tabindex="-1">26、如何解决跨域问题? <a class="header-anchor" href="#_26、如何解决跨域问题" aria-label="Permalink to &quot;26、如何解决跨域问题?&quot;">​</a></h3><h3 id="_27、与深拷贝有何区别-如何实现" tabindex="-1">27、与深拷贝有何区别？如何实现？ <a class="header-anchor" href="#_27、与深拷贝有何区别-如何实现" aria-label="Permalink to &quot;27、与深拷贝有何区别？如何实现？&quot;">​</a></h3><h3 id="_28、vue生命周期" tabindex="-1">28、vue生命周期 <a class="header-anchor" href="#_28、vue生命周期" aria-label="Permalink to &quot;28、vue生命周期&quot;">​</a></h3><h3 id="_29、xhtml和-html-有什么区别" tabindex="-1">29、xhtml和 html 有什么区别？ <a class="header-anchor" href="#_29、xhtml和-html-有什么区别" aria-label="Permalink to &quot;29、xhtml和 html 有什么区别？&quot;">​</a></h3><h3 id="_30、link与-import区别与选择" tabindex="-1">30、link与@import区别与选择 <a class="header-anchor" href="#_30、link与-import区别与选择" aria-label="Permalink to &quot;30、link与@import区别与选择&quot;">​</a></h3>',73),E=[s];function n(i,l,d,A,h,c){return e(),o("div",null,E)}const m=a(t,[["render",n]]);export{u as __pageData,m as default};
