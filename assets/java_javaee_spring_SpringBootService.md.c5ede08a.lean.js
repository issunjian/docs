import{_ as e,H as t,o as c,c as r,J as a,E as l,a as s,V as o,C as p}from"./chunks/framework.c6d8cbec.js";const B=JSON.parse('{"title":"Spring Boot","description":"","frontmatter":{},"headers":[],"relativePath":"java/javaee/spring/SpringBootService.md","filePath":"java/javaee/spring/SpringBootService.md"}'),y={name:"java/javaee/spring/SpringBootService.md"},F=o("",120),i=p("p",null,[p("strong",null,"cmd命令(JDK\\bin目录打开)")],-1),E=p("p",null,"密钥库: 保存密钥和对应的证书。【证书只含有公钥】",-1),u=o("",7),d=o("",18);function D(C,g,q,A,m,f){const n=t("font");return c(),r("div",null,[F,a(n,{size:"2",color:"green"},{default:l(()=>[s("Tomcat使用Java提供的密码库，通过Java的Keytool工具生成JKS等格式的证书文件。 Apache使用OpenSSL提供的密码库，生成PEM、KEY、CRT等格式的证书文件。")]),_:1}),i,E,a(n,{size:"2",color:"blond"},{default:l(()=>[s("genkeypair 生成密钥对（非对称加密算法） genseckey 生成密钥（对称加密算法） ")]),_:1}),s(' 创建名为tomcat的密钥对以及自签名的证书，放入mykeystore密钥库中（不存在则创建） `keytool -genkeypair -alias "tomcat" -keyalg "RSA" -validity 180 -keypass "123456" -keystore "D:\\mykeystore.keystore" -storetype PKCS12 -storepass ` '),u,a(n,{size:"2",color:"brown"},{default:l(()=>[s("【未付费注册，不被数字认证机构CA认可：会被浏览器标记为不安全】")]),_:1}),d])}const v=e(y,[["render",D]]);export{B as __pageData,v as default};
