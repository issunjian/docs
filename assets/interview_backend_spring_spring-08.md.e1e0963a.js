import{_ as r,o as a,c as e,V as o}from"./chunks/framework.c6d8cbec.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/spring/spring-08.md","filePath":"interview/backend/spring/spring-08.md"}'),t={name:"interview/backend/spring/spring-08.md"},i=o('<h3 id="_1、springboot常用的starter有哪些" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C2021%E5%B9%B4%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#1springboot%E5%B8%B8%E7%94%A8%E7%9A%84starter%E6%9C%89%E5%93%AA%E4%BA%9B" target="_blank" rel="noreferrer">1、SpringBoot常用的starter有哪些?</a> <a class="header-anchor" href="#_1、springboot常用的starter有哪些" aria-label="Permalink to &quot;[1、SpringBoot常用的starter有哪些?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题大汇总，2021年附答案解析.md#1springboot常用的starter有哪些)&quot;">​</a></h3><p><strong>1、</strong> <code>spring-boot-starter-web</code> (嵌入tomcat和web开发需要servlet与jsp支持)</p><p><strong>2、</strong> <code>spring-boot-starter-data-jpa</code> (数据库支持)</p><p><strong>3、</strong> <code>spring-boot-starter-data-Redis</code> (Redis数据库支持)</p><p><strong>4、</strong> <code>spring-boot-starter-data-solr</code> (solr搜索应用框架支持)</p><p><strong>5、</strong> <code>mybatis-spring-boot-starter</code> (第三方的mybatis集成starter)</p><h3 id="_2、前后端分离-如何维护接口文档" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C2021%E5%B9%B4%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#2%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%A6%82%E4%BD%95%E7%BB%B4%E6%8A%A4%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3-" target="_blank" rel="noreferrer">2、前后端分离，如何维护接口文档 ?</a> <a class="header-anchor" href="#_2、前后端分离-如何维护接口文档" aria-label="Permalink to &quot;[2、前后端分离，如何维护接口文档 ?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题大汇总，2021年附答案解析.md#2前后端分离如何维护接口文档-)&quot;">​</a></h3><p>前后端分离开发日益流行，大部分情况下，我们都是通过 SpringBoot 做前后端分离开发，前后端分离一定会有接口文档，不然会前后端会深深陷入到扯皮中。一个比较笨的方法就是使用 word 或者 md 来维护接口文档，但是效率太低，接口一变，所有人手上的文档都得变。在 SpringBoot 中，这个问题常见的解决方案是 Swagger ，使用 Swagger 我们可以快速生成一个接口文档网站，接口一旦发生变化，文档就会自动更新，所有开发工程师访问这一个在线网站就可以获取到最新的接口文档，非常方便。</p><h3 id="_3、有几种不同类型的自动代理" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C2021%E5%B9%B4%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#3%E6%9C%89%E5%87%A0%E7%A7%8D%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%E7%9A%84%E8%87%AA%E5%8A%A8%E4%BB%A3%E7%90%86" target="_blank" rel="noreferrer">3、有几种不同类型的自动代理？</a> <a class="header-anchor" href="#_3、有几种不同类型的自动代理" aria-label="Permalink to &quot;[3、有几种不同类型的自动代理？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题大汇总，2021年附答案解析.md#3有几种不同类型的自动代理)&quot;">​</a></h3><p>BeanNameAutoProxyCreator</p><p>DefaultAdvisorAutoProxyCreator</p><p>Metadata autoproxying</p><h3 id="_4、什么是freemarker模板" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C2021%E5%B9%B4%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#4%E4%BB%80%E4%B9%88%E6%98%AFfreemarker%E6%A8%A1%E6%9D%BF" target="_blank" rel="noreferrer">4、什么是FreeMarker模板？</a> <a class="header-anchor" href="#_4、什么是freemarker模板" aria-label="Permalink to &quot;[4、什么是FreeMarker模板？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题大汇总，2021年附答案解析.md#4什么是freemarker模板)&quot;">​</a></h3><p>FreeMarker是一个基于Java的模板引擎，最初专注于使用MVC软件架构进行动态网页生成。使用Freemarker的主要优点是表示层和业务层的完全分离。程序员可以处理应用程序代码，而设计人员可以处理html页面设计。最后使用freemarker可以将这些结合起来，给出最终的输出页面。</p><h3 id="_5、什么是持续集成-ci" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C2021%E5%B9%B4%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#5%E4%BB%80%E4%B9%88%E6%98%AF%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90ci" target="_blank" rel="noreferrer">5、什么是持续集成（CI）？</a> <a class="header-anchor" href="#_5、什么是持续集成-ci" aria-label="Permalink to &quot;[5、什么是持续集成（CI）？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题大汇总，2021年附答案解析.md#5什么是持续集成ci)&quot;">​</a></h3><p>持续集成（CI）是每次团队成员提交版本控制更改时自动构建和测试代码的过程。这鼓励开发人员通过在每个小任务完成后将更改合并到共享版本控制存储库来共享代码和单元测试。</p><h3 id="_6、spring-mvc的优点" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C2021%E5%B9%B4%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#6spring-mvc%E7%9A%84%E4%BC%98%E7%82%B9" target="_blank" rel="noreferrer">6、Spring MVC的优点</a> <a class="header-anchor" href="#_6、spring-mvc的优点" aria-label="Permalink to &quot;[6、Spring MVC的优点](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题大汇总，2021年附答案解析.md#6spring-mvc的优点)&quot;">​</a></h3><p><strong>1、</strong> 可以支持各种视图技术,而不仅仅局限于JSP；</p><p><strong>2、</strong> 与Spring框架集成（如IoC容器、AOP等）；</p><p><strong>3、</strong> 清晰的角色分配：前端控制器(dispatcherServlet) , 请求到处理器映射（handlerMapping), 处理器适配器（HandlerAdapter), 视图解析器（ViewResolver）。</p><p><strong>4、</strong> 支持各种请求资源的映射策略。</p><h3 id="_7、spring-initializr-是创建-springboot-projects-的唯一方法吗" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C2021%E5%B9%B4%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#7spring-initializr-%E6%98%AF%E5%88%9B%E5%BB%BA-springboot-projects-%E7%9A%84%E5%94%AF%E4%B8%80%E6%96%B9%E6%B3%95%E5%90%97" target="_blank" rel="noreferrer">7、Spring Initializr 是创建 SpringBoot Projects 的唯一方法吗？</a> <a class="header-anchor" href="#_7、spring-initializr-是创建-springboot-projects-的唯一方法吗" aria-label="Permalink to &quot;[7、Spring Initializr 是创建 SpringBoot Projects 的唯一方法吗？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题大汇总，2021年附答案解析.md#7spring-initializr-是创建-springboot-projects-的唯一方法吗)&quot;">​</a></h3><p>不是的。</p><p>Spring Initiatlizr 让创建 SpringBoot 项目变的很容易，但是，你也可以通过设置一个 maven 项目并添加正确的依赖项来开始一个项目。</p><p>在我们的 Spring 课程中，我们使用两种方法来创建项目。</p><p>第一种方法是 start.spring.io 。</p><p>另外一种方法是在项目的标题为“Basic Web Application”处进行手动设置。</p><p>手动设置一个 maven 项目</p><p><strong>这里有几个重要的步骤：</strong></p><p><strong>1、</strong> 在 Eclipse 中，使用文件 - 新建 Maven 项目来创建一个新项目</p><p><strong>2、</strong> 添加依赖项。</p><p><strong>3、</strong> 添加 maven 插件。</p><p><strong>4、</strong> 添加 SpringBoot 应用程序类。</p><p>到这里，准备工作已经做好！</p><h3 id="_8、使用spring通过什么方式访问hibernate" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C2021%E5%B9%B4%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#8%E4%BD%BF%E7%94%A8spring%E9%80%9A%E8%BF%87%E4%BB%80%E4%B9%88%E6%96%B9%E5%BC%8F%E8%AE%BF%E9%97%AEhibernate" target="_blank" rel="noreferrer">8、使用Spring通过什么方式访问Hibernate?</a> <a class="header-anchor" href="#_8、使用spring通过什么方式访问hibernate" aria-label="Permalink to &quot;[8、使用Spring通过什么方式访问Hibernate?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题大汇总，2021年附答案解析.md#8使用spring通过什么方式访问hibernate)&quot;">​</a></h3><p><strong>在Spring中有两种方式访问Hibernate：</strong></p><p>控制反转 Hibernate Template和 Callback。</p><p>继承 HibernateDAOSupport提供一个AOP 拦截器。</p><h3 id="_9、什么是bean的自动装配" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C2021%E5%B9%B4%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#9%E4%BB%80%E4%B9%88%E6%98%AFbean%E7%9A%84%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D" target="_blank" rel="noreferrer">9、什么是bean的自动装配？</a> <a class="header-anchor" href="#_9、什么是bean的自动装配" aria-label="Permalink to &quot;[9、什么是bean的自动装配？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题大汇总，2021年附答案解析.md#9什么是bean的自动装配)&quot;">​</a></h3><p>Spring 容器能够自动装配相互合作的bean，这意味着容器不需要和配置，能通过Bean工厂自动处理bean之间的协作。</p><h3 id="_10、-qualifier-注解-https-gitee-com-souyunku-devbooks-blob-master-docs-spring-spring面试题大汇总-2021年附答案解析-md-10-qualifier-qualifier-注解" tabindex="-1">[10、<a href="/docs/Qualifier.html">@Qualifier </a> 注解](<a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C2021%E5%B9%B4%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#10%5B@qualifier-%5D/qualifier--%E6%B3%A8%E8%A7%A3" target="_blank" rel="noreferrer">https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题大汇总，2021年附答案解析.md#10[@qualifier-]/qualifier--注解</a>) <a class="header-anchor" href="#_10、-qualifier-注解-https-gitee-com-souyunku-devbooks-blob-master-docs-spring-spring面试题大汇总-2021年附答案解析-md-10-qualifier-qualifier-注解" aria-label="Permalink to &quot;[10、[@Qualifier ](/Qualifier ) 注解](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题大汇总，2021年附答案解析.md#10[@qualifier-]/qualifier--注解)&quot;">​</a></h3><p>当有多个相同类型的bean却只有一个需要自动装配时，将<a href="/docs/Qualifier.html">@Qualifier </a> 注解和<a href="/docs/Autowire.html">@Autowire </a> 注解结合使用以消除这种混淆，指定需要装配的确切的bean。</p><h3 id="_11、spring-cloud-config" tabindex="-1">11、Spring Cloud Config <a class="header-anchor" href="#_11、spring-cloud-config" aria-label="Permalink to &quot;11、Spring Cloud Config&quot;">​</a></h3><h3 id="_12、yaml-配置的优势在哪里" tabindex="-1">12、YAML 配置的优势在哪里 ? <a class="header-anchor" href="#_12、yaml-配置的优势在哪里" aria-label="Permalink to &quot;12、YAML 配置的优势在哪里 ?&quot;">​</a></h3><h3 id="_13、服务注册和发现是什么意思-spring-cloud-如何实现" tabindex="-1">13、服务注册和发现是什么意思？Spring Cloud 如何实现？ <a class="header-anchor" href="#_13、服务注册和发现是什么意思-spring-cloud-如何实现" aria-label="Permalink to &quot;13、服务注册和发现是什么意思？Spring Cloud 如何实现？&quot;">​</a></h3><h3 id="_14、springboot-支持哪些日志框架-推荐和默认的日志框架是哪个" tabindex="-1">14、SpringBoot 支持哪些日志框架？推荐和默认的日志框架是哪个？ <a class="header-anchor" href="#_14、springboot-支持哪些日志框架-推荐和默认的日志框架是哪个" aria-label="Permalink to &quot;14、SpringBoot 支持哪些日志框架？推荐和默认的日志框架是哪个？&quot;">​</a></h3><h3 id="_15、什么是基于java的spring注解配置-给一些注解的例子" tabindex="-1">15、什么是基于Java的Spring注解配置? 给一些注解的例子. <a class="header-anchor" href="#_15、什么是基于java的spring注解配置-给一些注解的例子" aria-label="Permalink to &quot;15、什么是基于Java的Spring注解配置? 给一些注解的例子.&quot;">​</a></h3><h3 id="_16、什么是-springboot" tabindex="-1">16、什么是 SpringBoot？ <a class="header-anchor" href="#_16、什么是-springboot" aria-label="Permalink to &quot;16、什么是 SpringBoot？&quot;">​</a></h3><h3 id="_17、什么是eureka" tabindex="-1">17、什么是Eureka <a class="header-anchor" href="#_17、什么是eureka" aria-label="Permalink to &quot;17、什么是Eureka&quot;">​</a></h3><h3 id="_18、自动装配有哪些局限性" tabindex="-1">18、自动装配有哪些局限性 ? <a class="header-anchor" href="#_18、自动装配有哪些局限性" aria-label="Permalink to &quot;18、自动装配有哪些局限性 ?&quot;">​</a></h3><h3 id="_19、什么是swagger-你用springboot实现了它吗" tabindex="-1">19、什么是Swagger？你用SpringBoot实现了它吗？ <a class="header-anchor" href="#_19、什么是swagger-你用springboot实现了它吗" aria-label="Permalink to &quot;19、什么是Swagger？你用SpringBoot实现了它吗？&quot;">​</a></h3><h3 id="_20、spring-ioc-的实现机制。" tabindex="-1">20、Spring IoC 的实现机制。 <a class="header-anchor" href="#_20、spring-ioc-的实现机制。" aria-label="Permalink to &quot;20、Spring IoC 的实现机制。&quot;">​</a></h3><h3 id="_21、-autowired-注解有什么用" tabindex="-1">21、<a href="/docs/Autowired.html">@Autowired </a> 注解有什么用？ <a class="header-anchor" href="#_21、-autowired-注解有什么用" aria-label="Permalink to &quot;21、[@Autowired ](/Autowired ) 注解有什么用？&quot;">​</a></h3><h3 id="_22、requestmapping-和-getmapping-的不同之处在哪里" tabindex="-1">22、RequestMapping 和 GetMapping 的不同之处在哪里？ <a class="header-anchor" href="#_22、requestmapping-和-getmapping-的不同之处在哪里" aria-label="Permalink to &quot;22、RequestMapping 和 GetMapping 的不同之处在哪里？&quot;">​</a></h3><h3 id="_23、开启-springboot-特性有哪几种方式" tabindex="-1">23、开启 SpringBoot 特性有哪几种方式？ <a class="header-anchor" href="#_23、开启-springboot-特性有哪几种方式" aria-label="Permalink to &quot;23、开启 SpringBoot 特性有哪几种方式？&quot;">​</a></h3><h3 id="_24、spring支持的事务管理类型" tabindex="-1">24、Spring支持的事务管理类型 <a class="header-anchor" href="#_24、spring支持的事务管理类型" aria-label="Permalink to &quot;24、Spring支持的事务管理类型&quot;">​</a></h3><h3 id="_25、什么是spring-initializer" tabindex="-1">25、什么是Spring Initializer? <a class="header-anchor" href="#_25、什么是spring-initializer" aria-label="Permalink to &quot;25、什么是Spring Initializer?&quot;">​</a></h3><h3 id="_26、spring-aop-and-aspectj-aop-有什么区别" tabindex="-1">26、Spring AOP and AspectJ AOP 有什么区别？ <a class="header-anchor" href="#_26、spring-aop-and-aspectj-aop-有什么区别" aria-label="Permalink to &quot;26、Spring AOP and AspectJ AOP 有什么区别？&quot;">​</a></h3><h3 id="_27、什么是不同类型的双因素身份认证" tabindex="-1">27、什么是不同类型的双因素身份认证？ <a class="header-anchor" href="#_27、什么是不同类型的双因素身份认证" aria-label="Permalink to &quot;27、什么是不同类型的双因素身份认证？&quot;">​</a></h3><h3 id="_28、springboot与springcloud-区别" tabindex="-1">28、SpringBoot与SpringCloud 区别 <a class="header-anchor" href="#_28、springboot与springcloud-区别" aria-label="Permalink to &quot;28、SpringBoot与SpringCloud 区别&quot;">​</a></h3><h3 id="_29、我们如何在测试中消除非决定论" tabindex="-1">29、我们如何在测试中消除非决定论？ <a class="header-anchor" href="#_29、我们如何在测试中消除非决定论" aria-label="Permalink to &quot;29、我们如何在测试中消除非决定论？&quot;">​</a></h3><h3 id="_30、什么是oauth" tabindex="-1">30、什么是Oauth？ <a class="header-anchor" href="#_30、什么是oauth" aria-label="Permalink to &quot;30、什么是Oauth？&quot;">​</a></h3>',62),n=[i];function s(p,g,l,E,h,d){return a(),e("div",null,n)}const b=r(t,[["render",s]]);export{c as __pageData,b as default};
