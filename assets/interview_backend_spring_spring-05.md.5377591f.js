import{_ as a,o as e,c as n,V as r}from"./chunks/framework.c6d8cbec.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/spring/spring-05.md","filePath":"interview/backend/spring/spring-05.md"}'),o={name:"interview/backend/spring/spring-05.md"},t=r(`<h3 id="_1、什么是spring-batch" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E6%9C%80%E6%96%B0%E7%89%88.md#1%E4%BB%80%E4%B9%88%E6%98%AFspring-batch" target="_blank" rel="noreferrer">1、什么是Spring Batch？</a> <a class="header-anchor" href="#_1、什么是spring-batch" aria-label="Permalink to &quot;[1、什么是Spring Batch？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题及答案，最新版.md#1什么是spring-batch)&quot;">​</a></h3><p>SpringBoot Batch提供可重用的函数，这些函数在处理大量记录时非常重要，包括日志/跟踪，事务管理，作业处理统计信息，作业重新启动，跳过和资源管理。它还提供了更先进的技术服务和功能，通过优化和分区技术，可以实现极高批量和高性能批处理作业。简单以及复杂的大批量批处理作业可以高度可扩展的方式利用框架处理重要大量的信息。</p><h3 id="_2、spring-dao-有什么用" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E6%9C%80%E6%96%B0%E7%89%88.md#2spring-dao-%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8" target="_blank" rel="noreferrer">2、spring DAO 有什么用？</a> <a class="header-anchor" href="#_2、spring-dao-有什么用" aria-label="Permalink to &quot;[2、spring DAO 有什么用？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题及答案，最新版.md#2spring-dao-有什么用)&quot;">​</a></h3><p>Spring DAO 使得 JDBC，Hibernate 或 JDO 这样的数据访问技术更容易以一种统一的方式工作。 这使得用户容易在持久性技术之间切换。 它还允许您在编写代码时，无需考虑捕获每种技术不同的异常。</p><h3 id="_3、什么是-yaml" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E6%9C%80%E6%96%B0%E7%89%88.md#3%E4%BB%80%E4%B9%88%E6%98%AF-yaml" target="_blank" rel="noreferrer">3、什么是 YAML？</a> <a class="header-anchor" href="#_3、什么是-yaml" aria-label="Permalink to &quot;[3、什么是 YAML？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题及答案，最新版.md#3什么是-yaml)&quot;">​</a></h3><p>YAML 是一种人类可读的数据序列化语言。它通常用于配置文件。与属性文件相比，如果我们想要在配置文件中添加复杂的属性，YAML 文件就更加结构化，而且更少混淆。可以看出 YAML 具有分层配置数据。</p><h3 id="_4、使用中碰到的坑" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E6%9C%80%E6%96%B0%E7%89%88.md#4%E4%BD%BF%E7%94%A8%E4%B8%AD%E7%A2%B0%E5%88%B0%E7%9A%84%E5%9D%91" target="_blank" rel="noreferrer">4、使用中碰到的坑</a> <a class="header-anchor" href="#_4、使用中碰到的坑" aria-label="Permalink to &quot;[4、使用中碰到的坑](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题及答案，最新版.md#4使用中碰到的坑)&quot;">​</a></h3><p><strong>1、</strong> 超时：确保Hystrix超时时间配置为于配置的Ribbon超时时间</p><p><strong>2、</strong> feign path：feign客户端在部署时若有contextpath应该设置 path=&quot;/***&quot;来匹配你的服务名。</p><p><strong>3、</strong> 版本：SpringBoot和springcloud版本要兼容。</p><h3 id="_5、什么是-aop-通知" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E6%9C%80%E6%96%B0%E7%89%88.md#5%E4%BB%80%E4%B9%88%E6%98%AF-aop-%E9%80%9A%E7%9F%A5" target="_blank" rel="noreferrer">5、什么是 AOP 通知</a> <a class="header-anchor" href="#_5、什么是-aop-通知" aria-label="Permalink to &quot;[5、什么是 AOP 通知](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题及答案，最新版.md#5什么是-aop-通知)&quot;">​</a></h3><p>通知是个在方法执行前或执行后要做的动作，实际上是程序执行时要通过SpringAOP框架触发的代码段。</p><p>Spring切面可以应用五种类型的通知：</p><p><strong>1、</strong> before：前置通知，在一个方法执行前被调用。</p><p><strong>2、</strong> after: 在方法执行之后调用的通知，无论方法执行是否成功。</p><p><strong>3、</strong> after-returning: 仅当方法成功完成后执行的通知。</p><p><strong>4、</strong> after-throwing: 在方法抛出异常退出时执行的通知。</p><p><strong>5、</strong> around: 在方法执行之前和之后调用的通知。</p><h3 id="_6、列举-ioc-的一些好处" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E6%9C%80%E6%96%B0%E7%89%88.md#6%E5%88%97%E4%B8%BE-ioc-%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%BD%E5%A4%84" target="_blank" rel="noreferrer">6、列举 IoC 的一些好处</a> <a class="header-anchor" href="#_6、列举-ioc-的一些好处" aria-label="Permalink to &quot;[6、列举 IoC 的一些好处](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题及答案，最新版.md#6列举-ioc-的一些好处)&quot;">​</a></h3><p><strong>1、</strong> IoC 的一些好处是：</p><p><strong>2、</strong> 它将最小化应用程序中的代码量。</p><p><strong>3、</strong> 它将使您的应用程序易于测试，因为它不需要单元测试用例中的任何单例或 JNDI 查找机制。</p><p><strong>4、</strong> 它以最小的影响和最少的侵入机制促进松耦合。</p><p><strong>5、</strong> 它支持即时的实例化和延迟加载服务。</p><h3 id="_7、springboot中的监视器是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E6%9C%80%E6%96%B0%E7%89%88.md#7springboot%E4%B8%AD%E7%9A%84%E7%9B%91%E8%A7%86%E5%99%A8%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">7、SpringBoot中的监视器是什么？</a> <a class="header-anchor" href="#_7、springboot中的监视器是什么" aria-label="Permalink to &quot;[7、SpringBoot中的监视器是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题及答案，最新版.md#7springboot中的监视器是什么)&quot;">​</a></h3><p>Spring boot actuator是spring启动框架中的重要功能之一。Spring boot监视器可帮助您访问生产环境中正在运行的应用程序的当前状态。有几个指标必须在生产环境中进行检查和监控。即使一些外部应用程序可能正在使用这些服务来向相关人员触发警报消息。监视器模块公开了一组可直接作为HTTP URL访问的REST端点来检查状态。</p><h3 id="_8、springboot-中的监视器是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E6%9C%80%E6%96%B0%E7%89%88.md#8springboot-%E4%B8%AD%E7%9A%84%E7%9B%91%E8%A7%86%E5%99%A8%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">8、SpringBoot 中的监视器是什么？</a> <a class="header-anchor" href="#_8、springboot-中的监视器是什么" aria-label="Permalink to &quot;[8、SpringBoot 中的监视器是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题及答案，最新版.md#8springboot-中的监视器是什么)&quot;">​</a></h3><p>Spring boot actuator 是 spring 启动框架中的重要功能之一。Spring boot 监视器可帮助您访问生产环境中正在运行的应用程序的当前状态。有几个指标必须在生产环境中进行检查和监控。即使一些外部应用程序可能正在使用这些服务来向相关人员触发警报消息。监视器模块公开了一组可直接作为 HTTP URL 访问的REST 端点来检查状态。</p><h3 id="_9、spring-mvc里面拦截器是怎么写的" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E6%9C%80%E6%96%B0%E7%89%88.md#9spring-mvc%E9%87%8C%E9%9D%A2%E6%8B%A6%E6%88%AA%E5%99%A8%E6%98%AF%E6%80%8E%E4%B9%88%E5%86%99%E7%9A%84" target="_blank" rel="noreferrer">9、Spring MVC里面拦截器是怎么写的</a> <a class="header-anchor" href="#_9、spring-mvc里面拦截器是怎么写的" aria-label="Permalink to &quot;[9、Spring MVC里面拦截器是怎么写的](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题及答案，最新版.md#9spring-mvc里面拦截器是怎么写的)&quot;">​</a></h3><p>有两种写法,一种是实现HandlerInterceptor接口，另外一种是继承适配器类，接着在接口方法当中，实现处理逻辑；然后在Spring MVC的配置文件中配置拦截器即可：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;!-- 配置Spring MVC的拦截器 --&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt; mvc: interceptors &gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;!-- 配置一个拦截器的Bean就可以了 默认是对所有请求都拦截 --&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt; bean id = &quot;myInterceptor&quot;</span></span>
<span class="line"><span style="color:#f6f6f4;">class = &quot;com.zwp.action.MyHandlerInterceptor&quot; &gt; &lt; /bean&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;!-- 只针对部分请求拦截 --&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;mvc:interceptor&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">   &lt;mvc:mapping path=&quot;/modelMap.do &quot; /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">   &lt;bean class=&quot;</span></span>
<span class="line"><span style="color:#f6f6f4;">com.</span></span>
<span class="line"><span style="color:#f6f6f4;">zwp.action.MyHandlerInterceptorAdapter &quot; /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/mvc:interceptor&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/mvc:interceptors&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;!-- 配置Spring MVC的拦截器 --&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt; mvc: interceptors &gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;!-- 配置一个拦截器的Bean就可以了 默认是对所有请求都拦截 --&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt; bean id = &quot;myInterceptor&quot;</span></span>
<span class="line"><span style="color:#24292e;">class = &quot;com.zwp.action.MyHandlerInterceptor&quot; &gt; &lt; /bean&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;!-- 只针对部分请求拦截 --&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;mvc:interceptor&gt;</span></span>
<span class="line"><span style="color:#24292e;">   &lt;mvc:mapping path=&quot;/modelMap.do &quot; /&gt;</span></span>
<span class="line"><span style="color:#24292e;">   &lt;bean class=&quot;</span></span>
<span class="line"><span style="color:#24292e;">com.</span></span>
<span class="line"><span style="color:#24292e;">zwp.action.MyHandlerInterceptorAdapter &quot; /&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/mvc:interceptor&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/mvc:interceptors&gt;</span></span></code></pre></div><h3 id="_10、spring-cache-三种常用的缓存注解和意义" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E6%9C%80%E6%96%B0%E7%89%88.md#10spring-cache-%E4%B8%89%E7%A7%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E7%BC%93%E5%AD%98%E6%B3%A8%E8%A7%A3%E5%92%8C%E6%84%8F%E4%B9%89" target="_blank" rel="noreferrer">10、Spring Cache 三种常用的缓存注解和意义？</a> <a class="header-anchor" href="#_10、spring-cache-三种常用的缓存注解和意义" aria-label="Permalink to &quot;[10、Spring Cache 三种常用的缓存注解和意义？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring高级面试题及答案，最新版.md#10spring-cache-三种常用的缓存注解和意义)&quot;">​</a></h3><p><strong>1、</strong> <a href="/docs/Cacheable.html">@Cacheable </a> ，用来声明方法是可缓存，将结果存储到缓存中以便后续使用相同参数调用时不需执行实际的方法，直接从缓存中取值。</p><p><strong>2、</strong> @CachePut，使用 <a href="/docs/CachePut.html">@CachePut </a> 标注的方法在执行前，不会去检查缓存中是否存在之前执行过的结果，而是每次都会执行该方法，并将执行结果以键值对的形式存入指定的缓存中。</p><p><strong>3、</strong> @CacheEvict，是用来标注在需要清除缓存元素的方法或类上的，当标记在一个类上时表示其中所有的方法的执行都会触发缓存的清除操作。</p><h3 id="_11、springboot有哪些优点" tabindex="-1">11、SpringBoot有哪些优点？ <a class="header-anchor" href="#_11、springboot有哪些优点" aria-label="Permalink to &quot;11、SpringBoot有哪些优点？&quot;">​</a></h3><h3 id="_12、什么是-spring-batch" tabindex="-1">12、什么是 Spring Batch？ <a class="header-anchor" href="#_12、什么是-spring-batch" aria-label="Permalink to &quot;12、什么是 Spring Batch？&quot;">​</a></h3><h3 id="_13、什么是idempotence以及它在哪里使用" tabindex="-1">13、什么是Idempotence以及它在哪里使用？ <a class="header-anchor" href="#_13、什么是idempotence以及它在哪里使用" aria-label="Permalink to &quot;13、什么是Idempotence以及它在哪里使用？&quot;">​</a></h3><h3 id="_14、springboot自动配置的原理是什么" tabindex="-1">14、SpringBoot自动配置的原理是什么？ <a class="header-anchor" href="#_14、springboot自动配置的原理是什么" aria-label="Permalink to &quot;14、SpringBoot自动配置的原理是什么？&quot;">​</a></h3><h3 id="_15、什么是基于注解的容器配置" tabindex="-1">15、什么是基于注解的容器配置 <a class="header-anchor" href="#_15、什么是基于注解的容器配置" aria-label="Permalink to &quot;15、什么是基于注解的容器配置&quot;">​</a></h3><h3 id="_16、-controller注解的作用" tabindex="-1">16、@Controller注解的作用 <a class="header-anchor" href="#_16、-controller注解的作用" aria-label="Permalink to &quot;16、@Controller注解的作用&quot;">​</a></h3><h3 id="_17、springboot-怎么用好自动配置-精髓" tabindex="-1">17、SpringBoot 怎么用好自动配置，精髓: <a class="header-anchor" href="#_17、springboot-怎么用好自动配置-精髓" aria-label="Permalink to &quot;17、SpringBoot 怎么用好自动配置，精髓:&quot;">​</a></h3><h3 id="_18、什么是耦合和凝聚力" tabindex="-1">18、什么是耦合和凝聚力？ <a class="header-anchor" href="#_18、什么是耦合和凝聚力" aria-label="Permalink to &quot;18、什么是耦合和凝聚力？&quot;">​</a></h3><h3 id="_19、有哪些类型的通知-advice" tabindex="-1">19、有哪些类型的通知（Advice）？ <a class="header-anchor" href="#_19、有哪些类型的通知-advice" aria-label="Permalink to &quot;19、有哪些类型的通知（Advice）？&quot;">​</a></h3><h3 id="_20、aop-有哪些实现方式" tabindex="-1">20、AOP 有哪些实现方式？ <a class="header-anchor" href="#_20、aop-有哪些实现方式" aria-label="Permalink to &quot;20、AOP 有哪些实现方式？&quot;">​</a></h3><h3 id="_21、微服务架构的优缺点是什么" tabindex="-1">21、微服务架构的优缺点是什么？ <a class="header-anchor" href="#_21、微服务架构的优缺点是什么" aria-label="Permalink to &quot;21、微服务架构的优缺点是什么？&quot;">​</a></h3><h3 id="_22、您使用了哪些starter-maven依赖项" tabindex="-1">22、您使用了哪些starter maven依赖项？ <a class="header-anchor" href="#_22、您使用了哪些starter-maven依赖项" aria-label="Permalink to &quot;22、您使用了哪些starter maven依赖项？&quot;">​</a></h3><h3 id="_23、如何集成springboot和activemq" tabindex="-1">23、如何集成SpringBoot和ActiveMQ？ <a class="header-anchor" href="#_23、如何集成springboot和activemq" aria-label="Permalink to &quot;23、如何集成SpringBoot和ActiveMQ？&quot;">​</a></h3><h3 id="_24、第一层缓存" tabindex="-1">24、第一层缓存： <a class="header-anchor" href="#_24、第一层缓存" aria-label="Permalink to &quot;24、第一层缓存：&quot;">​</a></h3><h3 id="_25、如何通过hibernatedaosupport将spring和hibernate结合起来" tabindex="-1">25、如何通过HibernateDaoSupport将Spring和Hibernate结合起来？ <a class="header-anchor" href="#_25、如何通过hibernatedaosupport将spring和hibernate结合起来" aria-label="Permalink to &quot;25、如何通过HibernateDaoSupport将Spring和Hibernate结合起来？&quot;">​</a></h3><h3 id="_26、jpa-和-hibernate-有哪些区别-jpa-可以支持动态-sql-吗" tabindex="-1">26、JPA 和 Hibernate 有哪些区别？JPA 可以支持动态 SQL 吗？ <a class="header-anchor" href="#_26、jpa-和-hibernate-有哪些区别-jpa-可以支持动态-sql-吗" aria-label="Permalink to &quot;26、JPA 和 Hibernate 有哪些区别？JPA 可以支持动态 SQL 吗？&quot;">​</a></h3><h3 id="_27、微服务的缺点" tabindex="-1">27、微服务的缺点： <a class="header-anchor" href="#_27、微服务的缺点" aria-label="Permalink to &quot;27、微服务的缺点：&quot;">​</a></h3><h3 id="_28、spring由哪些模块组成" tabindex="-1">28、Spring由哪些模块组成? <a class="header-anchor" href="#_28、spring由哪些模块组成" aria-label="Permalink to &quot;28、Spring由哪些模块组成?&quot;">​</a></h3><h3 id="_29、-requestmapping注解的作用" tabindex="-1">29、@RequestMapping注解的作用 <a class="header-anchor" href="#_29、-requestmapping注解的作用" aria-label="Permalink to &quot;29、@RequestMapping注解的作用&quot;">​</a></h3><h3 id="_30、spring-cloud-zookeeper" tabindex="-1">30、Spring Cloud Zookeeper <a class="header-anchor" href="#_30、spring-cloud-zookeeper" aria-label="Permalink to &quot;30、Spring Cloud Zookeeper&quot;">​</a></h3>`,55),s=[t];function p(i,l,c,g,h,E){return e(),n("div",null,s)}const b=a(o,[["render",p]]);export{u as __pageData,b as default};
