import{_ as s,o as n,c as a,V as e}from"./chunks/framework.c6d8cbec.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/python/python-01.md","filePath":"interview/backend/python/python-01.md"}'),t={name:"interview/backend/python/python-01.md"},p=e(`<h3 id="_1、mysql的增删改查" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#1mysql%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5" target="_blank" rel="noreferrer">1、MySQL的增删改查</a> <a class="header-anchor" href="#_1、mysql的增删改查" aria-label="Permalink to &quot;[1、MySQL的增删改查](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python高级面试题及答案，企业真面试题.md#1mysql的增删改查)&quot;">​</a></h3><p><strong>增</strong></p><p><strong>指定字段名</strong></p><p>语法：INSERT INTO 表名（字段名1，字段名2，…）VALUES（值1，值2，…）；</p><p>举例：INSERT INTO student(id,name,grade) VALUES(1,&#39;zhangshan&#39;,98);</p><p><strong>不指定字段名</strong></p><p>语法：INSERT INTO 表名 VALUES(值11，值2，…）；</p><p>举例：INSERT INTO student VALUES (2,&#39;lisi&#39;,62);</p><p><strong>其他写法</strong></p><p>语法：INSERT INTO 表名 SET 字段名1=值1[,字段名2=值2，…]</p><p>举例：INSERT INTO student SET id=4，name=&#39;zhaoliu&#39;,grade=72;</p><p><strong>同时添加多条数据</strong></p><p>语法：INSERT INTO 表名[(字段名1，字段名2，…)] VALUES （值1，值2，…），（值1，值2，…），…（值1，值2，…）</p><p>举例：INSERT INTO student VALUES (5，‘lilei’,99), (6,&#39;hanmeimei&#39;,87), (8,&#39;poly&#39;,76);</p><p><strong>删</strong></p><p><strong>删除部分数据</strong></p><p>语法：DELETE FROM 表名 [WHERE 条件表达式]</p><p>命令：DELETE FROM student WHERE id=7;</p><p><strong>删除全部数据</strong></p><p>语法：DELETE FROM 表名</p><p>命令：DELETE FROM student；</p><p><strong>推荐的删除全部数据</strong></p><p>语法：TRUNCTE [TABLE ] 表名</p><p>举例：TRUNCATE TABLE student</p><p><strong>改</strong></p><p><strong>更新部分数据</strong></p><p>语法：UPDATE 表名 SET 字段名1=值1，[ ，字段名2=值2，…] [ WHERE 条件表达式 ]</p><p>命令：UPDATE student SET name=‘caocao’,grade=50 WHERE id=1;</p><p><strong>更新全部数据</strong></p><p>语法：UPDATE 表名 SET 字段名=值</p><p>命令：UPDATE student SET grade=80；</p><p><strong>查</strong></p><p><strong>查询所有字段</strong></p><p>语法：SELECT 字段名1，字段名2，… FROM 表名 （该语法也可以查询部分字段）</p><p>语法：SELECT FROM 表名；</p><p><strong>按条件查询</strong></p><p>语法：SELECT 字段名1，字段名2，… FROM 表名 WHERE 条件表达式</p><p>命令：SELECT id，name FROM student2 WHERE id=4;</p><p><strong>带IN关键字的查询</strong></p><p><strong>1、</strong> 语法：SELECT | 字段名1，字段名2，… FROM 表名 WHERE 字段名 [ NOT ] IN （元素1，元素2，…）</p><p><strong>2、</strong> 命令：SELECT FROM student2 WHERE id IN （1,2,3）；</p><p><strong>3、</strong> 带 BETWEEN AND 关键字的查询</p><p><strong>4、</strong> 语法：SELECT | { 字段名1，字段名2，… } FROM 表名 WHERE 字段名 [ NOT ] BETWEEN 值1 AND 值2；</p><p><strong>5、</strong> 命令：SELECT id,name FROM students WHERE id BETWEEN 2 AND 5;</p><p><strong>空值查询</strong></p><p>语法：SELECT | 字段名1，字段名2，… FROM 表名 WHERE 字段名 IS [ NOT ] NULL</p><p>命令：SELECT FROM student2 WHERE gender IS NULL;</p><p><strong>带 DISTINCT 关键字的查询</strong></p><p>语法：SELECT DISTINCT 字段名 FROM 表名；</p><p>命令：SELECT DISTINCT gender FROM student2;</p><p><strong>带 LIKE 关键字的查询</strong></p><p>语法：SELECT | 字段名1，字段名2，… FROM 表名 WHERE 字段名 [ NOT ] LIKE ‘匹配字符串’;</p><p><strong>注意：%表示匹配任意长度的字符串，_表示匹配单个字符串</strong></p><p><strong>3、</strong> 命令：SELECT id,name FROM student2 WHERE name LIKE &quot;S%&quot;;</p><p><strong>4、</strong> 命令：SELECT id,name FROM student2 WHERE name LIKE &#39;w%g&#39;;</p><p><strong>5、</strong> 命令：SELECT id,name FROM student2 WHERE name NOT LIKE &#39;%y%&#39;;</p><p><strong>6、</strong> 命令：SELECT FROM student2 WHERE name LIKE &#39;wu_ong&#39;;</p><p><strong>带 AND 关键字的多条件查询</strong></p><p><strong>1、</strong> 语法：SELECT | 字段名1，字段名2，… FROM 表名 WHERE 条件表达式1 AND 条件表达式2 [ … AND 条件表达式 n ];</p><p><strong>2、</strong> 命令：SELECT id,name FROM student2 WHERE id&lt;5 AND gender=&#39;女&#39;;</p><p><strong>带 OR 关键字的多条件查询</strong></p><p><strong>1、</strong> 语法：SELECT | 字段名1，字段名2，… FROM 表名 WHERE 条件表达式1 OR 条件表达式2 [ … OR 条件表达式 n ];</p><p><strong>2、</strong> 命令：SELECT id,name ,gender FROM student2 WHERE id&lt;3 OR gender=&#39;女&#39;;</p><p><strong>AND和OR一起使用时，AND的优先级高于OR</strong></p><p><strong>聚合函数</strong></p><p><strong>COUNT()函数：统计记录的条数</strong></p><p>语法：SELECT COUNT(*) FROM 表名举例：</p><p>命令：SELECT COUNT(*) FROM student2;</p><p><strong>SUM()函数：求出表中某个字段所有值的总和</strong></p><p>语法：SELECT SUM(字段名) FROM 表名；</p><p>命令：SELECT SUM(grade) FROM student2;</p><p><strong>AVG()函数：求出表中某个字段所有值的平均值</strong></p><p>语法：SELECT AVG(字段名) FROM 表名；</p><p>命令：SELECT AVG(grade) FROM student2;</p><p><strong>MAX()函数：求出表中某个字段所有值的最大值</strong></p><p>语法：SELECT MAX(字段名) FROM 表名；</p><p>命令：SELECT MAX(grade) FROM student2;</p><p><strong>MIN()函数：求出表中某个字段所有值的最小值</strong></p><p>语法：SELECT MIN(字段名) FROM 表名；</p><p>命令：SELECT MIN(grade) FROM student2;</p><p><strong>对查询结果进行排序</strong></p><p>语法：SELECT 字段名1，字段名2，… FROM 表名 ORDER BY 字段名1 [ ASC | DESC ],字段名2 [ ASC | DESC ]</p><p>(升序)命令：SELECT FROM student2 ORDER BY grade;</p><p>(降序)命令：命令：SELECT FROM student2 ORDER BY grade DESC;</p><p><strong>分组查询</strong></p><p>语法：SELECT 字段名1，字段名2，… FROM 表名 GROUP BY 字段名1，字段名2，… [ HAVING 条件表达式 ];</p><p><strong>单独使用 GROUP BY 进行分组</strong></p><p>命令：SELECT FROM student2 GROUP BY gender;</p><p><strong>GROUP BY 和聚合函数一起使用</strong></p><p>命令：SELECT COUNT(*) ,gender FROM student2 GROUP BY gender;</p><p><strong>GROUP BY 和 HAVING 关键字一起使用</strong></p><p>命令：SELECT sum(grade),gender FROM student2 GROUP BY gender HAVING SUM(grade) &lt; 300;</p><p><strong>使用 LIMIT 限制查询结果的数量</strong></p><p>语法：SELECT 字段名2，字段名2，… FROM 表名 LIMIT [ OFFSET ,] 记录数</p><p>(从0开始的4条)命令：SELECT FROM student LIMIT 4;</p><p>(从第五条开始的4条)命令：SELECT FROM student2 ORDER BY grade DESC LIMIT 4,4;</p><p><strong>为表和字段取别名</strong></p><p>语法：SELECT FROM 表名 [ AS ] 别名；</p><p>命令：SELECT FROM student2 AS s WHERE s.gender=&#39;女&#39;;</p><p><strong>为字段取别名</strong></p><p>语法：SELECT 字段名 [ AS ] 别名 [ ,字段名 [AS] 别名，…] FROM 表名 ；</p><p>命令：SELECT name AS stu_name,gender AS stu_gender FROM student2;</p><h3 id="_2、编写程序-检查数字是否为armstrong" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#2%E7%BC%96%E5%86%99%E7%A8%8B%E5%BA%8F%E6%A3%80%E6%9F%A5%E6%95%B0%E5%AD%97%E6%98%AF%E5%90%A6%E4%B8%BAarmstrong" target="_blank" rel="noreferrer">2、编写程序，检查数字是否为Armstrong</a> <a class="header-anchor" href="#_2、编写程序-检查数字是否为armstrong" aria-label="Permalink to &quot;[2、编写程序，检查数字是否为Armstrong](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python高级面试题及答案，企业真面试题.md#2编写程序检查数字是否为armstrong)&quot;">​</a></h3><p>将每个数字依次分离，并累加其立方(位数)。</p><p>最后，如果发现总和等于原始数，则称为阿姆斯特朗数(Armstrong)。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">num = int(input(&quot;Enter the number:\\n&quot;))</span></span>
<span class="line"><span style="color:#f6f6f4;">order = len(str(num))</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">sum = 0</span></span>
<span class="line"><span style="color:#f6f6f4;">temp = num</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">while temp &gt; 0:</span></span>
<span class="line"><span style="color:#f6f6f4;">   digit = temp % 10</span></span>
<span class="line"><span style="color:#f6f6f4;">   sum += digit ** order</span></span>
<span class="line"><span style="color:#f6f6f4;">   temp //= 10</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">if num == sum:</span></span>
<span class="line"><span style="color:#f6f6f4;">   print(num,&quot;is an Armstrong number&quot;)</span></span>
<span class="line"><span style="color:#f6f6f4;">else:</span></span>
<span class="line"><span style="color:#f6f6f4;">   print(num,&quot;is not an Armstrong number&quot;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">num = int(input(&quot;Enter the number:\\n&quot;))</span></span>
<span class="line"><span style="color:#24292e;">order = len(str(num))</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">sum = 0</span></span>
<span class="line"><span style="color:#24292e;">temp = num</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">while temp &gt; 0:</span></span>
<span class="line"><span style="color:#24292e;">   digit = temp % 10</span></span>
<span class="line"><span style="color:#24292e;">   sum += digit ** order</span></span>
<span class="line"><span style="color:#24292e;">   temp //= 10</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">if num == sum:</span></span>
<span class="line"><span style="color:#24292e;">   print(num,&quot;is an Armstrong number&quot;)</span></span>
<span class="line"><span style="color:#24292e;">else:</span></span>
<span class="line"><span style="color:#24292e;">   print(num,&quot;is not an Armstrong number&quot;)</span></span></code></pre></div><h3 id="_3、pass的使用" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#3pass%E7%9A%84%E4%BD%BF%E7%94%A8" target="_blank" rel="noreferrer">3、pass的使用</a> <a class="header-anchor" href="#_3、pass的使用" aria-label="Permalink to &quot;[3、pass的使用](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python高级面试题及答案，企业真面试题.md#3pass的使用)&quot;">​</a></h3><p>通常用来标记一个还未写的代码的位置，pass不做任何事情，一般用来做占位语句，保持程序结构的完整性</p><h3 id="_4、mysql的建表语句" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#4mysql%E7%9A%84%E5%BB%BA%E8%A1%A8%E8%AF%AD%E5%8F%A5" target="_blank" rel="noreferrer">4、MySQL的建表语句</a> <a class="header-anchor" href="#_4、mysql的建表语句" aria-label="Permalink to &quot;[4、MySQL的建表语句](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python高级面试题及答案，企业真面试题.md#4mysql的建表语句)&quot;">​</a></h3><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">#创建表，例子</span></span>
<span class="line"><span style="color:#f6f6f4;">#所谓的建表就是声明列的过程,所以要首先分析列</span></span>
<span class="line"><span style="color:#f6f6f4;">create table member(</span></span>
<span class="line"><span style="color:#f6f6f4;">                       id int unsigned auto_increment primary key,</span></span>
<span class="line"><span style="color:#f6f6f4;">                       username varchar(20) not null default &#39;&#39;,</span></span>
<span class="line"><span style="color:#f6f6f4;">                       gender char(1) not null default &#39;&#39;,</span></span>
<span class="line"><span style="color:#f6f6f4;">                       weight tinyint unsigned not null default 0,</span></span>
<span class="line"><span style="color:#f6f6f4;">                       birth date not null default &#39;0000-00-00&#39;,</span></span>
<span class="line"><span style="color:#f6f6f4;">                       salary decimal(8,2) not null default 0.00,</span></span>
<span class="line"><span style="color:#f6f6f4;">                       lastlogin int unsigned not null default 0</span></span>
<span class="line"><span style="color:#f6f6f4;">)engine myisam charset utf8;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#创建表，例子</span></span>
<span class="line"><span style="color:#24292e;">#所谓的建表就是声明列的过程,所以要首先分析列</span></span>
<span class="line"><span style="color:#24292e;">create table member(</span></span>
<span class="line"><span style="color:#24292e;">                       id int unsigned auto_increment primary key,</span></span>
<span class="line"><span style="color:#24292e;">                       username varchar(20) not null default &#39;&#39;,</span></span>
<span class="line"><span style="color:#24292e;">                       gender char(1) not null default &#39;&#39;,</span></span>
<span class="line"><span style="color:#24292e;">                       weight tinyint unsigned not null default 0,</span></span>
<span class="line"><span style="color:#24292e;">                       birth date not null default &#39;0000-00-00&#39;,</span></span>
<span class="line"><span style="color:#24292e;">                       salary decimal(8,2) not null default 0.00,</span></span>
<span class="line"><span style="color:#24292e;">                       lastlogin int unsigned not null default 0</span></span>
<span class="line"><span style="color:#24292e;">)engine myisam charset utf8;</span></span></code></pre></div><h3 id="_5、请列出至少5个pep8规范" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#5%E8%AF%B7%E5%88%97%E5%87%BA%E8%87%B3%E5%B0%915%E4%B8%AApep8%E8%A7%84%E8%8C%83" target="_blank" rel="noreferrer">5、请列出至少5个PEP8规范</a> <a class="header-anchor" href="#_5、请列出至少5个pep8规范" aria-label="Permalink to &quot;[5、请列出至少5个PEP8规范](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python高级面试题及答案，企业真面试题.md#5请列出至少5个pep8规范)&quot;">​</a></h3><p><strong>1、</strong> 每个缩进级别使用4个空格</p><p><strong>2、</strong> 每行代码的最大长度限制为79个字符</p><p><strong>3、</strong> 若是导入多个库函数，应该分开依次导入</p><p><strong>4、</strong> 道路应按照以下顺序导入</p><p>a、标准库导入</p><p>b、相关的第三方库导入</p><p>c、本地应用程序的库导入</p><p><strong>1、</strong> 在表达式中避免无关的空格</p><p><strong>2、</strong> 在括号或者大括号内</p><p><strong>3、</strong> 在尾随逗号和后面的右括号之间</p><p><strong>4、</strong> 在逗号，分号或者冒号前面</p><p><strong>5、</strong> 函数名的与后面的参数的括号之间</p><p><strong>6、</strong> 代码更改时，相应的注释也要随之更改</p><p><strong>7、</strong> 命名要规范，通俗易懂</p><h3 id="_6、数据库锁的作用" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#6%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%81%E7%9A%84%E4%BD%9C%E7%94%A8" target="_blank" rel="noreferrer">6、数据库锁的作用</a> <a class="header-anchor" href="#_6、数据库锁的作用" aria-label="Permalink to &quot;[6、数据库锁的作用](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python高级面试题及答案，企业真面试题.md#6数据库锁的作用)&quot;">​</a></h3><p><strong>锁分为三种：乐观锁，悲观锁和共享锁</strong></p><p>数据库和操作系统一样，是一个多用户使用的共享资源。当多个用户并发地存取数据 时，在数据库中就会产生多个事务同时存取同一数据的情况。若对并发操作不加控制就可能会读取和存储不正确的数据，破坏数据库的一致性。加锁是实现数据库并 发控制的一个非常重要的技术。在实际应用中经常会遇到的与锁相关的异常情况，当两个事务需要一组有冲突的锁，而不能将事务继续下去的话，就会出现死锁，严 重影响应用的正常执行。</p><h3 id="_7、生成器与函数的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#7%E7%94%9F%E6%88%90%E5%99%A8%E4%B8%8E%E5%87%BD%E6%95%B0%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">7、生成器与函数的区别？</a> <a class="header-anchor" href="#_7、生成器与函数的区别" aria-label="Permalink to &quot;[7、生成器与函数的区别？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python高级面试题及答案，企业真面试题.md#7生成器与函数的区别)&quot;">​</a></h3><p>生成器和函数的主要区别在于函数 return a value，生成器 yield a value同时标记或记忆point of the yield 以便于在下次调用时从标记点恢复执行。 yield 使函数转换成生成器，而生成器反过来又返回迭代器。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;"># 简单实现生成器</span></span>
<span class="line"><span style="color:#F286C4;">def</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">dec</span><span style="color:#F6F6F4;">():</span></span>
<span class="line"><span style="color:#F6F6F4;">n</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">0</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">in</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">range</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">):</span></span>
<span class="line"><span style="color:#F286C4;">yield</span><span style="color:#F6F6F4;"> n</span></span>
<span class="line"><span style="color:#F6F6F4;">n</span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;">i</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">in</span><span style="color:#F6F6F4;"> dec():</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(i)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 简单实现生成器</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">dec</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">n</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#D73A49;">yield</span><span style="color:#24292E;"> n</span></span>
<span class="line"><span style="color:#24292E;">n</span><span style="color:#D73A49;">+=</span><span style="color:#24292E;">i</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> dec():</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(i)</span></span></code></pre></div><h3 id="_8、mysql常见的函数" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#8mysql%E5%B8%B8%E8%A7%81%E7%9A%84%E5%87%BD%E6%95%B0" target="_blank" rel="noreferrer">8、MySQL常见的函数</a> <a class="header-anchor" href="#_8、mysql常见的函数" aria-label="Permalink to &quot;[8、MySQL常见的函数](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python高级面试题及答案，企业真面试题.md#8mysql常见的函数)&quot;">​</a></h3><p><strong>1、</strong> ABS(x)：返回x的绝对值</p><p><strong>2、</strong> ROUND(x)：返回参数x的四舍五入的一个整数</p><p><strong>3、</strong> TRIM(str)：去除字符串两边的空白</p><p><strong>4、</strong> COUNT()：返回值的个数</p><p><strong>5、</strong> AVG()：返回平均值</p><p><strong>6、</strong> SUM()：求和</p><h3 id="_9、在python中如何拷贝一个对象-并说明他们之间的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#9%E5%9C%A8python%E4%B8%AD%E5%A6%82%E4%BD%95%E6%8B%B7%E8%B4%9D%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%B9%B6%E8%AF%B4%E6%98%8E%E4%BB%96%E4%BB%AC%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">9、在python中如何拷贝一个对象，并说明他们之间的区别</a> <a class="header-anchor" href="#_9、在python中如何拷贝一个对象-并说明他们之间的区别" aria-label="Permalink to &quot;[9、在python中如何拷贝一个对象，并说明他们之间的区别](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python高级面试题及答案，企业真面试题.md#9在python中如何拷贝一个对象并说明他们之间的区别)&quot;">​</a></h3><p><strong>1、</strong> 赋值（=），就是创建了对象的一个新的引用，修改其中任意一个变量都会影响到另一个。</p><p><strong>2、</strong> 浅拷贝：创建一个新的对象，但它包含的是对原始对象中包含项的引用（copy模块的copy()函数）</p><p><strong>3、</strong> 深拷贝：创建一个新的对象，并且递归的复制它所包含的对象（修改其中一个，另外一个不会改变）（copy模块的deep.deepcopy()函数）</p><h3 id="_10、讲讲python中的位运算符" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BC%81%E4%B8%9A%E7%9C%9F%E9%9D%A2%E8%AF%95%E9%A2%98.md#10%E8%AE%B2%E8%AE%B2python%E4%B8%AD%E7%9A%84%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6" target="_blank" rel="noreferrer">10、讲讲Python中的位运算符</a> <a class="header-anchor" href="#_10、讲讲python中的位运算符" aria-label="Permalink to &quot;[10、讲讲Python中的位运算符](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python高级面试题及答案，企业真面试题.md#10讲讲python中的位运算符)&quot;">​</a></h3><p>该运算符按二进制位对值进行操作。</p><p><strong>1、</strong> 与（&amp;），按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; 0b110 &amp; 0b010</span></span>
<span class="line"><span style="color:#f6f6f4;">2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; 0b110 &amp; 0b010</span></span>
<span class="line"><span style="color:#24292e;">2</span></span></code></pre></div><p><strong>2、</strong> 或（|），按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; 3|2</span></span>
<span class="line"><span style="color:#f6f6f4;">3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; 3|2</span></span>
<span class="line"><span style="color:#24292e;">3</span></span></code></pre></div><p><strong>3、</strong> 异或（^），按位异或运算符：当两对应的二进位相异时，结果为1</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; 3^2</span></span>
<span class="line"><span style="color:#f6f6f4;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; 3^2</span></span>
<span class="line"><span style="color:#24292e;">1</span></span></code></pre></div><p><strong>4、</strong> 取反（~），按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; ~2</span></span>
<span class="line"><span style="color:#f6f6f4;">-3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; ~2</span></span>
<span class="line"><span style="color:#24292e;">-3</span></span></code></pre></div><p><strong>5、</strong> 左位移（&lt;&lt;），运算数的各二进位全部左移若干位，由 &lt;&lt; 右边的数字指定了移动的位数，高位丢弃，低位补0</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; 1&lt;&lt;2</span></span>
<span class="line"><span style="color:#f6f6f4;">4</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; 1&lt;&lt;2</span></span>
<span class="line"><span style="color:#24292e;">4</span></span></code></pre></div><p><strong>6、</strong> 右位移（&gt;&gt;），把&quot;&gt;&gt;&quot;左边的运算数的各二进位全部右移若干位，&gt;&gt; 右边的数字指定了移动的位数</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; 4&gt;&gt;2</span></span>
<span class="line"><span style="color:#f6f6f4;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; 4&gt;&gt;2</span></span>
<span class="line"><span style="color:#24292e;">1</span></span></code></pre></div><p>更多关于运算符的知识，参考这里：</p><p><a href="https://data-flair.training/blogs/python-operators/" target="_blank" rel="noreferrer">戳这里</a></p><h3 id="_11、redis如何实现主从复制-以及数据同步机制" tabindex="-1">11、Redis如何实现主从复制？以及数据同步机制？ <a class="header-anchor" href="#_11、redis如何实现主从复制-以及数据同步机制" aria-label="Permalink to &quot;11、Redis如何实现主从复制？以及数据同步机制？&quot;">​</a></h3><h3 id="_12、什么是索引合并" tabindex="-1">12、什么是索引合并 <a class="header-anchor" href="#_12、什么是索引合并" aria-label="Permalink to &quot;12、什么是索引合并&quot;">​</a></h3><h3 id="_13、有如下代码" tabindex="-1">13、有如下代码： <a class="header-anchor" href="#_13、有如下代码" aria-label="Permalink to &quot;13、有如下代码：&quot;">​</a></h3><h3 id="_14、什么是封装" tabindex="-1">14、什么是封装？ <a class="header-anchor" href="#_14、什么是封装" aria-label="Permalink to &quot;14、什么是封装？&quot;">​</a></h3><h3 id="_15、简述python的深浅拷贝" tabindex="-1">15、简述python的深浅拷贝 <a class="header-anchor" href="#_15、简述python的深浅拷贝" aria-label="Permalink to &quot;15、简述python的深浅拷贝&quot;">​</a></h3><h3 id="_16、什么是haproxy" tabindex="-1">16、什么是haproxy？ <a class="header-anchor" href="#_16、什么是haproxy" aria-label="Permalink to &quot;16、什么是haproxy？&quot;">​</a></h3><h3 id="_17、redis是单进程单线程的吗" tabindex="-1">17、Redis是单进程单线程的吗？ <a class="header-anchor" href="#_17、redis是单进程单线程的吗" aria-label="Permalink to &quot;17、Redis是单进程单线程的吗？&quot;">​</a></h3><h3 id="_18、有一个多层嵌套的列表a-1-2-3-4-1-j1-1-1-2-3-aa-请写一段代码将a中的元素全部打印出来" tabindex="-1">18、有一个多层嵌套的列表A=[1,2,3,[4,1,[&#39;j1&#39;,1,[1,2,3,&#39;aa&#39;]]]],请写一段代码将A中的元素全部打印出来 <a class="header-anchor" href="#_18、有一个多层嵌套的列表a-1-2-3-4-1-j1-1-1-2-3-aa-请写一段代码将a中的元素全部打印出来" aria-label="Permalink to &quot;18、有一个多层嵌套的列表A=[1,2,3,[4,1,[&#39;j1&#39;,1,[1,2,3,&#39;aa&#39;]]]],请写一段代码将A中的元素全部打印出来&quot;">​</a></h3><h3 id="_19、python哪些类型的数据才能作为字典的key" tabindex="-1">19、python哪些类型的数据才能作为字典的key？ <a class="header-anchor" href="#_19、python哪些类型的数据才能作为字典的key" aria-label="Permalink to &quot;19、python哪些类型的数据才能作为字典的key？&quot;">​</a></h3><h3 id="_20、python是否有main函数" tabindex="-1">20、Python是否有main函数？ <a class="header-anchor" href="#_20、python是否有main函数" aria-label="Permalink to &quot;20、Python是否有main函数？&quot;">​</a></h3><h3 id="_21、什么是twisted框架" tabindex="-1">21、什么是twisted框架 <a class="header-anchor" href="#_21、什么是twisted框架" aria-label="Permalink to &quot;21、什么是twisted框架&quot;">​</a></h3><h3 id="_22、你了解哪些数据库优化方案" tabindex="-1">22、你了解哪些数据库优化方案 <a class="header-anchor" href="#_22、你了解哪些数据库优化方案" aria-label="Permalink to &quot;22、你了解哪些数据库优化方案&quot;">​</a></h3><h3 id="_23、vue中的路由拦截器的作用" tabindex="-1">23、vue中的路由拦截器的作用 <a class="header-anchor" href="#_23、vue中的路由拦截器的作用" aria-label="Permalink to &quot;23、vue中的路由拦截器的作用&quot;">​</a></h3><h3 id="_24、实现一个装饰器-限制该函数被调用的频率-如10秒一次" tabindex="-1">24、实现一个装饰器，限制该函数被调用的频率，如10秒一次 <a class="header-anchor" href="#_24、实现一个装饰器-限制该函数被调用的频率-如10秒一次" aria-label="Permalink to &quot;24、实现一个装饰器，限制该函数被调用的频率，如10秒一次&quot;">​</a></h3><h3 id="_25、请编写一个函数将ip地址转换成一个整数。如10-3-9-12转换成00001010-00000011-00001001-00001100-然后转换成整数" tabindex="-1">25、请编写一个函数将ip地址转换成一个整数。如10.3.9.12转换成00001010 00000011 00001001 00001100，然后转换成整数 <a class="header-anchor" href="#_25、请编写一个函数将ip地址转换成一个整数。如10-3-9-12转换成00001010-00000011-00001001-00001100-然后转换成整数" aria-label="Permalink to &quot;25、请编写一个函数将ip地址转换成一个整数。如10.3.9.12转换成00001010 00000011 00001001 00001100，然后转换成整数&quot;">​</a></h3><h3 id="_26、python中oops是什么" tabindex="-1">26、Python中OOPS是什么？ <a class="header-anchor" href="#_26、python中oops是什么" aria-label="Permalink to &quot;26、Python中OOPS是什么？&quot;">​</a></h3><h3 id="_27、22、iterables和iterators之间的区别" tabindex="-1">27、22、iterables和iterators之间的区别？ <a class="header-anchor" href="#_27、22、iterables和iterators之间的区别" aria-label="Permalink to &quot;27、22、iterables和iterators之间的区别？&quot;">​</a></h3><h3 id="_28、如何实现-1-2-3-变成-1-2-3" tabindex="-1">28、如何实现[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;]变成[1,2,3] <a class="header-anchor" href="#_28、如何实现-1-2-3-变成-1-2-3" aria-label="Permalink to &quot;28、如何实现[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;]变成[1,2,3]&quot;">​</a></h3><h3 id="_29、python中的单引号和双引号有什么区别" tabindex="-1">29、Python中的单引号和双引号有什么区别？ <a class="header-anchor" href="#_29、python中的单引号和双引号有什么区别" aria-label="Permalink to &quot;29、Python中的单引号和双引号有什么区别？&quot;">​</a></h3>`,177),o=[p];function l(r,c,i,E,d,g){return n(),a("div",null,o)}const u=s(t,[["render",l]]);export{y as __pageData,u as default};
