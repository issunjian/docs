import{_ as a,o as l,c as p,a as n,V as s}from"./chunks/framework.c6d8cbec.js";const o="/docs/assets/aop-log-1.5f004aa1.png",e="/docs/assets/aop-log-2.9712d2a5.png",t="/docs/assets/aop-log-3.19bfae33.png",c="/docs/assets/aop-log-4.8683b07d.png",m=JSON.parse('{"title":"Spring AOP 扫盲","description":"","frontmatter":{"category":["Java企业级开发"],"tag":["Spring"]},"headers":[],"relativePath":"backend/tobetter/springboot/aop-log.md","filePath":"backend/tobetter/springboot/aop-log.md"}'),r={name:"backend/tobetter/springboot/aop-log.md"},y=s('<h1 id="spring-aop-扫盲" tabindex="-1">Spring AOP 扫盲 <a class="header-anchor" href="#spring-aop-扫盲" aria-label="Permalink to &quot;Spring AOP 扫盲&quot;">​</a></h1><p>AOP 是 Spring 体系中非常重要的两个概念之一（另外一个是 IoC），今天这篇文章就来带大家通过实战的方式，在编程猫 SpringBoot 项目中使用 AOP 技术为 controller 层添加一个切面来实现接口访问的统一日志记录。</p><h3 id="一、关于-aop" tabindex="-1">一、关于 AOP <a class="header-anchor" href="#一、关于-aop" aria-label="Permalink to &quot;一、关于 AOP&quot;">​</a></h3><p>AOP，也就是 Aspect-oriented Programming，译为面向切面编程，是计算机科学中的一个设计思想，旨在通过切面技术为业务主体增加额外的通知（Advice），从而对声明为“切点”（Pointcut）的代码块进行统一管理和装饰。</p><p>这种思想非常适用于，将那些与核心业务不那么密切关联的功能添加到程序中，就好比我们今天的主题——日志功能，就是一个典型的案例。</p><img src="'+o+'"><p>AOP 是对面向对象编程（Object-oriented Programming，俗称 OOP）的一种补充，OOP 的核心单元是类（class），而 AOP 的核心单元是切面（Aspect）。利用 AOP 可以对业务逻辑的各个部分进行隔离，从而降低耦合度，提高程序的可重用性，同时也提高了开发效率。</p><p>我们可以简单的把 AOP 理解为贯穿于方法之中，在方法执行前、执行时、执行后、返回值后、异常后要执行的操作。</p><h3 id="二、aop-的相关术语" tabindex="-1">二、AOP 的相关术语 <a class="header-anchor" href="#二、aop-的相关术语" aria-label="Permalink to &quot;二、AOP 的相关术语&quot;">​</a></h3><p>来看下面这幅图，这是一个 AOP 的模型图，就是在某些方法执行前后执行一些通用的操作，并且这些操作不会影响程序本身的运行。</p><img src="'+e+'">',11),F=s(`<p><strong>1）横切关注点</strong>，从每个方法中抽取出来的同一类非核心业务</p><p><strong>2）切面（Aspect）</strong>，对横切关注点进行封装的类，每个关注点体现为一个通知方法；通常使用 @Aspect 注解来定义切面。</p><p><strong>3）通知（Advice）</strong>，切面必须要完成的各个具体工作，比如我们的日志切面需要记录接口调用前后的时长，就需要在调用接口前后记录时间，再取差值。通知的方式有五种：</p><ul><li>@Before：通知方法会在目标方法调用之前执行</li><li>@After：通知方法会在目标方法调用后执行</li><li>@AfterReturning：通知方法会在目标方法返回后执行</li><li>@AfterThrowing：通知方法会在目标方法抛出异常后执行</li><li>@Around：把整个目标方法包裹起来，在被调用前和调用之后分别执行通知方法</li></ul><p><strong>4）连接点（JoinPoint）</strong>，通知应用的时机，比如接口方法被调用时就是日志切面的连接点。</p><p><strong>5）切点（Pointcut）</strong>，通知功能被应用的范围，比如本篇日志切面的应用范围是所有 controller 的接口。通常使用 @Pointcut 注解来定义切点表达式。</p><p>切入点表达式的语法格式规范如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">execution(modifiers-pattern? ret-type-pattern declaring-type-pattern?</span></span>
<span class="line"><span style="color:#f6f6f4;">				name-pattern(param-pattern)</span></span>
<span class="line"><span style="color:#f6f6f4;">                throws-pattern?)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">execution(modifiers-pattern? ret-type-pattern declaring-type-pattern?</span></span>
<span class="line"><span style="color:#24292e;">				name-pattern(param-pattern)</span></span>
<span class="line"><span style="color:#24292e;">                throws-pattern?)</span></span></code></pre></div><ul><li><code>modifiers-pattern?</code> 为访问权限修饰符</li><li><code>ret-type-pattern</code> 为返回类型，通常用 <code>*</code> 来表示任意返回类型</li><li><code>declaring-type-pattern?</code> 为包名</li><li><code>name-pattern</code> 为方法名，可以使用 <code>*</code> 来表示所有，或者 <code>set*</code> 来表示所有以 set 开头的类名</li><li><code>param-pattern)</code> 为参数类型，多个参数可以用 <code>,</code> 隔开，各个参与也可以使用 <code>*</code> 来表示所有类型的参数，还可以使用 <code>(..)</code> 表示零个或者任意参数</li><li><code>throws-pattern?</code> 为异常类型</li><li><code>?</code> 表示前面的为可选项</li></ul><p>举个例子：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">Pointcut</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">execution(public * com.codingmore.controller.*.*(..))</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Pointcut</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;execution(public * com.codingmore.controller.*.*(..))&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>表示 <code>com.codingmore.controller</code> 包下的所有 public 方法都要应用切面的通知。</p><h3 id="三、实操-aop-记录接口访问日志" tabindex="-1">三、实操 AOP 记录接口访问日志 <a class="header-anchor" href="#三、实操-aop-记录接口访问日志" aria-label="Permalink to &quot;三、实操 AOP 记录接口访问日志&quot;">​</a></h3><p>第一步，在 Spring Boot 项目的 pom.xml 文件中添加 spring-boot-starter-aop 依赖。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;dependency&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/dependency&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;dependency&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/dependency&gt;</span></span></code></pre></div><p>第二步，添加日志信息封装类 WebLog，用于记录什么样的操作、操作的人是谁、开始时间、花费的时间、操作的路径、操作的方法名、操作主机的 IP、请求参数、返回结果等。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * Controller层的日志封装类</span></span>
<span class="line"><span style="color:#7B7F8B;"> * Created by macro on 2018/4/26.</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">WebLog</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> description;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> username;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Long</span><span style="color:#F6F6F4;"> startTime;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Integer</span><span style="color:#F6F6F4;"> spendTime;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> basePath;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> uri;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> url;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> method;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> ip;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Object</span><span style="color:#F6F6F4;"> parameter;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Object</span><span style="color:#F6F6F4;"> result;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">//省略了getter,setter方法</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Controller层的日志封装类</span></span>
<span class="line"><span style="color:#6A737D;"> * Created by macro on 2018/4/26.</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebLog</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String description;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String username;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Long startTime;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer spendTime;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String basePath;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String uri;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String url;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String method;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String ip;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Object parameter;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Object result;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//省略了getter,setter方法</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>第三步，添加统一日志处理切面 WebLogAspect。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * 统一日志处理切面</span></span>
<span class="line"><span style="color:#7B7F8B;"> * Created by 石磊</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">Aspect</span></span>
<span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">Component</span></span>
<span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">Order</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">WebLogAspect</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">final</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Logger</span><span style="color:#F6F6F4;"> LOGGER </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> LoggerFactory.</span><span style="color:#62E884;">getLogger</span><span style="color:#F6F6F4;">(WebLogAspect.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    @</span><span style="color:#97E1F1;font-style:italic;">Pointcut</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">execution(public * com.codingmore.controller.*.*(..))</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">webLog</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    @</span><span style="color:#97E1F1;font-style:italic;">Before</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">webLog()</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">doBefore</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">JoinPoint</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">joinPoint</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">throws</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Throwable</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    @</span><span style="color:#97E1F1;font-style:italic;">AfterReturning</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">value</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">webLog()</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">returning</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">ret</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">doAfterReturning</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">Object</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">ret</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">throws</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Throwable</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    @</span><span style="color:#97E1F1;font-style:italic;">Around</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">webLog()</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Object</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">doAround</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">ProceedingJoinPoint</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">joinPoint</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">throws</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Throwable</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> startTime </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> System.</span><span style="color:#62E884;">currentTimeMillis</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//获取当前请求对象</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">ServletRequestAttributes</span><span style="color:#F6F6F4;"> attributes </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (ServletRequestAttributes) RequestContextHolder.</span><span style="color:#62E884;">getRequestAttributes</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">HttpServletRequest</span><span style="color:#F6F6F4;"> request </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> attributes.</span><span style="color:#62E884;">getRequest</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//记录请求信息(通过Logstash传入Elasticsearch)</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">WebLog</span><span style="color:#F6F6F4;"> webLog </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">WebLog</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Object</span><span style="color:#F6F6F4;"> result </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> joinPoint.</span><span style="color:#62E884;">proceed</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Signature</span><span style="color:#F6F6F4;"> signature </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> joinPoint.</span><span style="color:#62E884;">getSignature</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">MethodSignature</span><span style="color:#F6F6F4;"> methodSignature </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (MethodSignature) signature;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Method</span><span style="color:#F6F6F4;"> method </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> methodSignature.</span><span style="color:#62E884;">getMethod</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (method.</span><span style="color:#62E884;">isAnnotationPresent</span><span style="color:#F6F6F4;">(ApiOperation.class)) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;font-style:italic;">ApiOperation</span><span style="color:#F6F6F4;"> log </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> method.</span><span style="color:#62E884;">getAnnotation</span><span style="color:#F6F6F4;">(ApiOperation.class);</span></span>
<span class="line"><span style="color:#F6F6F4;">            webLog.</span><span style="color:#62E884;">setDescription</span><span style="color:#F6F6F4;">(log.</span><span style="color:#62E884;">value</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">long</span><span style="color:#F6F6F4;"> endTime </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> System.</span><span style="color:#62E884;">currentTimeMillis</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> urlStr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> request.</span><span style="color:#62E884;">getRequestURL</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">toString</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        webLog.</span><span style="color:#62E884;">setBasePath</span><span style="color:#F6F6F4;">(StrUtil.</span><span style="color:#62E884;">removeSuffix</span><span style="color:#F6F6F4;">(urlStr, URLUtil.</span><span style="color:#62E884;">url</span><span style="color:#F6F6F4;">(urlStr).</span><span style="color:#62E884;">getPath</span><span style="color:#F6F6F4;">()));</span></span>
<span class="line"><span style="color:#F6F6F4;">        webLog.</span><span style="color:#62E884;">setIp</span><span style="color:#F6F6F4;">(request.</span><span style="color:#62E884;">getRemoteUser</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Map</span><span style="color:#F6F6F4;">&lt;String,Object&gt; logMap </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">HashMap</span><span style="color:#F6F6F4;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#F6F6F4;">        logMap.</span><span style="color:#62E884;">put</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">spendTime</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,webLog.</span><span style="color:#62E884;">getSpendTime</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">        logMap.</span><span style="color:#62E884;">put</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">description</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,webLog.</span><span style="color:#62E884;">getDescription</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">        LOGGER.</span><span style="color:#62E884;">info</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">{}</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, JSONUtil.</span><span style="color:#62E884;">parse</span><span style="color:#F6F6F4;">(webLog));</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> result;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 统一日志处理切面</span></span>
<span class="line"><span style="color:#6A737D;"> * Created by 石磊</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Aspect</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Component</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Order</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebLogAspect</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Logger LOGGER </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LoggerFactory.</span><span style="color:#6F42C1;">getLogger</span><span style="color:#24292E;">(WebLogAspect.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Pointcut</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;execution(public * com.codingmore.controller.*.*(..))&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">webLog</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Before</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;webLog()&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">doBefore</span><span style="color:#24292E;">(JoinPoint </span><span style="color:#E36209;">joinPoint</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Throwable {</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">AfterReturning</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;webLog()&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">returning</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ret&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">doAfterReturning</span><span style="color:#24292E;">(Object </span><span style="color:#E36209;">ret</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Throwable {</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Around</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;webLog()&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Object </span><span style="color:#6F42C1;">doAround</span><span style="color:#24292E;">(ProceedingJoinPoint </span><span style="color:#E36209;">joinPoint</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Throwable {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> startTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//获取当前请求对象</span></span>
<span class="line"><span style="color:#24292E;">        ServletRequestAttributes attributes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (ServletRequestAttributes) RequestContextHolder.</span><span style="color:#6F42C1;">getRequestAttributes</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        HttpServletRequest request </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> attributes.</span><span style="color:#6F42C1;">getRequest</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//记录请求信息(通过Logstash传入Elasticsearch)</span></span>
<span class="line"><span style="color:#24292E;">        WebLog webLog </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebLog</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        Object result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> joinPoint.</span><span style="color:#6F42C1;">proceed</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        Signature signature </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> joinPoint.</span><span style="color:#6F42C1;">getSignature</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        MethodSignature methodSignature </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (MethodSignature) signature;</span></span>
<span class="line"><span style="color:#24292E;">        Method method </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> methodSignature.</span><span style="color:#6F42C1;">getMethod</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (method.</span><span style="color:#6F42C1;">isAnnotationPresent</span><span style="color:#24292E;">(ApiOperation.class)) {</span></span>
<span class="line"><span style="color:#24292E;">            ApiOperation log </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> method.</span><span style="color:#6F42C1;">getAnnotation</span><span style="color:#24292E;">(ApiOperation.class);</span></span>
<span class="line"><span style="color:#24292E;">            webLog.</span><span style="color:#6F42C1;">setDescription</span><span style="color:#24292E;">(log.</span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> endTime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        String urlStr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> request.</span><span style="color:#6F42C1;">getRequestURL</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        webLog.</span><span style="color:#6F42C1;">setBasePath</span><span style="color:#24292E;">(StrUtil.</span><span style="color:#6F42C1;">removeSuffix</span><span style="color:#24292E;">(urlStr, URLUtil.</span><span style="color:#6F42C1;">url</span><span style="color:#24292E;">(urlStr).</span><span style="color:#6F42C1;">getPath</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">        webLog.</span><span style="color:#6F42C1;">setIp</span><span style="color:#24292E;">(request.</span><span style="color:#6F42C1;">getRemoteUser</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt; logMap </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">        logMap.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;spendTime&quot;</span><span style="color:#24292E;">,webLog.</span><span style="color:#6F42C1;">getSpendTime</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        logMap.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;description&quot;</span><span style="color:#24292E;">,webLog.</span><span style="color:#6F42C1;">getDescription</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        LOGGER.</span><span style="color:#6F42C1;">info</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;{}&quot;</span><span style="color:#24292E;">, JSONUtil.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(webLog));</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>第四步，运行项目，并对 controller 下的某个控制器进行测试。</p><blockquote><p>Swagger knife4j 访问地址：<a href="http://localhost:9022/doc.html" target="_blank" rel="noreferrer">http://localhost:9022/doc.html</a></p></blockquote><p>执行登录用户查询操作：</p><img src="`+t+'"><p>可以在控制台可以看到以下日志信息：</p><img src="'+c+'">',25),i=s('<blockquote><p><a href="https://github.com/itwanger/coding-more" target="_blank" rel="noreferrer">https://github.com/itwanger/coding-more</a></p></blockquote><p>参考链接：</p><blockquote><p>作者 cxuan：<a href="https://www.cnblogs.com/cxuanBlog/p/13060510.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/cxuanBlog/p/13060510.html</a><br> 灰小猿：<a href="https://bbs.huaweicloud.com/blogs/289045" target="_blank" rel="noreferrer">https://bbs.huaweicloud.com/blogs/289045</a><br> 山高我为峰：<a href="https://www.cnblogs.com/liaojie970/p/7883687.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/liaojie970/p/7883687.html</a><br> macrozheng：<a href="https://github.com/macrozheng/mall" target="_blank" rel="noreferrer">https://github.com/macrozheng/mall</a></p></blockquote>',3);function E(g,d,u,b,h,A){return l(),p("div",null,[y,n(" 我们了解下 AOP 涉及到的 5 个关键术语： "),F,n(" 源码地址： "),i])}const C=a(r,[["render",E]]);export{m as __pageData,C as default};
