import{_ as l,H as p,o,c as e,C as a,a as s,J as t,V as c}from"./chunks/framework.c6d8cbec.js";const m=JSON.parse('{"title":"3. 无重复字符的最长子串","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/hash-table/3.md","filePath":"algorithm/hash-table/3.md"}'),r={name:"algorithm/hash-table/3.md"},y={id:"_3-无重复字符的最长子串",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#_3-无重复字符的最长子串","aria-label":'Permalink to "3. 无重复字符的最长子串 <Badge type="warning" text="中等" />"'},"​",-1),F=c(`<h2 id="题目描述" tabindex="-1">题目描述 <a class="header-anchor" href="#题目描述" aria-label="Permalink to &quot;题目描述&quot;">​</a></h2><details><summary><b>Tags</b></summary> hash-table | two-pointers | string | sliding-window </details><details><summary><b>Companies</b></summary> adobe | amazon | bloomberg | yelp </details><p>给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。</p><p>示例 1:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">输入: s = &quot;abcabcbb&quot;</span></span>
<span class="line"><span style="color:#f6f6f4;">输出: 3</span></span>
<span class="line"><span style="color:#f6f6f4;">解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">输入: s = &quot;abcabcbb&quot;</span></span>
<span class="line"><span style="color:#24292e;">输出: 3</span></span>
<span class="line"><span style="color:#24292e;">解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</span></span></code></pre></div><p>示例 2:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">输入: s = &quot;bbbbb&quot;</span></span>
<span class="line"><span style="color:#f6f6f4;">输出: 1</span></span>
<span class="line"><span style="color:#f6f6f4;">解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">输入: s = &quot;bbbbb&quot;</span></span>
<span class="line"><span style="color:#24292e;">输出: 1</span></span>
<span class="line"><span style="color:#24292e;">解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1。</span></span></code></pre></div><p>示例 3:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">输入: s = &quot;pwwkew&quot;</span></span>
<span class="line"><span style="color:#f6f6f4;">输出: 3</span></span>
<span class="line"><span style="color:#f6f6f4;">解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</span></span>
<span class="line"><span style="color:#f6f6f4;">请注意，你的答案必须是 子串 的长度，&quot;pwke&quot; 是一个子序列，不是子串。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">输入: s = &quot;pwwkew&quot;</span></span>
<span class="line"><span style="color:#24292e;">输出: 3</span></span>
<span class="line"><span style="color:#24292e;">解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</span></span>
<span class="line"><span style="color:#24292e;">请注意，你的答案必须是 子串 的长度，&quot;pwke&quot; 是一个子序列，不是子串。</span></span></code></pre></div><p>提示：</p><ul><li>0 &lt;= s.length &lt;= 5 * 104</li><li>s 由英文字母、数字、符号和空格组成</li></ul><h2 id="解题思路" tabindex="-1">解题思路 <a class="header-anchor" href="#解题思路" aria-label="Permalink to &quot;解题思路&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{string}</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">s</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@return</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{number}</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">lengthOfLongestSubstring</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">s</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> []</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> res </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">in</span><span style="color:#F6F6F4;"> s) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (arr.</span><span style="color:#62E884;">includes</span><span style="color:#F6F6F4;">(s[i]))</span></span>
<span class="line"><span style="color:#F6F6F4;">      arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> arr.</span><span style="color:#62E884;">slice</span><span style="color:#F6F6F4;">(arr.</span><span style="color:#62E884;">indexOf</span><span style="color:#F6F6F4;">(s[i]) </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    arr.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(s[i])</span></span>
<span class="line"><span style="color:#F6F6F4;">    res </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Math.</span><span style="color:#62E884;">max</span><span style="color:#F6F6F4;">(res, arr.length)</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> res</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">s</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{number}</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lengthOfLongestSubstring</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">s</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">i</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> s) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (arr.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(s[i]))</span></span>
<span class="line"><span style="color:#24292E;">      arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(arr.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(s[i]) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    arr.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(s[i])</span></span>
<span class="line"><span style="color:#24292E;">    res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(res, arr.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,14);function d(u,h,f,b,E,g){const n=p("Badge");return o(),e("div",null,[a("h1",y,[s("3. 无重复字符的最长子串 "),t(n,{type:"warning",text:"中等"}),s(),i]),F])}const _=l(r,[["render",d]]);export{m as __pageData,_ as default};
