import{_ as e,H as t,o as c,c as r,C as s,J as l,E as p,V as a,a as o}from"./chunks/framework.c6d8cbec.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/js/es6学习笔记.md","filePath":"frontend/js/es6学习笔记.md"}'),y={name:"frontend/js/es6学习笔记.md"},F=a("",120),E=a("",18),i=s("p",null,"注意修改原型，“类”的原始定义，影响到所有实例",-1),d=a("",16);function u(C,h,g,D,q,b){const n=t("font");return c(),r("div",null,[F,s("blockquote",null,[l(n,{color:"red"},{default:p(()=>[o("**无法中途取消**")]),_:1})]),E,s("blockquote",null,[l(n,{color:"red"},{default:p(()=>[o("`__proto__` 并不是语言本身的特性，这是各大厂商具体实现时添加的私有属性，虽然目前很多现代浏览器的 JS 引擎中都提供了这个私有属性，但依旧不建议在生产中使用该属性，避免对环境产生依赖。生产环境中，我们可以使用 **`Object.getPrototypeOf`** 方法来获取实例对象的原型，然后再来为原型添加方法/属性。")]),_:1}),i]),d])}const B=e(y,[["render",u]]);export{A as __pageData,B as default};
