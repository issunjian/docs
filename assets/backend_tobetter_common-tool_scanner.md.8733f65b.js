import{_ as s,o as n,c as a,V as l}from"./chunks/framework.c6d8cbec.js";const p="/docs/assets/scanner-20230329150001.d9708cff.png",o="/docs/assets/scanner-20230329151635.75c360c6.png",e="/docs/assets/scanner-20230329153155.4bf9698c.png",t="/docs/assets/scanner-20230329162213.79beda79.png",c="/docs/assets/scanner-20230329163743.e200d126.png",r="/docs/assets/scanner-20230329165146.5f9ff875.png",y="/docs/assets/scanner-20230329165213.2d54ef7b.png",A=JSON.parse('{"title":"Java Scanner：扫描控制台输入的工具类","description":"本文深入剖析了Java中的Scanner类，详细介绍了其用法、功能以及如何在实际应用中扫描控制台输入。通过具体代码示例，让您更好地理解Scanner的工作原理，使得控制台输入处理变得简单高效。掌握Scanner类，让Java编程更加得心应手。","frontmatter":{"title":"Java Scanner：扫描控制台输入的工具类","shortTitle":"Scanner工具类","category":["Java核心"],"tag":["常用工具类"],"description":"本文深入剖析了Java中的Scanner类，详细介绍了其用法、功能以及如何在实际应用中扫描控制台输入。通过具体代码示例，让您更好地理解Scanner的工作原理，使得控制台输入处理变得简单高效。掌握Scanner类，让Java编程更加得心应手。","head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,Java程序员进阶之路,Java进阶之路,Java入门,教程,java,Scanner,输入,java Scanner,java 扫描"}]]},"headers":[],"relativePath":"backend/tobetter/common-tool/scanner.md","filePath":"backend/tobetter/common-tool/scanner.md"}'),F={name:"backend/tobetter/common-tool/scanner.md"},i=l(`<h1 id="_9-1-scanner工具类" tabindex="-1">9.1 Scanner工具类 <a class="header-anchor" href="#_9-1-scanner工具类" aria-label="Permalink to &quot;9.1 Scanner工具类&quot;">​</a></h1><p>Java 的 Scanner 类是一个方便在控制台扫描用户输入的工具类，虽然它也可以扫描文件内容，但我们通常更喜欢它扮演前面的角色，因为扫描文件可以通过<a href="https://tobebetterjavaer.com/io/file-path.html" target="_blank" rel="noreferrer">文件流</a>来完成。</p><p>接下来，我们通过几个简单的示例讲一下 Scanner 类。</p><h3 id="_01、扫描控制台输入" tabindex="-1">01、扫描控制台输入 <a class="header-anchor" href="#_01、扫描控制台输入" aria-label="Permalink to &quot;01、扫描控制台输入&quot;">​</a></h3><p>通常，我们会使用 Scanner 类来扫描控制台输入，尤其是对于初学 Java 的人来说，这样会非常的酷，因为终于可以拿到我们自己想要输入的数据了。</p><p>来看下面的示例：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">Scanner</span><span style="color:#F6F6F4;"> scanner </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(System.in); </span><span style="color:#7B7F8B;">// 创建 Scanner 对象，从标准输入流中读取数据</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请输入一个整数：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> num </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">nextInt</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 获取用户输入的整数</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您输入的整数是：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> num);</span></span>
<span class="line"><span style="color:#F6F6F4;">scanner.</span><span style="color:#62E884;">nextLine</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取换行符，避免影响下一次读取</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请输入一个字符串：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> str </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">nextLine</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 获取用户输入的字符串</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您输入的字符串是：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> str);</span></span>
<span class="line"><span style="color:#F6F6F4;">scanner.</span><span style="color:#62E884;">close</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 关闭 Scanner 对象</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Scanner scanner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(System.in); </span><span style="color:#6A737D;">// 创建 Scanner 对象，从标准输入流中读取数据</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请输入一个整数：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 获取用户输入的整数</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您输入的整数是：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> num);</span></span>
<span class="line"><span style="color:#24292E;">scanner.</span><span style="color:#6F42C1;">nextLine</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取换行符，避免影响下一次读取</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请输入一个字符串：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">String str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">nextLine</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 获取用户输入的字符串</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您输入的字符串是：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> str);</span></span>
<span class="line"><span style="color:#24292E;">scanner.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 关闭 Scanner 对象</span></span></code></pre></div><p>运行后就可以在控制台交互了，对于新手来说，估计会觉得比较有趣。</p><img src="`+p+'"><p>其中 System.in 返回的是一个<a href="https://tobebetterjavaer.com/io/stream.html" target="_blank" rel="noreferrer">字节输入流</a> InputStream，和 System.out 刚好对应。</p><img src="'+o+`"><h4 id="_1-nextline" tabindex="-1">1）nextLine <a class="header-anchor" href="#_1-nextline" aria-label="Permalink to &quot;1）nextLine&quot;">​</a></h4><p><code>nextLine()</code> 方法会扫描输入流中的字符，直到遇到行末尾的换行符 <code>\\n</code>，然后将该行的内容作为字符串返回，同时，<code>nextLine()</code> 会将 Scanner 对象的位置移动到下一行的开头，以便下一次读取数据时从下一行的开头开始读取。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">Scanner</span><span style="color:#F6F6F4;"> scanner </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(System.in); </span><span style="color:#7B7F8B;">// 创建 Scanner 对象，从标准输入流中读取数据</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请输入多行文本，以空行结束：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">StringBuilder</span><span style="color:#F6F6F4;"> sb </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">StringBuilder</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 创建 StringBuilder 对象，用于保存读取的文本</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> line </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">nextLine</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取输入流中的第一行</span></span>
<span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">line.</span><span style="color:#62E884;">isEmpty</span><span style="color:#F6F6F4;">()) { </span><span style="color:#7B7F8B;">// 如果读取的行不为空，则继续读取下一行</span></span>
<span class="line"><span style="color:#F6F6F4;">    sb.</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(line).</span><span style="color:#62E884;">append</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">\\n</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">); </span><span style="color:#7B7F8B;">// 将当前行的内容添加到 StringBuilder 对象中，并换行</span></span>
<span class="line"><span style="color:#F6F6F4;">    line </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">nextLine</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取下一行</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您输入的文本是：</span><span style="color:#F286C4;">\\n</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> sb.</span><span style="color:#62E884;">toString</span><span style="color:#F6F6F4;">()); </span><span style="color:#7B7F8B;">// 打印读取的文本</span></span>
<span class="line"><span style="color:#F6F6F4;">scanner.</span><span style="color:#62E884;">close</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 关闭 Scanner 对象</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Scanner scanner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(System.in); </span><span style="color:#6A737D;">// 创建 Scanner 对象，从标准输入流中读取数据</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请输入多行文本，以空行结束：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">StringBuilder sb </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringBuilder</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 创建 StringBuilder 对象，用于保存读取的文本</span></span>
<span class="line"><span style="color:#24292E;">String line </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">nextLine</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取输入流中的第一行</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">line.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">()) { </span><span style="color:#6A737D;">// 如果读取的行不为空，则继续读取下一行</span></span>
<span class="line"><span style="color:#24292E;">    sb.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(line).</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 将当前行的内容添加到 StringBuilder 对象中，并换行</span></span>
<span class="line"><span style="color:#24292E;">    line </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">nextLine</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取下一行</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您输入的文本是：</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> sb.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">()); </span><span style="color:#6A737D;">// 打印读取的文本</span></span>
<span class="line"><span style="color:#24292E;">scanner.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 关闭 Scanner 对象</span></span></code></pre></div><h4 id="_2-nextint" tabindex="-1">2）nextInt <a class="header-anchor" href="#_2-nextint" aria-label="Permalink to &quot;2）nextInt&quot;">​</a></h4><p><code>nextInt()</code> 用于从输入流中读取下一个整数并返回，如果输入流中没有整数，或者不是整数，将抛出 InputMismatchException 异常。</p><img src="`+e+`"><h4 id="_3-其他方法" tabindex="-1">3）其他方法 <a class="header-anchor" href="#_3-其他方法" aria-label="Permalink to &quot;3）其他方法&quot;">​</a></h4><p>除了以上两个常用的方法，Scanner 类中还有一些其他的方法：</p><ul><li><code>boolean hasNext()</code>：检查输入流是否还有下一个标记。</li><li><code>boolean hasNextLine()</code>：检查输入流是否还有下一行。</li><li><code>String next()</code>：读取输入流中的下一个标记（使用默认的分隔符，通常是空格或换行符）。</li><li><code>double nextDouble()</code>：读取输入流中的下一个双精度浮点数。</li></ul><p>来个 demo 吧。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">Scanner</span><span style="color:#F6F6F4;"> scanner </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(System.in); </span><span style="color:#7B7F8B;">// 创建 Scanner 对象，从标准输入流中读取数据</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请输入一个整数：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (scanner.</span><span style="color:#62E884;">hasNextInt</span><span style="color:#F6F6F4;">()) { </span><span style="color:#7B7F8B;">// 判断输入流中是否有下一个整数</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> num </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">nextInt</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取输入流中的下一个整数</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您输入的整数是：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> num);</span></span>
<span class="line"><span style="color:#F6F6F4;">} </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">输入的不是整数！</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">scanner.</span><span style="color:#62E884;">nextLine</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取输入流中的换行符</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请输入多个单词，以空格分隔：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (scanner.</span><span style="color:#62E884;">hasNext</span><span style="color:#F6F6F4;">()) { </span><span style="color:#7B7F8B;">// 判断输入流中是否还有下一个标记</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> word </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取输入流中的下一个单词</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您输入的单词是：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> word);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">scanner.</span><span style="color:#62E884;">nextLine</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取输入流中的换行符</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请输入一个实数：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (scanner.</span><span style="color:#62E884;">hasNextDouble</span><span style="color:#F6F6F4;">()) { </span><span style="color:#7B7F8B;">// 判断输入流中是否有下一个实数</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> num </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">nextDouble</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取输入流中的下一个实数</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您输入的实数是：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> num);</span></span>
<span class="line"><span style="color:#F6F6F4;">} </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">输入的不是实数！</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">scanner.</span><span style="color:#62E884;">nextLine</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取输入流中的换行符</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请输入一个字符串：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (scanner.</span><span style="color:#62E884;">hasNextLine</span><span style="color:#F6F6F4;">()) { </span><span style="color:#7B7F8B;">// 判断输入流中是否有下一行</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> line </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">nextLine</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取输入流中的下一行</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您输入的字符串是：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> line);</span></span>
<span class="line"><span style="color:#F6F6F4;">} </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">输入的不是字符串！</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">scanner.</span><span style="color:#62E884;">close</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 关闭 Scanner 对象</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Scanner scanner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(System.in); </span><span style="color:#6A737D;">// 创建 Scanner 对象，从标准输入流中读取数据</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请输入一个整数：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (scanner.</span><span style="color:#6F42C1;">hasNextInt</span><span style="color:#24292E;">()) { </span><span style="color:#6A737D;">// 判断输入流中是否有下一个整数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取输入流中的下一个整数</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您输入的整数是：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> num);</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;输入的不是整数！&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">scanner.</span><span style="color:#6F42C1;">nextLine</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取输入流中的换行符</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请输入多个单词，以空格分隔：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (scanner.</span><span style="color:#6F42C1;">hasNext</span><span style="color:#24292E;">()) { </span><span style="color:#6A737D;">// 判断输入流中是否还有下一个标记</span></span>
<span class="line"><span style="color:#24292E;">    String word </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取输入流中的下一个单词</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您输入的单词是：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> word);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">scanner.</span><span style="color:#6F42C1;">nextLine</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取输入流中的换行符</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请输入一个实数：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (scanner.</span><span style="color:#6F42C1;">hasNextDouble</span><span style="color:#24292E;">()) { </span><span style="color:#6A737D;">// 判断输入流中是否有下一个实数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">nextDouble</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取输入流中的下一个实数</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您输入的实数是：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> num);</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;输入的不是实数！&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">scanner.</span><span style="color:#6F42C1;">nextLine</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取输入流中的换行符</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请输入一个字符串：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (scanner.</span><span style="color:#6F42C1;">hasNextLine</span><span style="color:#24292E;">()) { </span><span style="color:#6A737D;">// 判断输入流中是否有下一行</span></span>
<span class="line"><span style="color:#24292E;">    String line </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">nextLine</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取输入流中的下一行</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您输入的字符串是：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> line);</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;输入的不是字符串！&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">scanner.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 关闭 Scanner 对象</span></span></code></pre></div><h3 id="_02、扫描文件" tabindex="-1">02、扫描文件 <a class="header-anchor" href="#_02、扫描文件" aria-label="Permalink to &quot;02、扫描文件&quot;">​</a></h3><p>当然了，Scanner 也是可以用来扫描文件的，方式也非常的简单，以下是代码示例：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">try</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 创建 File 对象，表示要扫描的文件</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">File</span><span style="color:#F6F6F4;"> file </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">File</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">docs/安装环境.md</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">Scanner</span><span style="color:#F6F6F4;"> scanner </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(file); </span><span style="color:#7B7F8B;">// 创建 Scanner 对象，从文件中读取数据</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (scanner.</span><span style="color:#62E884;">hasNextLine</span><span style="color:#F6F6F4;">()) { </span><span style="color:#7B7F8B;">// 判断文件中是否有下一行</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> line </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">nextLine</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取文件中的下一行</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(line); </span><span style="color:#7B7F8B;">// 打印读取的行</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    scanner.</span><span style="color:#62E884;">close</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 关闭 Scanner 对象</span></span>
<span class="line"><span style="color:#F6F6F4;">} </span><span style="color:#F286C4;">catch</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">FileNotFoundException</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">文件不存在！</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 创建 File 对象，表示要扫描的文件</span></span>
<span class="line"><span style="color:#24292E;">    File file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;docs/安装环境.md&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    Scanner scanner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(file); </span><span style="color:#6A737D;">// 创建 Scanner 对象，从文件中读取数据</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (scanner.</span><span style="color:#6F42C1;">hasNextLine</span><span style="color:#24292E;">()) { </span><span style="color:#6A737D;">// 判断文件中是否有下一行</span></span>
<span class="line"><span style="color:#24292E;">        String line </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">nextLine</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取文件中的下一行</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(line); </span><span style="color:#6A737D;">// 打印读取的行</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    scanner.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 关闭 Scanner 对象</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (FileNotFoundException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;文件不存在！&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>在上面的示例中，我们首先创建了一个 File 对象，表示要扫描的文件。然后，我们使用 Scanner 类的构造方法来创建 Scanner 对象，将文件作为参数传递给构造方法。在 while 循环中，我们使用 <code>hasNextLine()</code> 方法来判断文件中是否有下一行，如果有，则使用 <code>nextLine()</code> 方法读取该行字符串，并使用 <code>println()</code> 方法将其打印出来。最后，我们在程序结束前使用 <code>close()</code> 方法关闭 Scanner 对象。</p><p>除了使用循环+nextLine，我们还可以使用 useDelimiter 方法设置文件结束符 <code>\\Z</code> 来读取整个文件。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 创建 File 对象，表示要扫描的文件</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">Scanner</span><span style="color:#F6F6F4;"> scanner </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">File</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">docs/安装环境.md</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 创建 Scanner 对象，从文件中读取数据</span></span>
<span class="line"><span style="color:#F6F6F4;">scanner.</span><span style="color:#62E884;">useDelimiter</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">\\\\</span><span style="color:#E7EE98;">Z</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">); </span><span style="color:#7B7F8B;">// 设置分隔符为文件结尾</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (scanner.</span><span style="color:#62E884;">hasNext</span><span style="color:#F6F6F4;">()) { </span><span style="color:#7B7F8B;">// 判断文件中是否有下一行</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> content </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 读取文件中的下一行</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(content); </span><span style="color:#7B7F8B;">// 打印读取的行</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">scanner.</span><span style="color:#62E884;">close</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 关闭 Scanner 对象</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 创建 File 对象，表示要扫描的文件</span></span>
<span class="line"><span style="color:#24292E;">Scanner scanner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;docs/安装环境.md&quot;</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 创建 Scanner 对象，从文件中读取数据</span></span>
<span class="line"><span style="color:#24292E;">scanner.</span><span style="color:#6F42C1;">useDelimiter</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">Z&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 设置分隔符为文件结尾</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (scanner.</span><span style="color:#6F42C1;">hasNext</span><span style="color:#24292E;">()) { </span><span style="color:#6A737D;">// 判断文件中是否有下一行</span></span>
<span class="line"><span style="color:#24292E;">    String content </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 读取文件中的下一行</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(content); </span><span style="color:#6A737D;">// 打印读取的行</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">scanner.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 关闭 Scanner 对象</span></span></code></pre></div><p>正则表达式中的 <code>\\Z</code> 表示输入的结尾，也就是文件结束符。在 Scanner 类中，我们可以使用 <code>\\Z</code> 作为分隔符，以便读取整个文件内容。</p><h3 id="_03、查找匹配项" tabindex="-1">03、查找匹配项 <a class="header-anchor" href="#_03、查找匹配项" aria-label="Permalink to &quot;03、查找匹配项&quot;">​</a></h3><p>除了上面提到的扫描控制台输入流、文件，Scanner 还提供了另外四个以 find 开头的查找匹配项的方法：</p><img src="`+t+`"><p>来看示例：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> input </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">good good study, day day up.</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">Scanner</span><span style="color:#F6F6F4;"> scanner </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(input);</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> result;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// 使用 findInLine() 方法查找字符串中的单词</span></span>
<span class="line"><span style="color:#F6F6F4;">result </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">findInLine</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">study</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">findInLine(): </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> result); </span><span style="color:#7B7F8B;">// 输出 &quot;study&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// 使用 findWithinHorizon() 方法查找字符串中的单词</span></span>
<span class="line"><span style="color:#F6F6F4;">scanner </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(input);</span></span>
<span class="line"><span style="color:#F6F6F4;">result </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">findWithinHorizon</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">study</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">findWithinHorizon(): </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> result); </span><span style="color:#7B7F8B;">// 输出 &quot;study&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">scanner.</span><span style="color:#62E884;">close</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">// 关闭 Scanner 对象</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">String input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;good good study, day day up.&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">Scanner scanner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(input);</span></span>
<span class="line"><span style="color:#24292E;">String result;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用 findInLine() 方法查找字符串中的单词</span></span>
<span class="line"><span style="color:#24292E;">result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">findInLine</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;study&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;findInLine(): &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> result); </span><span style="color:#6A737D;">// 输出 &quot;study&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用 findWithinHorizon() 方法查找字符串中的单词</span></span>
<span class="line"><span style="color:#24292E;">scanner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(input);</span></span>
<span class="line"><span style="color:#24292E;">result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">findWithinHorizon</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;study&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;findWithinHorizon(): &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> result); </span><span style="color:#6A737D;">// 输出 &quot;study&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">scanner.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 关闭 Scanner 对象</span></span></code></pre></div><p>在上面的示例中，我们首先创建了一个字符串 input，表示要查找的文本。然后，我们使用 Scanner 类的构造方法创建 Scanner 对象，并将 input 作为输入流传递给该对象。接着，我们使用 <code>findInLine()</code> 方法和 <code>findWithinHorizon()</code> 方法分别查找字符串中的单词 &quot;study&quot;。其中，<code>findInLine()</code> 方法在当前行中查找匹配项，而 <code>findWithinHorizon()</code> 方法在指定的限制范围内查找匹配项。在本例中，我们将查找的范围限制为前 20 个字符。</p><p>需要注意的是，<code>findInLine()</code> 方法和 <code>findWithinHorizon()</code> 方法都返回找到的匹配项。如果没有找到匹配项，则返回 null。此外，<code>findInLine()</code> 方法和 <code>findWithinHorizon()</code> 方法都会忽略默认的分隔符，因此需要使用正则表达式来指定查找的模式。在本例中，我们使用了字符串 &quot;study&quot; 作为查找的模式。</p><p>当然我们也可以使用正则表达式，比如说我们要在下面的文件中查找 openjdk 这个关键字。</p><img src="`+c+`"><p>代码就可以这样写：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 创建 File 对象，表示要扫描的文件</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">Scanner</span><span style="color:#F6F6F4;"> scanner </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">File</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">docs/安装环境.md</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)); </span><span style="color:#7B7F8B;">// 创建 Scanner 对象，从文件中读取数据</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">Pattern</span><span style="color:#F6F6F4;"> pattern </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Pattern.</span><span style="color:#62E884;">compile</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">op..jdk</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> result;</span></span>
<span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> ((result </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> scanner.</span><span style="color:#62E884;">findWithinHorizon</span><span style="color:#F6F6F4;">(pattern, </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">)) </span><span style="color:#F286C4;">!=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">findWithinHorizon(): </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> result);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 创建 File 对象，表示要扫描的文件</span></span>
<span class="line"><span style="color:#24292E;">Scanner scanner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;docs/安装环境.md&quot;</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 创建 Scanner 对象，从文件中读取数据</span></span>
<span class="line"><span style="color:#24292E;">Pattern pattern </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Pattern.</span><span style="color:#6F42C1;">compile</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;op..jdk&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">String result;</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> ((result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scanner.</span><span style="color:#6F42C1;">findWithinHorizon</span><span style="color:#24292E;">(pattern, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;findWithinHorizon(): &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> result);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>我们用正则表达式 pattern 来表示 <code>openjdk</code> 这个关键字，<code>op..jdk</code> 中的 <code>.</code> 表示任意字符，可以通过查找正则表达式去了解。</p><p>然后我们使用 while 循环来查找文件中所有的 <code>openjdk</code>，其中 findWithinHorizon 方法的第二个参数如果为 0 则表示忽略边界，如果没找到，会返回 null。</p><img src="`+r+'"><p>由于文件中有两个 openjdk 关键字，所以输出结果如下所示：</p><img src="'+y+'"><h3 id="_04、小结" tabindex="-1">04、小结 <a class="header-anchor" href="#_04、小结" aria-label="Permalink to &quot;04、小结&quot;">​</a></h3><p>总之，Scanner 类是一个功能强大的输入处理工具类，不仅可以扫描控制台的输入流，还可以扫描文件，并且提供了多种方法来读取不同类型的数据，比如 <code>next()</code>, <code>nextInt()</code>, <code>nextLine()</code>, <code>nextDouble()</code> 等。</p><p>除此之外，还可以通过 <code>useDelimiter()</code> 方法设置分隔符，通过 <code>findInLine()</code>, <code>findWithinHorizon()</code> 查找匹配项等。</p><hr>',49),E=[i];function u(d,D,S,C,h,q){return n(),a("div",null,E)}const f=s(F,[["render",u]]);export{A as __pageData,f as default};
