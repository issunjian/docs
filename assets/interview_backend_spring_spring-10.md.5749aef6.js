import{_ as o,o as r,c as e,V as a}from"./chunks/framework.c6d8cbec.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/spring/spring-10.md","filePath":"interview/backend/spring/spring-10.md"}'),t={name:"interview/backend/spring/spring-10.md"},n=a('<h3 id="_1、您对微服务有何了解" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C2021%E5%B9%B4%E6%9C%80%E6%96%B0%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#1%E6%82%A8%E5%AF%B9%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9C%89%E4%BD%95%E4%BA%86%E8%A7%A3" target="_blank" rel="noreferrer">1、您对微服务有何了解？</a> <a class="header-anchor" href="#_1、您对微服务有何了解" aria-label="Permalink to &quot;[1、您对微服务有何了解？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题及答案整理，2021年最新，汇总版.md#1您对微服务有何了解)&quot;">​</a></h3><p>微服务，又称微服务架构，是一种架构风格，它将应用程序构建为以业务领域为模型的小型自治服务集合 。</p><p>通俗地说，你必须看到蜜蜂如何通过对齐六角形蜡细胞来构建它们的蜂窝状物。他们最初从使用各种材料的小部分开始，并继续从中构建一个大型蜂箱。这些细胞形成图案，产生坚固的结构，将蜂窝的特定部分固定在一起。这里，每个细胞独立于另一个细胞，但它也与其他细胞相关。这意味着对一个细胞的损害不会损害其他细胞，因此，蜜蜂可以在不影响完整蜂箱的情况下重建这些细胞。</p><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0816/01/img_1.png#alt=img%5C_1.png" alt=""></p><p>图1：微服务的蜂窝表示 – 微服务访谈问题</p><p>请参考上图。这里，每个六边形形状代表单独的服务组件。与蜜蜂的工作类似，每个敏捷团队都使用可用的框架和所选的技术堆栈构建单独的服务组件。就像在蜂箱中一样，每个服务组件形成一个强大的微服务架构，以提供更好的可扩展性。此外，敏捷团队可以单独处理每个服务组件的问题，而对整个应用程序没有影响或影响最小。</p><h3 id="_2、springboot微服务中如何实现-session-共享" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C2021%E5%B9%B4%E6%9C%80%E6%96%B0%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#2springboot%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0-session-%E5%85%B1%E4%BA%AB-" target="_blank" rel="noreferrer">2、SpringBoot微服务中如何实现 session 共享 ?</a> <a class="header-anchor" href="#_2、springboot微服务中如何实现-session-共享" aria-label="Permalink to &quot;[2、SpringBoot微服务中如何实现 session 共享 ?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题及答案整理，2021年最新，汇总版.md#2springboot微服务中如何实现-session-共享-)&quot;">​</a></h3><p>在微服务中，一个完整的项目被拆分成多个不相同的独立的服务，各个服务独立部署在不同的服务器上，各自的 session 被从物理空间上隔离开了，但是经常，我们需要在不同微服务之间共享 session ，常见的方案就是 Spring Session + Redis 来实现 session 共享。将所有微服务的 session 统一保存在 Redis 上，当各个微服务对 session 有相关的读写操作时，都去操作 Redis 上的 session 。这样就实现了 session 共享，Spring Session 基于 Spring 中的代理过滤器实现，使得 session 的同步操作对开发人员而言是透明的，非常简便。</p><h3 id="_3、springboot的自动配置原理是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C2021%E5%B9%B4%E6%9C%80%E6%96%B0%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#3springboot%E7%9A%84%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">3、SpringBoot的自动配置原理是什么</a> <a class="header-anchor" href="#_3、springboot的自动配置原理是什么" aria-label="Permalink to &quot;[3、SpringBoot的自动配置原理是什么](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题及答案整理，2021年最新，汇总版.md#3springboot的自动配置原理是什么)&quot;">​</a></h3><p>主要是SpringBoot的启动类上的核心注解SpringBootApplication注解主配置类，有了这个主配置类启动时就会为SpringBoot开启一个@EnableAutoConfiguration注解自动配置功能。</p><p>有了这个EnableAutoConfiguration的话就会：</p><p><strong>1、</strong> 从配置文件META_INF/Spring、factories加载可能用到的自动配置类</p><p><strong>2、</strong> 去重，并将exclude和excludeName属性携带的类排除</p><p><strong>3、</strong> 过滤，将满足条件（@Conditional）的自动配置类返回</p><h3 id="_4、在-spring中如何注入一个java集合" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C2021%E5%B9%B4%E6%9C%80%E6%96%B0%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#4%E5%9C%A8-spring%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B3%A8%E5%85%A5%E4%B8%80%E4%B8%AAjava%E9%9B%86%E5%90%88" target="_blank" rel="noreferrer">4、在 Spring中如何注入一个java集合？</a> <a class="header-anchor" href="#_4、在-spring中如何注入一个java集合" aria-label="Permalink to &quot;[4、在 Spring中如何注入一个java集合？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题及答案整理，2021年最新，汇总版.md#4在-spring中如何注入一个java集合)&quot;">​</a></h3><p>Spring提供以下几种集合的配置元素：</p><p><strong>1、</strong> 类型用于注入一列值，允许有相同的值。</p><p><strong>2、</strong> 类型用于注入一组值，不允许有相同的值。</p><p><strong>3、</strong> 类型用于注入一组键值对，键和值都可以为任意类型。</p><p><strong>4、</strong> 类型用于注入一组键值对，键和值都只能为String类型。</p><h3 id="_5、springboot、spring-mvc-和-spring-有什么区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C2021%E5%B9%B4%E6%9C%80%E6%96%B0%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#5springbootspring-mvc-%E5%92%8C-spring-%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">5、SpringBoot、Spring MVC 和 Spring 有什么区别？</a> <a class="header-anchor" href="#_5、springboot、spring-mvc-和-spring-有什么区别" aria-label="Permalink to &quot;[5、SpringBoot、Spring MVC 和 Spring 有什么区别？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题及答案整理，2021年最新，汇总版.md#5springbootspring-mvc-和-spring-有什么区别)&quot;">​</a></h3><p><strong>1、</strong> Spring</p><p>Spring最重要的特征是依赖注入。所有 SpringModules 不是依赖注入就是 IOC 控制反转。</p><p>当我们恰当的使用 DI 或者是 IOC 的时候，我们可以开发松耦合应用。松耦合应用的单元测试可以很容易的进行。</p><p><strong>2、</strong> Spring MVC</p><p>Spring MVC 提供了一种分离式的方法来开发 Web 应用。通过运用像 DispatcherServelet，MoudlAndView 和 ViewResolver 等一些简单的概念，开发 Web 应用将会变的非常简单。</p><p><strong>3、</strong> SpringBoot</p><p>Spring 和 SpringMVC 的问题在于需要配置大量的参数。</p><p>SpringBoot 通过一个自动配置和启动的项来目解决这个问题。为了更快的构建产品就绪应用程序，SpringBoot 提供了一些非功能性特征。</p><h3 id="_6、spring-mvc怎么和ajax相互调用的" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C2021%E5%B9%B4%E6%9C%80%E6%96%B0%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#6spring-mvc%E6%80%8E%E4%B9%88%E5%92%8Cajax%E7%9B%B8%E4%BA%92%E8%B0%83%E7%94%A8%E7%9A%84" target="_blank" rel="noreferrer">6、Spring MVC怎么和AJAX相互调用的？</a> <a class="header-anchor" href="#_6、spring-mvc怎么和ajax相互调用的" aria-label="Permalink to &quot;[6、Spring MVC怎么和AJAX相互调用的？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题及答案整理，2021年最新，汇总版.md#6spring-mvc怎么和ajax相互调用的)&quot;">​</a></h3><p>通过Jackson框架就可以把Java里面的对象直接转化成Js可以识别的Json对象。具体步骤如下 ：</p><p><strong>1、</strong> 加入Jackson.jar</p><p><strong>2、</strong> 在配置文件中配置json的映射</p><p><strong>3、</strong> 在接受Ajax方法里面可以直接返回Object,List等,但方法前面要加上@ResponseBody注解。</p><h3 id="_7、解释aop模块" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C2021%E5%B9%B4%E6%9C%80%E6%96%B0%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#7%E8%A7%A3%E9%87%8Aaop%E6%A8%A1%E5%9D%97" target="_blank" rel="noreferrer">7、解释AOP模块</a> <a class="header-anchor" href="#_7、解释aop模块" aria-label="Permalink to &quot;[7、解释AOP模块](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题及答案整理，2021年最新，汇总版.md#7解释aop模块)&quot;">​</a></h3><p>AOP模块用于发给我们的Spring应用做面向切面的开发， 很多支持由AOP联盟提供，这样就确保了Spring和其他AOP框架的共通性。这个模块将元数据编程引入Spring。</p><h3 id="_8、如何在自定义端口上运行springboot应用程序" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C2021%E5%B9%B4%E6%9C%80%E6%96%B0%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#8%E5%A6%82%E4%BD%95%E5%9C%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E7%AB%AF%E5%8F%A3%E4%B8%8A%E8%BF%90%E8%A1%8Cspringboot%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F" target="_blank" rel="noreferrer">8、如何在自定义端口上运行SpringBoot应用程序？</a> <a class="header-anchor" href="#_8、如何在自定义端口上运行springboot应用程序" aria-label="Permalink to &quot;[8、如何在自定义端口上运行SpringBoot应用程序？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题及答案整理，2021年最新，汇总版.md#8如何在自定义端口上运行springboot应用程序)&quot;">​</a></h3><p>为了在自定义端口上运行SpringBoot应用程序，您可以在application.properties中指定端口。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">server.port = 8090</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">server.port = 8090</span></span></code></pre></div><h3 id="_9、什么是bean装配" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C2021%E5%B9%B4%E6%9C%80%E6%96%B0%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#9%E4%BB%80%E4%B9%88%E6%98%AFbean%E8%A3%85%E9%85%8D" target="_blank" rel="noreferrer">9、什么是bean装配?</a> <a class="header-anchor" href="#_9、什么是bean装配" aria-label="Permalink to &quot;[9、什么是bean装配?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题及答案整理，2021年最新，汇总版.md#9什么是bean装配)&quot;">​</a></h3><p>装配，或bean 装配是指在Spring 容器中把bean组装到一起，前提是容器需要知道bean的依赖关系，如何通过依赖注入来把它们装配到一起。</p><h3 id="_10、springboot支持哪些嵌入式容器" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C2021%E5%B9%B4%E6%9C%80%E6%96%B0%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#10springboot%E6%94%AF%E6%8C%81%E5%93%AA%E4%BA%9B%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%AE%B9%E5%99%A8" target="_blank" rel="noreferrer">10、SpringBoot支持哪些嵌入式容器？</a> <a class="header-anchor" href="#_10、springboot支持哪些嵌入式容器" aria-label="Permalink to &quot;[10、SpringBoot支持哪些嵌入式容器？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring面试题及答案整理，2021年最新，汇总版.md#10springboot支持哪些嵌入式容器)&quot;">​</a></h3><p>无论何时创建Java应用程序，都可以通过两种方法进行部署： 使用外部的应用程序容器。 将容器嵌入jar文件中。 SpringBoot包含Jetty，Tomcat和Undertow服务器，所有服务器都是嵌入式的。 Jetty - 用于大量项目，Eclipse Jetty可以嵌入到框架，应用程序服务器，工具和集群中。 Tomcat - Apache Tomcat是一个开源JavaServer Pages实现，可以很好地与嵌入式系统配合使用。 Undertow - 一个灵活而突出的Web服务器，它使用小型单一处理程序来开发Web服务器。</p><h3 id="_11、分布式配置中心的作用" tabindex="-1">11、分布式配置中心的作用？ <a class="header-anchor" href="#_11、分布式配置中心的作用" aria-label="Permalink to &quot;11、分布式配置中心的作用？&quot;">​</a></h3><h3 id="_12、springboot读取配置文件的方式" tabindex="-1">12、SpringBoot读取配置文件的方式 <a class="header-anchor" href="#_12、springboot读取配置文件的方式" aria-label="Permalink to &quot;12、SpringBoot读取配置文件的方式&quot;">​</a></h3><h3 id="_13、-component-controller-repository-service-有何区别" tabindex="-1">13、@Component, @Controller, @Repository, <a href="/docs/Service.html">@Service </a> 有何区别？ <a class="header-anchor" href="#_13、-component-controller-repository-service-有何区别" aria-label="Permalink to &quot;13、@Component, @Controller, @Repository, [@Service ](/Service ) 有何区别？&quot;">​</a></h3><h3 id="_14、哪种依赖注入方式你建议使用-构造器注入-还是-setter方法注入" tabindex="-1">14、哪种依赖注入方式你建议使用，构造器注入，还是 Setter方法注入？ <a class="header-anchor" href="#_14、哪种依赖注入方式你建议使用-构造器注入-还是-setter方法注入" aria-label="Permalink to &quot;14、哪种依赖注入方式你建议使用，构造器注入，还是 Setter方法注入？&quot;">​</a></h3><h3 id="_15、如何实现springboot应用程序的安全性" tabindex="-1">15、如何实现SpringBoot应用程序的安全性？ <a class="header-anchor" href="#_15、如何实现springboot应用程序的安全性" aria-label="Permalink to &quot;15、如何实现SpringBoot应用程序的安全性？&quot;">​</a></h3><h3 id="_16、请描述spring-mvc的工作流程-描述一下-dispatcherservlet-的工作流程" tabindex="-1">16、请描述Spring MVC的工作流程？描述一下 DispatcherServlet 的工作流程？ <a class="header-anchor" href="#_16、请描述spring-mvc的工作流程-描述一下-dispatcherservlet-的工作流程" aria-label="Permalink to &quot;16、请描述Spring MVC的工作流程？描述一下 DispatcherServlet 的工作流程？&quot;">​</a></h3><h3 id="_17、spring-mvc与struts2区别" tabindex="-1">17、Spring MVC与Struts2区别 <a class="header-anchor" href="#_17、spring-mvc与struts2区别" aria-label="Permalink to &quot;17、Spring MVC与Struts2区别&quot;">​</a></h3><h3 id="_18、springboot的核心注解是哪个-它主要由哪几个注解组成的" tabindex="-1">18、SpringBoot的核心注解是哪个？它主要由哪几个注解组成的？ <a class="header-anchor" href="#_18、springboot的核心注解是哪个-它主要由哪几个注解组成的" aria-label="Permalink to &quot;18、SpringBoot的核心注解是哪个？它主要由哪几个注解组成的？&quot;">​</a></h3><h3 id="_19、什么是-aspect" tabindex="-1">19、什么是 Aspect？ <a class="header-anchor" href="#_19、什么是-aspect" aria-label="Permalink to &quot;19、什么是 Aspect？&quot;">​</a></h3><h3 id="_20、什么是-spring-data" tabindex="-1">20、什么是 Spring Data ? <a class="header-anchor" href="#_20、什么是-spring-data" aria-label="Permalink to &quot;20、什么是 Spring Data ?&quot;">​</a></h3><h3 id="_21、哪些是重要的bean生命周期方法-你能重载它们吗" tabindex="-1">21、哪些是重要的bean生命周期方法？你能重载它们吗？ <a class="header-anchor" href="#_21、哪些是重要的bean生命周期方法-你能重载它们吗" aria-label="Permalink to &quot;21、哪些是重要的bean生命周期方法？你能重载它们吗？&quot;">​</a></h3><h3 id="_22、微服务设计的基础是什么" tabindex="-1">22、微服务设计的基础是什么？ <a class="header-anchor" href="#_22、微服务设计的基础是什么" aria-label="Permalink to &quot;22、微服务设计的基础是什么？&quot;">​</a></h3><h3 id="_23、springboot-还提供了其它的哪些-starter-project-options" tabindex="-1">23、SpringBoot 还提供了其它的哪些 Starter Project Options？ <a class="header-anchor" href="#_23、springboot-还提供了其它的哪些-starter-project-options" aria-label="Permalink to &quot;23、SpringBoot 还提供了其它的哪些 Starter Project Options？&quot;">​</a></h3><h3 id="_24、springboot-实现热部署有哪几种方式" tabindex="-1">24、SpringBoot 实现热部署有哪几种方式？ <a class="header-anchor" href="#_24、springboot-实现热部署有哪几种方式" aria-label="Permalink to &quot;24、SpringBoot 实现热部署有哪几种方式？&quot;">​</a></h3><h3 id="_25、springboot有哪些优点" tabindex="-1">25、SpringBoot有哪些优点？ <a class="header-anchor" href="#_25、springboot有哪些优点" aria-label="Permalink to &quot;25、SpringBoot有哪些优点？&quot;">​</a></h3><h3 id="_26、一个-spring-bean-定义-包含什么" tabindex="-1">26、一个 Spring Bean 定义 包含什么？ <a class="header-anchor" href="#_26、一个-spring-bean-定义-包含什么" aria-label="Permalink to &quot;26、一个 Spring Bean 定义 包含什么？&quot;">​</a></h3><h3 id="_27、springboot-自动配置原理是什么" tabindex="-1">27、SpringBoot 自动配置原理是什么？ <a class="header-anchor" href="#_27、springboot-自动配置原理是什么" aria-label="Permalink to &quot;27、SpringBoot 自动配置原理是什么？&quot;">​</a></h3><h3 id="_28、spring-cloud-和dubbo区别" tabindex="-1">28、Spring Cloud 和dubbo区别? <a class="header-anchor" href="#_28、spring-cloud-和dubbo区别" aria-label="Permalink to &quot;28、Spring Cloud 和dubbo区别?&quot;">​</a></h3><h3 id="_29、你怎样定义类的作用域" tabindex="-1">29、你怎样定义类的作用域? <a class="header-anchor" href="#_29、你怎样定义类的作用域" aria-label="Permalink to &quot;29、你怎样定义类的作用域?&quot;">​</a></h3><h3 id="_30、熔断的原理-以及如何恢复" tabindex="-1">30、熔断的原理，以及如何恢复？ <a class="header-anchor" href="#_30、熔断的原理-以及如何恢复" aria-label="Permalink to &quot;30、熔断的原理，以及如何恢复？&quot;">​</a></h3>',63),s=[n];function i(p,E,g,l,h,B){return r(),e("div",null,s)}const b=o(t,[["render",i]]);export{d as __pageData,b as default};
