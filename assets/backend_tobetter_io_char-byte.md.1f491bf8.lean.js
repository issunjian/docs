import{_ as s,o as a,c as n,V as l}from"./chunks/framework.c6d8cbec.js";const p="/docs/assets/char-byte-20230322165959.14815147.png",o="/docs/assets/char-byte-20230322174312.e3a08cd5.png",m=JSON.parse('{"title":"Java 转换流：Java 字节流和字符流的桥梁","description":"本文详细介绍了 Java 转换流在 IO 操作中的重要作用，阐述了其如何有效地将字节流与字符流相互转换。同时，文章还提供了转换流的实际应用示例和常用方法。阅读本文，将帮助您更深入地了解 Java 转换流及其在 Java 编程中的关键地位，提高数据处理的灵活性和效率。","frontmatter":{"title":"Java 转换流：Java 字节流和字符流的桥梁","shortTitle":"转换流","category":["Java核心"],"tag":["Java IO"],"description":"本文详细介绍了 Java 转换流在 IO 操作中的重要作用，阐述了其如何有效地将字节流与字符流相互转换。同时，文章还提供了转换流的实际应用示例和常用方法。阅读本文，将帮助您更深入地了解 Java 转换流及其在 Java 编程中的关键地位，提高数据处理的灵活性和效率。","head":[["meta",{"name":"keywords","content":"Java,Java IO,转换流,InputStreamReader,OutputStreamWriter,乱码,编码,解码,java转换流"}]]},"headers":[],"relativePath":"backend/tobetter/io/char-byte.md","filePath":"backend/tobetter/io/char-byte.md"}'),e={name:"backend/tobetter/io/char-byte.md"},t=l("",67),r=[t];function c(F,y,i,E,u,d){return a(),n("div",null,r)}const f=s(e,[["render",c]]);export{m as __pageData,f as default};
