import{_ as s,o as n,c as a,V as l}from"./chunks/framework.c6d8cbec.js";const d=JSON.parse('{"title":"常见高级面试题","description":"","frontmatter":{},"headers":[],"relativePath":"interview/frontend/js/高级面试题.md","filePath":"interview/frontend/js/高级面试题.md"}'),p={name:"interview/frontend/js/高级面试题.md"},o=l(`<h1 id="常见高级面试题" tabindex="-1">常见高级面试题 <a class="header-anchor" href="#常见高级面试题" aria-label="Permalink to &quot;常见高级面试题&quot;">​</a></h1><h2 id="怎么禁止下载图片-midjourney实现" tabindex="-1">怎么禁止下载图片（midjourney实现） <a class="header-anchor" href="#怎么禁止下载图片-midjourney实现" aria-label="Permalink to &quot;怎么禁止下载图片（midjourney实现）&quot;">​</a></h2><p><strong>方案一：禁止右键</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">img</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">src</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">image.png</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">oncontextmenu</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">return</span><span style="color:#E7EE98;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#E7EE98;">;</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;image.png&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">oncontextmenu</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#D73A49;">return</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">false</span><span style="color:#032F62;">;&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">window.</span><span style="color:#62E884;">onload</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">    document.</span><span style="color:#62E884;">oncontextmenu</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        event.returnValue </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    };</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">onload</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    document.</span><span style="color:#6F42C1;">oncontextmenu</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        event.returnValue </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>方案二：禁止拖拽</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">img</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">src</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">image.png</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">ondragstart</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">return</span><span style="color:#E7EE98;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#E7EE98;">;</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;image.png&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ondragstart</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#D73A49;">return</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">false</span><span style="color:#032F62;">;&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p><strong>方案三：使用遮罩层</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">style</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">position: relative; display: inline-block;</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">img</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">src</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">image.png</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">alt</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">style</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: 10;</span></span>
<span class="line"><span style="color:#E7EE98;">                background: url(image.png) no-repeat center center / contain; opacity: 0.7;</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;position: relative; display: inline-block;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;image.png&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">alt</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: 10;</span></span>
<span class="line"><span style="color:#032F62;">                background: url(image.png) no-repeat center center / contain; opacity: 0.7;&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><strong>方案四:转换为 canvas</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">async</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">imageToCanvas</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">url</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">canvas</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">HTMLCanvasElement</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Promise</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">resolve</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">reject</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">//新建Image对象，引入当前目录下的图片</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> img </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Image</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">    img.src </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> url</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> c </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> canvas.</span><span style="color:#62E884;">getContext</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">2d</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">//图片初始化完成后调用</span></span>
<span class="line"><span style="color:#F6F6F4;">    img.</span><span style="color:#62E884;">onload</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">//将canvas的宽高设置为图像的宽高</span></span>
<span class="line"><span style="color:#F6F6F4;">      canvas.width </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> img.width</span></span>
<span class="line"><span style="color:#F6F6F4;">      canvas.height </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> img.height</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">//canvas画图片</span></span>
<span class="line"><span style="color:#F6F6F4;">      c.</span><span style="color:#62E884;">drawImage</span><span style="color:#F6F6F4;">(img, </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">, img.width, img.height)</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#62E884;">resolve</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    img.</span><span style="color:#62E884;">addEventListener</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">error</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#62E884;">reject</span><span style="color:#F6F6F4;">(e)</span></span>
<span class="line"><span style="color:#F6F6F4;">    })</span></span>
<span class="line"><span style="color:#F6F6F4;">  })</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">imageToCanvas</span><span style="color:#24292E;">(</span><span style="color:#E36209;">url</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">canvas</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLCanvasElement</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">((</span><span style="color:#E36209;">resolve</span><span style="color:#24292E;">, </span><span style="color:#E36209;">reject</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//新建Image对象，引入当前目录下的图片</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">img</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Image</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    img.src </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> url</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">c</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> canvas.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;2d&#39;</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//图片初始化完成后调用</span></span>
<span class="line"><span style="color:#24292E;">    img.</span><span style="color:#6F42C1;">onload</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//将canvas的宽高设置为图像的宽高</span></span>
<span class="line"><span style="color:#24292E;">      canvas.width </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> img.width</span></span>
<span class="line"><span style="color:#24292E;">      canvas.height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> img.height</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//canvas画图片</span></span>
<span class="line"><span style="color:#24292E;">      c.</span><span style="color:#6F42C1;">drawImage</span><span style="color:#24292E;">(img, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, img.width, img.height)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    img.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;error&#39;</span><span style="color:#24292E;">, (</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(e)</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">throwFn</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">throw</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Error</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Uncaught DOMException: Failed to execute &#39;toDataURL&#39; on &#39;HTMLCanvasElement&#39;: Tainted canvases may not be exported.</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  )</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> $canvasRef </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useRef</span><span style="color:#F6F6F4;">&lt;</span><span style="color:#FFB86C;font-style:italic;">HTMLCanvasElement</span><span style="color:#F6F6F4;">&gt;(</span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useEffect</span><span style="color:#F6F6F4;">(() </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">     ;(</span><span style="color:#F286C4;">async</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">         </span><span style="color:#F286C4;">await</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">imageToCanvas</span><span style="color:#F6F6F4;">(props.url, $canvasRef.current</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">         $canvasRef.current</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">.toBlob </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> throwFn</span></span>
<span class="line"><span style="color:#F6F6F4;">         $canvasRef.current</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">.toDataURL </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> throwFn</span></span>
<span class="line"><span style="color:#F6F6F4;">     })()</span></span>
<span class="line"><span style="color:#F6F6F4;"> }, [])</span></span>
<span class="line"><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> (</span></span>
<span class="line"><span style="color:#F6F6F4;">     &lt;</span><span style="color:#F286C4;">canvas</span></span>
<span class="line"><span style="color:#F6F6F4;">         </span><span style="color:#62E884;font-style:italic;">ref</span><span style="color:#F286C4;">={</span><span style="color:#F6F6F4;">$canvasRef</span><span style="color:#F286C4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">         </span><span style="color:#62E884;font-style:italic;">onTouchStart</span><span style="color:#F286C4;">={</span><span style="color:#F6F6F4;">preventDefaultListener</span><span style="color:#F286C4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">         </span><span style="color:#62E884;font-style:italic;">onContextMenu</span><span style="color:#F286C4;">={</span><span style="color:#F6F6F4;">preventDefaultListener</span><span style="color:#F286C4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">     /&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;"> )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">throwFn</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Error</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Uncaught DOMException: Failed to execute &#39;toDataURL&#39; on &#39;HTMLCanvasElement&#39;: Tainted canvases may not be exported.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$canvasRef</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useRef</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">HTMLCanvasElement</span><span style="color:#24292E;">&gt;(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useEffect</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">     ;(</span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">imageToCanvas</span><span style="color:#24292E;">(props.url, $canvasRef.current</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         $canvasRef.current</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">.toBlob </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> throwFn</span></span>
<span class="line"><span style="color:#24292E;">         $canvasRef.current</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">.toDataURL </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> throwFn</span></span>
<span class="line"><span style="color:#24292E;">     })()</span></span>
<span class="line"><span style="color:#24292E;"> }, [])</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">     &lt;</span><span style="color:#22863A;">canvas</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">ref</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{$canvasRef}</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">onTouchStart</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{preventDefaultListener}</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">onContextMenu</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{preventDefaultListener}</span></span>
<span class="line"><span style="color:#24292E;">     /&gt;</span></span>
<span class="line"><span style="color:#24292E;"> )</span></span></code></pre></div>`,12),e=[o];function t(c,r,y,F,i,E){return n(),a("div",null,e)}const g=s(p,[["render",t]]);export{d as __pageData,g as default};
