import{_ as s,o as n,c as a,V as e}from"./chunks/framework.c6d8cbec.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/nginx/nginx-01.md","filePath":"interview/backend/nginx/nginx-01.md"}'),l={name:"interview/backend/nginx/nginx-01.md"},o=e(`<h3 id="_1、请陈述-stub-status-和-sub-filter-指令的作用是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#1%E8%AF%B7%E9%99%88%E8%BF%B0-stub_status-%E5%92%8C-sub_filter-%E6%8C%87%E4%BB%A4%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">1、请陈述 stub_status 和 sub_filter 指令的作用是什么?</a> <a class="header-anchor" href="#_1、请陈述-stub-status-和-sub-filter-指令的作用是什么" aria-label="Permalink to &quot;[1、请陈述 stub_status 和 sub_filter 指令的作用是什么?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx最新2021年面试题，高级面试题及附答案解析.md#1请陈述-stub_status-和-sub_filter-指令的作用是什么)&quot;">​</a></h3><p>Stub_status 指令：该指令用于了解 Nginx 当前状态的当前状态，如当前的活</p><p>动连接，接受和处理当前读/写/等待连接的总数</p><p>Sub_filter 指令：它用于搜索和替换响应中的内容，并快速修复陈旧的数据</p><h3 id="_2、nignx配置" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#2nignx%E9%85%8D%E7%BD%AE" target="_blank" rel="noreferrer">2、nignx配置</a> <a class="header-anchor" href="#_2、nignx配置" aria-label="Permalink to &quot;[2、nignx配置](https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx最新2021年面试题，高级面试题及附答案解析.md#2nignx配置)&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">worker_processes  8;     工作进程个数</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">worker_connections  65535;  每个工作进程能并发处理（发起）的最大连接数（包含所有连接数）</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">error_log         /data/logs/nginx/error.log;  错误日志打印地址</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">access_log      /data/logs/nginx/access.log  进入日志打印地址</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">log_format  main  &#39;remote_addr&quot;request&quot; &#39;&#39;status upstream_addr &quot;$request_time&quot;&#39;; 进入日志格式</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">fastcgi_connect_timeout=300; #连接到后端fastcgi超时时间</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">fastcgi_send_timeout=300; #向fastcgi请求超时时间(这个指定值已经完成两次握手后向fastcgi传送请求的超时时间)</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">fastcgi_rend_timeout=300; #接收fastcgi应答超时时间，同理也是2次握手后</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">fastcgi_buffer_size=64k; #读取fastcgi应答第一部分需要多大缓冲区，该值表示使用1个64kb的缓冲区读取应答第一部分(应答头),可以设置为fastcgi_buffers选项缓冲区大小</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">fastcgi_buffers 4 64k;#指定本地需要多少和多大的缓冲区来缓冲fastcgi应答请求，假设一个php或java脚本所产生页面大小为256kb,那么会为其分配4个64kb的缓冲来缓存</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">fastcgi_cache TEST;#开启fastcgi缓存并为其指定为TEST名称，降低cpu负载,防止502错误发生</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">listen       80;                                            监听端口</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">server_name  rrc.test.jiedaibao.com;       允许域名</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">root  /data/release/rrc/web;                    项目根目录</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">index  index.php index.html index.htm;  访问根文件</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">worker_processes  8;     工作进程个数</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">worker_connections  65535;  每个工作进程能并发处理（发起）的最大连接数（包含所有连接数）</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">error_log         /data/logs/nginx/error.log;  错误日志打印地址</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">access_log      /data/logs/nginx/access.log  进入日志打印地址</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">log_format  main  &#39;remote_addr&quot;request&quot; &#39;&#39;status upstream_addr &quot;$request_time&quot;&#39;; 进入日志格式</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">fastcgi_connect_timeout=300; #连接到后端fastcgi超时时间</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">fastcgi_send_timeout=300; #向fastcgi请求超时时间(这个指定值已经完成两次握手后向fastcgi传送请求的超时时间)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">fastcgi_rend_timeout=300; #接收fastcgi应答超时时间，同理也是2次握手后</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">fastcgi_buffer_size=64k; #读取fastcgi应答第一部分需要多大缓冲区，该值表示使用1个64kb的缓冲区读取应答第一部分(应答头),可以设置为fastcgi_buffers选项缓冲区大小</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">fastcgi_buffers 4 64k;#指定本地需要多少和多大的缓冲区来缓冲fastcgi应答请求，假设一个php或java脚本所产生页面大小为256kb,那么会为其分配4个64kb的缓冲来缓存</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">fastcgi_cache TEST;#开启fastcgi缓存并为其指定为TEST名称，降低cpu负载,防止502错误发生</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">listen       80;                                            监听端口</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">server_name  rrc.test.jiedaibao.com;       允许域名</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">root  /data/release/rrc/web;                    项目根目录</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">index  index.php index.html index.htm;  访问根文件</span></span></code></pre></div><h3 id="_3、请列举-nginx-服务器的最佳用途。nginx-服务器的最佳用法是在网络上部署动态-http-内容-使用-scgi、wsgi-应" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#3%E8%AF%B7%E5%88%97%E4%B8%BE-nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E7%94%A8%E9%80%94%E3%80%82nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E7%94%A8%E6%B3%95%E6%98%AF%E5%9C%A8%E7%BD%91%E7%BB%9C%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%8A%A8%E6%80%81-http-%E5%86%85%E5%AE%B9%E4%BD%BF%E7%94%A8-scgiwsgi-%E5%BA%94" target="_blank" rel="noreferrer">3、请列举 Nginx 服务器的最佳用途。Nginx 服务器的最佳用法是在网络上部署动态 HTTP 内容，使用 SCGI、WSGI 应</a> <a class="header-anchor" href="#_3、请列举-nginx-服务器的最佳用途。nginx-服务器的最佳用法是在网络上部署动态-http-内容-使用-scgi、wsgi-应" aria-label="Permalink to &quot;[3、请列举 Nginx 服务器的最佳用途。Nginx 服务器的最佳用法是在网络上部署动态 HTTP 内容，使用 SCGI、WSGI 应](https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx最新2021年面试题，高级面试题及附答案解析.md#3请列举-nginx-服务器的最佳用途。nginx-服务器的最佳用法是在网络上部署动态-http-内容使用-scgiwsgi-应)&quot;">​</a></h3><p>用程序服务器、用于脚本的 FastCGI 处理程序。它还可以作为负载均衡器。</p><h3 id="_4、为什么要做动静分离" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#4%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%81%9A%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB" target="_blank" rel="noreferrer">4、为什么要做动静分离？</a> <a class="header-anchor" href="#_4、为什么要做动静分离" aria-label="Permalink to &quot;[4、为什么要做动静分离？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx最新2021年面试题，高级面试题及附答案解析.md#4为什么要做动静分离)&quot;">​</a></h3><p><strong>1、</strong> Nginx是当下最热的Web容器，网站优化的重要点在于静态化网站，网站静态化的关键点则是是动静分离，动静分离是让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们则根据静态资源的特点将其做缓存操作。</p><p><strong>2、</strong> 让静态的资源只走静态资源服务器，动态的走动态的服务器</p><p><strong>3、</strong> Nginx的静态处理能力很强，但是动态处理能力不足，因此，在企业中常用动静分离技术。</p><p><strong>4、</strong> 对于静态资源比如图片，js，css等文件，我们则在反向代理服务器nginx中进行缓存。这样浏览器在请求一个静态资源时，代理服务器nginx就可以直接处理，无需将请求转发给后端服务器tomcat。</p><p><strong>5、</strong> 若用户请求的动态文件，比如servlet,jsp则转发给Tomcat服务器处理，从而实现动静分离。这也是反向代理服务器的一个重要的作用。</p><h3 id="_5、nginx怎么判断别ip不可访问" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#5nginx%E6%80%8E%E4%B9%88%E5%88%A4%E6%96%AD%E5%88%ABip%E4%B8%8D%E5%8F%AF%E8%AE%BF%E9%97%AE" target="_blank" rel="noreferrer">5、Nginx怎么判断别IP不可访问？</a> <a class="header-anchor" href="#_5、nginx怎么判断别ip不可访问" aria-label="Permalink to &quot;[5、Nginx怎么判断别IP不可访问？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx最新2021年面试题，高级面试题及附答案解析.md#5nginx怎么判断别ip不可访问)&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;"># 如果访问的ip地址为192.168.9.115,则返回403</span></span>
<span class="line"><span style="color:#f6f6f4;">if  ($remote_addr = 192.168.9.115) {</span></span>
<span class="line"><span style="color:#f6f6f4;">     return 403;</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 如果访问的ip地址为192.168.9.115,则返回403</span></span>
<span class="line"><span style="color:#24292e;">if  ($remote_addr = 192.168.9.115) {</span></span>
<span class="line"><span style="color:#24292e;">     return 403;</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><h3 id="_6、nginx状态码" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#6nginx%E7%8A%B6%E6%80%81%E7%A0%81" target="_blank" rel="noreferrer">6、nginx状态码</a> <a class="header-anchor" href="#_6、nginx状态码" aria-label="Permalink to &quot;[6、nginx状态码](https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx最新2021年面试题，高级面试题及附答案解析.md#6nginx状态码)&quot;">​</a></h3><p>499：服务端处理时间过长，客户端主动关闭了连接。</p><h3 id="_7、location正则案例" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#7location%E6%AD%A3%E5%88%99%E6%A1%88%E4%BE%8B" target="_blank" rel="noreferrer">7、Location正则案例</a> <a class="header-anchor" href="#_7、location正则案例" aria-label="Permalink to &quot;[7、Location正则案例](https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx最新2021年面试题，高级面试题及附答案解析.md#7location正则案例)&quot;">​</a></h3><p><strong>示例：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">#优先级</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">精确匹配，根路径</span></span>
<span class="line"><span style="color:#f6f6f4;">location = / {</span></span>
<span class="line"><span style="color:#f6f6f4;">   return 400;</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">#优先级2,以某个字符串开头,以av开头的，优先匹配这里，区分大小写</span></span>
<span class="line"><span style="color:#f6f6f4;">location ^~ /av {</span></span>
<span class="line"><span style="color:#f6f6f4;">    root / data / av / ;</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">#优先级</span></span>
<span class="line"><span style="color:#f6f6f4;">3，区分大小写的正则匹配，匹配 / media * * * * * 路径location~ / media {</span></span>
<span class="line"><span style="color:#f6f6f4;">    alias / data / static / ;</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">#优先级</span></span>
<span class="line"><span style="color:#f6f6f4;">4，不区分大小写的正则匹配，所有的 * * * * .jpg | gif | png都走这里</span></span>
<span class="line"><span style="color:#f6f6f4;">location~ * .*\\.(jpg | gif | png | js | css) $ {</span></span>
<span class="line"><span style="color:#f6f6f4;">    root / data / av / ;</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">#优先</span></span>
<span class="line"><span style="color:#f6f6f4;">7，通用匹配</span></span>
<span class="line"><span style="color:#f6f6f4;">location / {</span></span>
<span class="line"><span style="color:#f6f6f4;">    return 403;</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#优先级</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">精确匹配，根路径</span></span>
<span class="line"><span style="color:#24292e;">location = / {</span></span>
<span class="line"><span style="color:#24292e;">   return 400;</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#优先级2,以某个字符串开头,以av开头的，优先匹配这里，区分大小写</span></span>
<span class="line"><span style="color:#24292e;">location ^~ /av {</span></span>
<span class="line"><span style="color:#24292e;">    root / data / av / ;</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#优先级</span></span>
<span class="line"><span style="color:#24292e;">3，区分大小写的正则匹配，匹配 / media * * * * * 路径location~ / media {</span></span>
<span class="line"><span style="color:#24292e;">    alias / data / static / ;</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#优先级</span></span>
<span class="line"><span style="color:#24292e;">4，不区分大小写的正则匹配，所有的 * * * * .jpg | gif | png都走这里</span></span>
<span class="line"><span style="color:#24292e;">location~ * .*\\.(jpg | gif | png | js | css) $ {</span></span>
<span class="line"><span style="color:#24292e;">    root / data / av / ;</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#优先</span></span>
<span class="line"><span style="color:#24292e;">7，通用匹配</span></span>
<span class="line"><span style="color:#24292e;">location / {</span></span>
<span class="line"><span style="color:#24292e;">    return 403;</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><h3 id="_8、解释-nginx-是否支持将请求压缩到上游" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#8%E8%A7%A3%E9%87%8A-nginx-%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81%E5%B0%86%E8%AF%B7%E6%B1%82%E5%8E%8B%E7%BC%A9%E5%88%B0%E4%B8%8A%E6%B8%B8" target="_blank" rel="noreferrer">8、解释 Nginx 是否支持将请求压缩到上游?</a> <a class="header-anchor" href="#_8、解释-nginx-是否支持将请求压缩到上游" aria-label="Permalink to &quot;[8、解释 Nginx 是否支持将请求压缩到上游?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx最新2021年面试题，高级面试题及附答案解析.md#8解释-nginx-是否支持将请求压缩到上游)&quot;">​</a></h3><p>您可以使用 Nginx 模块 gunzip 将请求压缩到上游。gunzip 模块是一个过滤</p><p>器，它可以对不支持“gzip”编码方法的客户机或服务器使用“内容编</p><p>码:gzip”来解压缩响应。</p><h3 id="_9、使用-反向代理服务器-的优点是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#9%E4%BD%BF%E7%94%A8%E2%80%9C%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%BC%98%E7%82%B9%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">9、使用“反向代理服务器”的优点是什么?</a> <a class="header-anchor" href="#_9、使用-反向代理服务器-的优点是什么" aria-label="Permalink to &quot;[9、使用“反向代理服务器”的优点是什么?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx最新2021年面试题，高级面试题及附答案解析.md#9使用“反向代理服务器的优点是什么)&quot;">​</a></h3><p>反向代理服务器可以隐藏源服务器的存在和特征。它充当互联网云和web服务器之间的中间层。这对于安全方面来说是很好的，特别是当您使用web托管服务时。</p><h3 id="_10、请解释是否有可能将-nginx-的错误替换为-502-错误、503" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#10%E8%AF%B7%E8%A7%A3%E9%87%8A%E6%98%AF%E5%90%A6%E6%9C%89%E5%8F%AF%E8%83%BD%E5%B0%86-nginx-%E7%9A%84%E9%94%99%E8%AF%AF%E6%9B%BF%E6%8D%A2%E4%B8%BA-502-%E9%94%99%E8%AF%AF503" target="_blank" rel="noreferrer">10、请解释是否有可能将 Nginx 的错误替换为 502 错误、503?</a> <a class="header-anchor" href="#_10、请解释是否有可能将-nginx-的错误替换为-502-错误、503" aria-label="Permalink to &quot;[10、请解释是否有可能将 Nginx 的错误替换为 502 错误、503?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Nginx/Nginx最新2021年面试题，高级面试题及附答案解析.md#10请解释是否有可能将-nginx-的错误替换为-502-错误503)&quot;">​</a></h3><p>502 =错误网关</p><p>503 =服务器超载</p><p>有可能，但是您可以确保 fastcgi_intercept_errors 被设置为 ON，并使用错</p><p>误页面指令。</p><p>Location / {fastcgi_pass 127.0.01:9001;fastcgi_intercept_errors</p><p>on;error_page 502 =503/error_page.html;#…}</p><h3 id="_11、用nginx服务器解释-s的目的是什么" tabindex="-1">11、用Nginx服务器解释-s的目的是什么? <a class="header-anchor" href="#_11、用nginx服务器解释-s的目的是什么" aria-label="Permalink to &quot;11、用Nginx服务器解释-s的目的是什么?&quot;">​</a></h3><h3 id="_12、轮询-默认" tabindex="-1">12、轮询(默认) <a class="header-anchor" href="#_12、轮询-默认" aria-label="Permalink to &quot;12、轮询(默认)&quot;">​</a></h3><h3 id="_13、nginx负载均衡的算法怎么实现的-策略有哪些" tabindex="-1">13、Nginx负载均衡的算法怎么实现的?策略有哪些? <a class="header-anchor" href="#_13、nginx负载均衡的算法怎么实现的-策略有哪些" aria-label="Permalink to &quot;13、Nginx负载均衡的算法怎么实现的?策略有哪些?&quot;">​</a></h3><h3 id="_14、列举nginx服务器的最佳用途。" tabindex="-1">14、列举Nginx服务器的最佳用途。 <a class="header-anchor" href="#_14、列举nginx服务器的最佳用途。" aria-label="Permalink to &quot;14、列举Nginx服务器的最佳用途。&quot;">​</a></h3><h3 id="_15、解释nginx是否支持将请求压缩到上游" tabindex="-1">15、解释<code>Nginx</code>是否支持将请求压缩到上游? <a class="header-anchor" href="#_15、解释nginx是否支持将请求压缩到上游" aria-label="Permalink to &quot;15、解释\`Nginx\`是否支持将请求压缩到上游?&quot;">​</a></h3><h3 id="_16、nginx-如何开启压缩" tabindex="-1">16、Nginx 如何开启压缩？ <a class="header-anchor" href="#_16、nginx-如何开启压缩" aria-label="Permalink to &quot;16、Nginx 如何开启压缩？&quot;">​</a></h3><h3 id="_17、用nginx服务器解释-s的目的是什么" tabindex="-1">17、用<code>Nginx</code>服务器解释<code>-s</code>的目的是什么? <a class="header-anchor" href="#_17、用nginx服务器解释-s的目的是什么" aria-label="Permalink to &quot;17、用\`Nginx\`服务器解释\`-s\`的目的是什么?&quot;">​</a></h3><h3 id="_18、在-nginx-中-如何使用未定义的服务器名称来阻止处理请求" tabindex="-1">18、在 Nginx 中，如何使用未定义的服务器名称来阻止处理请求? <a class="header-anchor" href="#_18、在-nginx-中-如何使用未定义的服务器名称来阻止处理请求" aria-label="Permalink to &quot;18、在 Nginx 中，如何使用未定义的服务器名称来阻止处理请求?&quot;">​</a></h3><h3 id="_19、nginx应用场景" tabindex="-1">19、Nginx应用场景？ <a class="header-anchor" href="#_19、nginx应用场景" aria-label="Permalink to &quot;19、Nginx应用场景？&quot;">​</a></h3><h3 id="_20、解释如何在nginx中获得当前的时间" tabindex="-1">20、解释如何在Nginx中获得当前的时间? <a class="header-anchor" href="#_20、解释如何在nginx中获得当前的时间" aria-label="Permalink to &quot;20、解释如何在Nginx中获得当前的时间?&quot;">​</a></h3><h3 id="_21、请解释ngx-http-upstream-module的作用是什么" tabindex="-1">21、请解释<code>ngx_http_upstream_module</code>的作用是什么? <a class="header-anchor" href="#_21、请解释ngx-http-upstream-module的作用是什么" aria-label="Permalink to &quot;21、请解释\`ngx_http_upstream_module\`的作用是什么?&quot;">​</a></h3><h3 id="_22、突发限制访问频率-突发流量" tabindex="-1">22、突发限制访问频率（突发流量） <a class="header-anchor" href="#_22、突发限制访问频率-突发流量" aria-label="Permalink to &quot;22、突发限制访问频率（突发流量）&quot;">​</a></h3><h3 id="_23、nginx如何处理http请求" tabindex="-1">23、Nginx如何处理HTTP请求？ <a class="header-anchor" href="#_23、nginx如何处理http请求" aria-label="Permalink to &quot;23、Nginx如何处理HTTP请求？&quot;">​</a></h3><h3 id="_24、请陈述stub-status和sub-filter指令的作用是什么" tabindex="-1">24、请陈述stub_status和sub_filter指令的作用是什么? <a class="header-anchor" href="#_24、请陈述stub-status和sub-filter指令的作用是什么" aria-label="Permalink to &quot;24、请陈述stub_status和sub_filter指令的作用是什么?&quot;">​</a></h3><h3 id="_25、nginx怎么处理请求的" tabindex="-1">25、Nginx怎么处理请求的？ <a class="header-anchor" href="#_25、nginx怎么处理请求的" aria-label="Permalink to &quot;25、Nginx怎么处理请求的？&quot;">​</a></h3><h3 id="_26、什么是正向代理和反向代理" tabindex="-1">26、什么是正向代理和反向代理？ <a class="header-anchor" href="#_26、什么是正向代理和反向代理" aria-label="Permalink to &quot;26、什么是正向代理和反向代理？&quot;">​</a></h3><h3 id="_27、怎么限制浏览器访问" tabindex="-1">27、怎么限制浏览器访问？ <a class="header-anchor" href="#_27、怎么限制浏览器访问" aria-label="Permalink to &quot;27、怎么限制浏览器访问？&quot;">​</a></h3><h3 id="_28、正常限制访问频率-正常流量" tabindex="-1">28、正常限制访问频率（正常流量） <a class="header-anchor" href="#_28、正常限制访问频率-正常流量" aria-label="Permalink to &quot;28、正常限制访问频率（正常流量）&quot;">​</a></h3><h3 id="_29、解释如何在nginx服务器上添加模块" tabindex="-1">29、解释如何在<code>Nginx</code>服务器上添加模块? <a class="header-anchor" href="#_29、解释如何在nginx服务器上添加模块" aria-label="Permalink to &quot;29、解释如何在\`Nginx\`服务器上添加模块?&quot;">​</a></h3><h3 id="_30、限流怎么做的" tabindex="-1">30、限流怎么做的？ <a class="header-anchor" href="#_30、限流怎么做的" aria-label="Permalink to &quot;30、限流怎么做的？&quot;">​</a></h3>`,54),p=[o];function t(i,r,c,E,f,g){return n(),a("div",null,p)}const u=s(l,[["render",t]]);export{h as __pageData,u as default};
