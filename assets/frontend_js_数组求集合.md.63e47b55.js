import{_ as s,o as a,c as n,V as l}from"./chunks/framework.c6d8cbec.js";const d=JSON.parse('{"title":"JS常用的求交集、并集、差集的方法","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/js/数组求集合.md","filePath":"frontend/js/数组求集合.md"}'),p={name:"frontend/js/数组求集合.md"},o=l(`<h1 id="js常用的求交集、并集、差集的方法" tabindex="-1">JS常用的求交集、并集、差集的方法 <a class="header-anchor" href="#js常用的求交集、并集、差集的方法" aria-label="Permalink to &quot;JS常用的求交集、并集、差集的方法&quot;">​</a></h1><h2 id="普通数组" tabindex="-1">普通数组 <a class="header-anchor" href="#普通数组" aria-label="Permalink to &quot;普通数组&quot;">​</a></h2><blockquote><p>示例数组</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">];</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> b </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">];</span></span></code></pre></div><h3 id="一、并集-a∪b" tabindex="-1">一、并集(A∪B) <a class="header-anchor" href="#一、并集-a∪b" aria-label="Permalink to &quot;一、并集(A∪B)&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//方法一：</span></span>
<span class="line"><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#7B7F8B;">// 虽然 NaN 和 NaN 不相等，但是在 Set 集合里面只会存在一个</span></span>
<span class="line"><span style="color:#7B7F8B;">// undefined 和 Infinity 在 Set 集合里面也只会存在一个</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">NaN</span><span style="color:#F6F6F4;">];</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> b </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">NaN</span><span style="color:#F6F6F4;">];</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">union</span><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">  (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> [</span><span style="color:#F286C4;">...</span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Set</span><span style="color:#F6F6F4;">([</span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">arr1, </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">arr2])]</span><span style="color:#7B7F8B;">// [1, 2, 3, NaN, 4, 5]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">//方法二：</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">union</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;">  Array.</span><span style="color:#62E884;">from</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Set</span><span style="color:#F6F6F4;">(arr1.</span><span style="color:#62E884;">concat</span><span style="color:#F6F6F4;">(arr2)))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">//先b筛选a中没有的，再连接数组</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">union</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> arr1.</span><span style="color:#62E884;">concat</span><span style="color:#F6F6F4;">(arr2.</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">val</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">arr1.</span><span style="color:#62E884;">includes</span><span style="color:#F6F6F4;">(val)))</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">union</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> arr1.</span><span style="color:#62E884;">concat</span><span style="color:#F6F6F4;">(arr2.</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">val</span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> arr2.</span><span style="color:#62E884;">indexOf</span><span style="color:#F6F6F4;">(val) </span><span style="color:#F286C4;">===</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//方法一：</span></span>
<span class="line"><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 虽然 NaN 和 NaN 不相等，但是在 Set 集合里面只会存在一个</span></span>
<span class="line"><span style="color:#6A737D;">// undefined 和 Infinity 在 Set 集合里面也只会存在一个</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">NaN</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">NaN</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">union</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">  (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">([</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">arr1, </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">arr2])]</span><span style="color:#6A737D;">// [1, 2, 3, NaN, 4, 5]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//方法二：</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">union</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">  Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">(arr1.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(arr2)))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//先b筛选a中没有的，再连接数组</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">union</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> arr1.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(arr2.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">val</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">arr1.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(val)))</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">union</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> arr1.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(arr2.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">val</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> arr2.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(val) </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span></code></pre></div><h3 id="二、交集-a∩b" tabindex="-1">二、交集（<em>A</em>∩B） <a class="header-anchor" href="#二、交集-a∩b" aria-label="Permalink to &quot;二、交集（*A*∩B）&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">intersection</span><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> [</span><span style="color:#F286C4;">...</span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Set</span><span style="color:#F6F6F4;">(arr1.</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">val</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> arr2.</span><span style="color:#62E884;">includes</span><span style="color:#F6F6F4;">(val)))];</span><span style="color:#7B7F8B;">//[2, NaN]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">intersection</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">(arr1.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">val</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> arr2.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(val)))];</span><span style="color:#6A737D;">//[2, NaN]</span></span></code></pre></div><h3 id="三、差集-a-b" tabindex="-1">三、差集(A-B) <a class="header-anchor" href="#三、差集-a-b" aria-label="Permalink to &quot;三、差集(A-B)&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft has-diff vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 差集（a 相对于 b 的差集） 属于a不属于b的元素</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">difference</span><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> [</span><span style="color:#F286C4;">...</span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Set</span><span style="color:#F6F6F4;">(arr1.</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">val</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">arr2.</span><span style="color:#62E884;">includes</span><span style="color:#F6F6F4;">(val)))];</span></span>
<span class="line"><span style="color:#F6F6F4;"> </span></span>
<span class="line"><span style="color:#7B7F8B;">//返回a与b数组区别的集合（交集取反） </span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">];</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> b </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">];</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> difference </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> a.</span><span style="color:#62E884;">concat</span><span style="color:#F6F6F4;">(b).</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">v</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">a.</span><span style="color:#62E884;">includes</span><span style="color:#F6F6F4;">(v) </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">b.</span><span style="color:#62E884;">includes</span><span style="color:#F6F6F4;">(v));</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> difference </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> a.</span><span style="color:#62E884;">concat</span><span style="color:#F6F6F4;">(b).</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">v</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">(a.</span><span style="color:#62E884;">includes</span><span style="color:#F6F6F4;">(v) </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> b.</span><span style="color:#62E884;">includes</span><span style="color:#F6F6F4;">(v)));</span></span>
<span class="line"><span style="color:#F6F6F4;">console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(difference)</span><span style="color:#7B7F8B;">// [1,3,4,5]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">//方法二：先转为 Set</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> aSet </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Set</span><span style="color:#F6F6F4;">(a);</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> bSet </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Set</span><span style="color:#F6F6F4;">(b)</span></span>
<span class="line"><span style="color:#7B7F8B;">//  </span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> difference </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Array.</span><span style="color:#62E884;">from</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Set</span><span style="color:#F6F6F4;">(a.</span><span style="color:#62E884;">concat</span><span style="color:#F6F6F4;">(b).</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">v</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">aSet.</span><span style="color:#62E884;">has</span><span style="color:#F6F6F4;">(v) </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">bSet.</span><span style="color:#62E884;">has</span><span style="color:#F6F6F4;">(v))));</span></span>
<span class="line"><span style="color:#F6F6F4;">console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(difference) </span><span style="color:#7B7F8B;">// [1,3,4,5]</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 差集（a 相对于 b 的差集） 属于a不属于b的元素</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">difference</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">(arr1.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">val</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">arr2.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(val)))];</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">//返回a与b数组区别的集合（交集取反） </span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> difference </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(b).</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">v</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">a.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(v) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">b.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(v));</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> difference </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(b).</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">v</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">(a.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(v) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> b.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(v)));</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(difference)</span><span style="color:#6A737D;">// [1,3,4,5]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//方法二：先转为 Set</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> aSet </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">(a);</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> bSet </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">(b)</span></span>
<span class="line"><span style="color:#6A737D;">//  </span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> difference </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">(a.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(b).</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">v</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">aSet.</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(v) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">bSet.</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(v))));</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(difference) </span><span style="color:#6A737D;">// [1,3,4,5]</span></span></code></pre></div><h2 id="对象数组" tabindex="-1">对象数组 <a class="header-anchor" href="#对象数组" aria-label="Permalink to &quot;对象数组&quot;">​</a></h2><blockquote><p>示例数组</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> a</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">[</span></span>
<span class="line"><span style="color:#F6F6F4;">    {id</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">01</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,name</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">product01</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    {id</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">02</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,name</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">product02</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    {id</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">03</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,name</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">product03</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    {id</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">04</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,name</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">product04</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    {id</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">05</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,name</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">product05</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">    ];</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> b</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">[</span></span>
<span class="line"><span style="color:#F6F6F4;">    {id</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">03</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,name</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">product03</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    {id</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">06</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,name</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">product06</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    {id</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">07</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,name</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">product07</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"><span style="color:#F6F6F4;">    {id</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">08</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,name</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">product08</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">    {id:</span><span style="color:#032F62;">&#39;01&#39;</span><span style="color:#24292E;">,name:</span><span style="color:#032F62;">&#39;product01&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {id:</span><span style="color:#032F62;">&#39;02&#39;</span><span style="color:#24292E;">,name:</span><span style="color:#032F62;">&#39;product02&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {id:</span><span style="color:#032F62;">&#39;03&#39;</span><span style="color:#24292E;">,name:</span><span style="color:#032F62;">&#39;product03&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {id:</span><span style="color:#032F62;">&#39;04&#39;</span><span style="color:#24292E;">,name:</span><span style="color:#032F62;">&#39;product04&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {id:</span><span style="color:#032F62;">&#39;05&#39;</span><span style="color:#24292E;">,name:</span><span style="color:#032F62;">&#39;product05&#39;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    ];</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> b</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">    {id:</span><span style="color:#032F62;">&#39;03&#39;</span><span style="color:#24292E;">,name:</span><span style="color:#032F62;">&#39;product03&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {id:</span><span style="color:#032F62;">&#39;06&#39;</span><span style="color:#24292E;">,name:</span><span style="color:#032F62;">&#39;product06&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {id:</span><span style="color:#032F62;">&#39;07&#39;</span><span style="color:#24292E;">,name:</span><span style="color:#032F62;">&#39;product07&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {id:</span><span style="color:#032F62;">&#39;08&#39;</span><span style="color:#24292E;">,name:</span><span style="color:#032F62;">&#39;product08&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">];</span></span></code></pre></div><h3 id="一、并集-a∪b-1" tabindex="-1">一、并集（A∪B） <a class="header-anchor" href="#一、并集-a∪b-1" aria-label="Permalink to &quot;一、并集（A∪B）&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 用额外对象记录当前项 id 相同的是否收集，此 id 未收集，则进行收集</span></span>
<span class="line"><span style="color:#7B7F8B;">//写法一：</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">union</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> obj </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {};</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> arr1.</span><span style="color:#62E884;">concat</span><span style="color:#F6F6F4;">(arr2);</span></span>
<span class="line"><span style="color:#F6F6F4;">   </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> arr.</span><span style="color:#62E884;">reduce</span><span style="color:#F6F6F4;">( (</span><span style="color:#FFB86C;font-style:italic;">pre</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">cur</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">obj[cur.id]){</span></span>
<span class="line"><span style="color:#F6F6F4;">            pre.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(cur)</span></span>
<span class="line"><span style="color:#F6F6F4;">            obj[cur.id] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> pre</span></span>
<span class="line"><span style="color:#F6F6F4;">    },[])</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">//写法二：</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">union</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> arr1.</span><span style="color:#62E884;">concat</span><span style="color:#F6F6F4;">(arr2)</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> res </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> []</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> arr.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(res.</span><span style="color:#62E884;">findIndex</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">item</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> item.id </span><span style="color:#F286C4;">===</span><span style="color:#F6F6F4;"> arr[i].id)</span><span style="color:#F286C4;">===-</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">      res.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(c[i])</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> res</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">//简化</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">//判断目标在数组中相同的 id 是否存在</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">isExist</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">target</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">attr</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> arr.</span><span style="color:#62E884;">findIndex</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">item</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> item[attr] </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> target[attr]) </span><span style="color:#F286C4;">!=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;"> </span></span>
<span class="line"><span style="color:#7B7F8B;">//合并数组并遍历，判断新数组不存在当前项，则收集</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">union</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;">  arr1.</span><span style="color:#62E884;">concat</span><span style="color:#F6F6F4;">(arr2).</span><span style="color:#62E884;">reduce</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">pre</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">cur</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">isExist</span><span style="color:#F6F6F4;">(pre,cur,</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">id</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">?</span><span style="color:#F6F6F4;"> pre  </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">pre,cur],[])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 用额外对象记录当前项 id 相同的是否收集，此 id 未收集，则进行收集</span></span>
<span class="line"><span style="color:#6A737D;">//写法一：</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">union</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr1.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(arr2);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">( (</span><span style="color:#E36209;">pre</span><span style="color:#24292E;">,</span><span style="color:#E36209;">cur</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">obj[cur.id]){</span></span>
<span class="line"><span style="color:#24292E;">            pre.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(cur)</span></span>
<span class="line"><span style="color:#24292E;">            obj[cur.id] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> pre</span></span>
<span class="line"><span style="color:#24292E;">    },[])</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//写法二：</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">union</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr1.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(arr2)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> arr.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(res.</span><span style="color:#6F42C1;">findIndex</span><span style="color:#24292E;">(</span><span style="color:#E36209;">item</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> item.id </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> arr[i].id)</span><span style="color:#D73A49;">===-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">      res.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(c[i])</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//简化</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//判断目标在数组中相同的 id 是否存在</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isExist</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">,</span><span style="color:#E36209;">target</span><span style="color:#24292E;">,</span><span style="color:#E36209;">attr</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">findIndex</span><span style="color:#24292E;">(</span><span style="color:#E36209;">item</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> item[attr] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> target[attr]) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">//合并数组并遍历，判断新数组不存在当前项，则收集</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">union</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">  arr1.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(arr2).</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">pre</span><span style="color:#24292E;">,</span><span style="color:#E36209;">cur</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isExist</span><span style="color:#24292E;">(pre,cur,</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> pre  </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">pre,cur],[])</span></span></code></pre></div><h3 id="二、交集-a∩b-1" tabindex="-1">二、交集（<em>A</em>∩B） <a class="header-anchor" href="#二、交集-a∩b-1" aria-label="Permalink to &quot;二、交集（*A*∩B）&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//方法一：</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">intersection</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> aids </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> a.</span><span style="color:#62E884;">map</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">item</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> item.id)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> arr2.</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">item</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> aids.</span><span style="color:#62E884;">includes</span><span style="color:#F6F6F4;">(item.id))</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#7B7F8B;">//方法二：</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">intersection</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;">  arr1.</span><span style="color:#62E884;">reduce</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">pre</span><span style="color:#F6F6F4;">,</span><span style="color:#FFB86C;font-style:italic;">cur</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> arr2.</span><span style="color:#62E884;">findIndex</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">item</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> item.id </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> cur.id) </span><span style="color:#F286C4;">!=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">?</span><span style="color:#F6F6F4;"> [</span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">pre,cur] </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> pre,[])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//方法一：</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">intersection</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">aids</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(</span><span style="color:#E36209;">item</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> item.id)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr2.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">item</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> aids.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(item.id))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//方法二：</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">intersection</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">  arr1.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">pre</span><span style="color:#24292E;">,</span><span style="color:#E36209;">cur</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> arr2.</span><span style="color:#6F42C1;">findIndex</span><span style="color:#24292E;">(</span><span style="color:#E36209;">item</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> item.id </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> cur.id) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">pre,cur] </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> pre,[])</span></span></code></pre></div><h3 id="三、差集-a-b-1" tabindex="-1">三、差集(A-B) <a class="header-anchor" href="#三、差集-a-b-1" aria-label="Permalink to &quot;三、差集(A-B)&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft has-diff vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//找出arr1数组中，arr2数组没有的对象</span></span>
<span class="line"><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">diff</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;">  arr1.</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> arr2.</span><span style="color:#62E884;">every</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">j</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> i.id </span><span style="color:#F286C4;">!==</span><span style="color:#F6F6F4;"> j.id))</span></span>
<span class="line"><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">diff</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">arr1</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">arr2</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;">  arr1.</span><span style="color:#62E884;">filter</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">i</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">arr2.</span><span style="color:#62E884;">some</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">j</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> i.id </span><span style="color:#F286C4;">===</span><span style="color:#F6F6F4;"> j.id))</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6A737D;">//找出arr1数组中，arr2数组没有的对象</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">diff</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">  arr1.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">i</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> arr2.</span><span style="color:#6F42C1;">every</span><span style="color:#24292E;">(</span><span style="color:#E36209;">j</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> i.id </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> j.id))</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">diff</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">  arr1.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">i</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">arr2.</span><span style="color:#6F42C1;">some</span><span style="color:#24292E;">(</span><span style="color:#E36209;">j</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> i.id </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> j.id))</span></span></code></pre></div>`,19),e=[o];function t(r,c,y,F,E,i){return a(),n("div",null,e)}const D=s(p,[["render",t]]);export{d as __pageData,D as default};
