import{_ as s,o as a,c as n,V as l}from"./chunks/framework.c6d8cbec.js";const p="/docs/images/javase/image-20220719221741423.png",o="/docs/images/javase/image-20220719221833046.png",e="/docs/images/javase/image-20220719221858304.png",g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"home/SpringBoot集成文件 - 基础的文件上传和下载.md","filePath":"home/SpringBoot集成文件 - 基础的文件上传和下载.md"}'),t={name:"home/SpringBoot集成文件 - 基础的文件上传和下载.md"},c=l(`<h2 id="springboot集成文件-基础的文件上传和下载" tabindex="-1">SpringBoot集成文件 - 基础的文件上传和下载 <a class="header-anchor" href="#springboot集成文件-基础的文件上传和下载" aria-label="Permalink to &quot;SpringBoot集成文件 - 基础的文件上传和下载&quot;">​</a></h2><blockquote><p>项目中常见的功能是需要将数据文件（比如Excel,csv)上传到服务器端进行处理，亦或是将服务器端的数据以某种文件形式（比如excel,pdf,csv,word)下载到客户端。本文主要介绍基于SpringBoot的对常规文件的上传和下载，以及常见的问题等。</p></blockquote><h2 id="_1-知识准备" tabindex="-1">1. 知识准备 <a class="header-anchor" href="#_1-知识准备" aria-label="Permalink to &quot;1. 知识准备&quot;">​</a></h2><blockquote><p>需要理解文件上传和下载的常见场景和技术手段。</p></blockquote><h3 id="_1-1-哪些场景需要文件上传和下载" tabindex="-1">1.1 哪些场景需要文件上传和下载 <a class="header-anchor" href="#_1-1-哪些场景需要文件上传和下载" aria-label="Permalink to &quot;1.1 哪些场景需要文件上传和下载&quot;">​</a></h3><p>项目中常见的功能是需要将数据文件（比如Excel,csv)上传到服务器端进行处理，亦或是将服务器端的数据以某种文件形式（比如excel,pdf,csv,word)下载到客户端。</p><h2 id="_2-实现案例" tabindex="-1">2. 实现案例 <a class="header-anchor" href="#_2-实现案例" aria-label="Permalink to &quot;2. 实现案例&quot;">​</a></h2><blockquote><p>本例子主要展示文件的上传和文件的下载。</p></blockquote><h3 id="_2-1-pom依赖" tabindex="-1">2.1 Pom依赖 <a class="header-anchor" href="#_2-1-pom依赖" aria-label="Permalink to &quot;2.1 Pom依赖&quot;">​</a></h3><p>引入spring-boot-starter-web即可</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">dependency</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">groupId</span><span style="color:#F6F6F4;">&gt;org.springframework.boot&lt;/</span><span style="color:#F286C4;">groupId</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">artifactId</span><span style="color:#F6F6F4;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#F286C4;">artifactId</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">dependency</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="_2-2-文件上传" tabindex="-1">2.2 文件上传 <a class="header-anchor" href="#_2-2-文件上传" aria-label="Permalink to &quot;2.2 文件上传&quot;">​</a></h3><p>上传一个文件，并保存到本地文件夹中</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">PostMapping</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/upload</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ResponseResult</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">String</span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">upload</span><span style="color:#F6F6F4;">(@</span><span style="color:#97E1F1;font-style:italic;">RequestParam</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">value</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">file</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">required</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">) </span><span style="color:#97E1F1;font-style:italic;">MultipartFile</span><span style="color:#F6F6F4;"> file) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">try</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 本地文件保存位置</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> uploadPath </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/Users/pdai/uploadFile</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">; </span><span style="color:#7B7F8B;">// 改这里</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">File</span><span style="color:#F6F6F4;"> uploadDir </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">File</span><span style="color:#F6F6F4;">(uploadPath);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">uploadDir.</span><span style="color:#62E884;">exists</span><span style="color:#F6F6F4;">()) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            uploadDir.</span><span style="color:#62E884;">mkdir</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        log.</span><span style="color:#62E884;">info</span><span style="color:#F6F6F4;">(uploadDir.</span><span style="color:#62E884;">getAbsolutePath</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 本地文件</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">File</span><span style="color:#F6F6F4;"> localFile </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">File</span><span style="color:#F6F6F4;">(uploadPath </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> File.separator </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> file.</span><span style="color:#62E884;">getOriginalFilename</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// transfer to local</span></span>
<span class="line"><span style="color:#F6F6F4;">        file.</span><span style="color:#62E884;">transferTo</span><span style="color:#F6F6F4;">(localFile);</span></span>
<span class="line"><span style="color:#F6F6F4;">    } </span><span style="color:#F286C4;">catch</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">Exception</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        e.</span><span style="color:#62E884;">printStackTrace</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> ResponseResult.</span><span style="color:#62E884;">fail</span><span style="color:#F6F6F4;">(e.</span><span style="color:#62E884;">getMessage</span><span style="color:#F6F6F4;">());</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> ResponseResult.</span><span style="color:#62E884;">success</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">PostMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/upload&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> ResponseResult</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">String</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">upload</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">RequestParam</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;file&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">required</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) MultipartFile file) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 本地文件保存位置</span></span>
<span class="line"><span style="color:#24292E;">        String uploadPath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/Users/pdai/uploadFile&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 改这里</span></span>
<span class="line"><span style="color:#24292E;">        File uploadDir </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(uploadPath);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">uploadDir.</span><span style="color:#6F42C1;">exists</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">            uploadDir.</span><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        log.</span><span style="color:#6F42C1;">info</span><span style="color:#24292E;">(uploadDir.</span><span style="color:#6F42C1;">getAbsolutePath</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 本地文件</span></span>
<span class="line"><span style="color:#24292E;">        File localFile </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(uploadPath </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> File.separator </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> file.</span><span style="color:#6F42C1;">getOriginalFilename</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// transfer to local</span></span>
<span class="line"><span style="color:#24292E;">        file.</span><span style="color:#6F42C1;">transferTo</span><span style="color:#24292E;">(localFile);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ResponseResult.</span><span style="color:#6F42C1;">fail</span><span style="color:#24292E;">(e.</span><span style="color:#6F42C1;">getMessage</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ResponseResult.</span><span style="color:#6F42C1;">success</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>通过postman，模拟上传的请求</p><img src="`+p+`"><h3 id="_2-3-文件下载" tabindex="-1">2.3 文件下载 <a class="header-anchor" href="#_2-3-文件下载" aria-label="Permalink to &quot;2.3 文件下载&quot;">​</a></h3><p>从本地文件夹中读取文件，并通过http下载</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">GetMapping</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/download</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">download</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">HttpServletResponse</span><span style="color:#F6F6F4;"> response) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    response.</span><span style="color:#62E884;">reset</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    response.</span><span style="color:#62E884;">setContentType</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">application/octet-stream</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    response.</span><span style="color:#62E884;">setHeader</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Content-disposition</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">attachment;filename=file_</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> System.</span><span style="color:#62E884;">currentTimeMillis</span><span style="color:#F6F6F4;">() </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.hprof</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 从文件读到servlet response输出流中</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">File</span><span style="color:#F6F6F4;"> file </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">File</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/Users/pdai/pdai_heap_dump_test.hprof</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">); </span><span style="color:#7B7F8B;">// 改这里</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">try</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">FileInputStream</span><span style="color:#F6F6F4;"> inputStream </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">FileInputStream</span><span style="color:#F6F6F4;">(file);) { </span><span style="color:#7B7F8B;">// try-with-resources</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">byte</span><span style="color:#F6F6F4;">[] b </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">byte</span><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">1024</span><span style="color:#F6F6F4;">];</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> len;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> ((len </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> inputStream.</span><span style="color:#62E884;">read</span><span style="color:#F6F6F4;">(b)) </span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            response.</span><span style="color:#62E884;">getOutputStream</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">write</span><span style="color:#F6F6F4;">(b, </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">, len);</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    } </span><span style="color:#F286C4;">catch</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">IOException</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        e.</span><span style="color:#62E884;">printStackTrace</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">GetMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/download&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">download</span><span style="color:#24292E;">(HttpServletResponse response) {</span></span>
<span class="line"><span style="color:#24292E;">    response.</span><span style="color:#6F42C1;">reset</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    response.</span><span style="color:#6F42C1;">setContentType</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;application/octet-stream&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    response.</span><span style="color:#6F42C1;">setHeader</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Content-disposition&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;attachment;filename=file_&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;.hprof&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 从文件读到servlet response输出流中</span></span>
<span class="line"><span style="color:#24292E;">    File file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/Users/pdai/pdai_heap_dump_test.hprof&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 改这里</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> (FileInputStream inputStream </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FileInputStream</span><span style="color:#24292E;">(file);) { </span><span style="color:#6A737D;">// try-with-resources</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[] b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> len;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> ((len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> inputStream.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">(b)) </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            response.</span><span style="color:#6F42C1;">getOutputStream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(b, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, len);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IOException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>下载文件 <img src="`+o+'"></p><p>注：</p><p>如果使用postman下载文件，默认的response大小是50MB，下载大于50MB的文件需要在这里自行设置。 <img src="'+e+`"></p><h2 id="_3-进一步理解" tabindex="-1">3. 进一步理解 <a class="header-anchor" href="#_3-进一步理解" aria-label="Permalink to &quot;3\\. 进一步理解&quot;">​</a></h2><blockquote><p>通过如下几个问题进一步理解。</p></blockquote><h3 id="_3-1-springboot文件上传大小参数" tabindex="-1">3.1 SpringBoot文件上传大小参数？ <a class="header-anchor" href="#_3-1-springboot文件上传大小参数" aria-label="Permalink to &quot;3.1 SpringBoot文件上传大小参数？&quot;">​</a></h3><p>SpringBoot对上传的文件大小有限制，默认的最大每个文件配置最大为1MB，默认多个文件上传（上传目标文件夹）总大小是10MB。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;">spring</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">servlet</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;">multipart</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#97E1F1;">max-file-size</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">1024MB</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># 单个文件大小</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#97E1F1;">max-request-size</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">10240MB</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># 总文件大小（允许存储文件的文件夹大小）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">spring</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">servlet</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">multipart</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">max-file-size</span><span style="color:#24292E;">: </span><span style="color:#032F62;">1024MB</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 单个文件大小</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">max-request-size</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10240MB</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 总文件大小（允许存储文件的文件夹大小）</span></span></code></pre></div><p>更多其它的参数可以参看MultipartProperties类</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">ConfigurationProperties</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">prefix</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">spring.servlet.multipart</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">ignoreUnknownFields</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">MultipartProperties</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">	/**</span></span>
<span class="line"><span style="color:#7B7F8B;">	 * Whether to enable support of multipart uploads.</span></span>
<span class="line"><span style="color:#7B7F8B;">	 */</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">boolean</span><span style="color:#F6F6F4;"> enabled </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">	/**</span></span>
<span class="line"><span style="color:#7B7F8B;">	 * Intermediate location of uploaded files.</span></span>
<span class="line"><span style="color:#7B7F8B;">	 */</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> location;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">	/**</span></span>
<span class="line"><span style="color:#7B7F8B;">	 * Max file size.</span></span>
<span class="line"><span style="color:#7B7F8B;">	 */</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">DataSize</span><span style="color:#F6F6F4;"> maxFileSize </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> DataSize.</span><span style="color:#62E884;">ofMegabytes</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">	/**</span></span>
<span class="line"><span style="color:#7B7F8B;">	 * Max request size.</span></span>
<span class="line"><span style="color:#7B7F8B;">	 */</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">DataSize</span><span style="color:#F6F6F4;"> maxRequestSize </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> DataSize.</span><span style="color:#62E884;">ofMegabytes</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">	/**</span></span>
<span class="line"><span style="color:#7B7F8B;">	 * Threshold after which files are written to disk.</span></span>
<span class="line"><span style="color:#7B7F8B;">	 */</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">DataSize</span><span style="color:#F6F6F4;"> fileSizeThreshold </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> DataSize.</span><span style="color:#62E884;">ofBytes</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">	/**</span></span>
<span class="line"><span style="color:#7B7F8B;">	 * Whether to resolve the multipart request lazily at the time of file or parameter</span></span>
<span class="line"><span style="color:#7B7F8B;">	 * access.</span></span>
<span class="line"><span style="color:#7B7F8B;">	 */</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">private</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">boolean</span><span style="color:#F6F6F4;"> resolveLazily </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ConfigurationProperties</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">prefix</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;spring.servlet.multipart&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">ignoreUnknownFields</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MultipartProperties</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">	/**</span></span>
<span class="line"><span style="color:#6A737D;">	 * Whether to enable support of multipart uploads.</span></span>
<span class="line"><span style="color:#6A737D;">	 */</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> enabled </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">	/**</span></span>
<span class="line"><span style="color:#6A737D;">	 * Intermediate location of uploaded files.</span></span>
<span class="line"><span style="color:#6A737D;">	 */</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String location;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">	/**</span></span>
<span class="line"><span style="color:#6A737D;">	 * Max file size.</span></span>
<span class="line"><span style="color:#6A737D;">	 */</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> DataSize maxFileSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DataSize.</span><span style="color:#6F42C1;">ofMegabytes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">	/**</span></span>
<span class="line"><span style="color:#6A737D;">	 * Max request size.</span></span>
<span class="line"><span style="color:#6A737D;">	 */</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> DataSize maxRequestSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DataSize.</span><span style="color:#6F42C1;">ofMegabytes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">	/**</span></span>
<span class="line"><span style="color:#6A737D;">	 * Threshold after which files are written to disk.</span></span>
<span class="line"><span style="color:#6A737D;">	 */</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> DataSize fileSizeThreshold </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DataSize.</span><span style="color:#6F42C1;">ofBytes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">	/**</span></span>
<span class="line"><span style="color:#6A737D;">	 * Whether to resolve the multipart request lazily at the time of file or parameter</span></span>
<span class="line"><span style="color:#6A737D;">	 * access.</span></span>
<span class="line"><span style="color:#6A737D;">	 */</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> resolveLazily </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_3-2-多个文件上传" tabindex="-1">3.2 多个文件上传？ <a class="header-anchor" href="#_3-2-多个文件上传" aria-label="Permalink to &quot;3.2 多个文件上传？&quot;">​</a></h3><p>Spring支持接收多个文件的，只需要用MultipartFile接收即可</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#97E1F1;font-style:italic;">PostMapping</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">/upload</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ResponseResult</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">String</span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">upload</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">MultipartFile</span><span style="color:#F6F6F4;">[] files) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">PostMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/upload&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> ResponseResult</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">String</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">upload</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">MultipartFile</span><span style="color:#24292E;">[] files) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,32),r=[c];function y(F,i,E,u,d,h){return a(),n("div",null,r)}const D=s(t,[["render",y]]);export{g as __pageData,D as default};
