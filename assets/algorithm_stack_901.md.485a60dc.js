import{_ as p,H as l,o,c as e,C as n,a as s,J as t,V as c}from"./chunks/framework.c6d8cbec.js";const g=JSON.parse('{"title":"LeetCode 901. 股票价格跨度","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/stack/901.md","filePath":"algorithm/stack/901.md"}'),r={name:"algorithm/stack/901.md"},y={id:"leetcode-901-股票价格跨度",tabindex:"-1"},F=n("a",{class:"header-anchor",href:"#leetcode-901-股票价格跨度","aria-label":'Permalink to "LeetCode 901. 股票价格跨度 <Badge type="warning" text="中等" />"'},"​",-1),E=c(`<h2 id="题目描述" tabindex="-1">题目描述 <a class="header-anchor" href="#题目描述" aria-label="Permalink to &quot;题目描述&quot;">​</a></h2><p>编写一个 <code>StockSpanner</code> 类，它收集某些股票的每日报价，并返回该股票当日价格的跨度。</p><p>今天股票价格的跨度被定义为股票价格小于或等于今天价格的最大连续日数（从今天开始往回数，包括今天）。</p><p>例如，如果未来 7 天股票的价格是<code> [100, 80, 60, 70, 60, 75, 85]</code>，那么股票跨度将是<code> [1, 1, 1, 2, 1, 4, 6]</code>。</p><p>示例：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">输入：[</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">StockSpanner</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">next</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">next</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">next</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">next</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">next</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">next</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">next</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">], [[],[</span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">],[</span><span style="color:#BF9EEE;">80</span><span style="color:#F6F6F4;">],[</span><span style="color:#BF9EEE;">60</span><span style="color:#F6F6F4;">],[</span><span style="color:#BF9EEE;">70</span><span style="color:#F6F6F4;">],[</span><span style="color:#BF9EEE;">60</span><span style="color:#F6F6F4;">],[</span><span style="color:#BF9EEE;">75</span><span style="color:#F6F6F4;">],[</span><span style="color:#BF9EEE;">85</span><span style="color:#F6F6F4;">]]</span></span>
<span class="line"><span style="color:#F6F6F4;">输出：[</span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">6</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">解释：</span></span>
<span class="line"><span style="color:#F6F6F4;">首先，初始化 S </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">StockSpanner</span><span style="color:#F6F6F4;">()，然后：</span></span>
<span class="line"><span style="color:#BF9EEE;">S</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">) 被调用并返回 </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">，</span></span>
<span class="line"><span style="color:#BF9EEE;">S</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">80</span><span style="color:#F6F6F4;">) 被调用并返回 </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">，</span></span>
<span class="line"><span style="color:#BF9EEE;">S</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">60</span><span style="color:#F6F6F4;">) 被调用并返回 </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">，</span></span>
<span class="line"><span style="color:#BF9EEE;">S</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">70</span><span style="color:#F6F6F4;">) 被调用并返回 </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">，</span></span>
<span class="line"><span style="color:#BF9EEE;">S</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">60</span><span style="color:#F6F6F4;">) 被调用并返回 </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">，</span></span>
<span class="line"><span style="color:#BF9EEE;">S</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">75</span><span style="color:#F6F6F4;">) 被调用并返回 </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">，</span></span>
<span class="line"><span style="color:#BF9EEE;">S</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">85</span><span style="color:#F6F6F4;">) 被调用并返回 </span><span style="color:#BF9EEE;">6</span><span style="color:#F6F6F4;">。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">输入：[</span><span style="color:#032F62;">&quot;StockSpanner&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">], [[],[</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">80</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">70</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">75</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">85</span><span style="color:#24292E;">]]</span></span>
<span class="line"><span style="color:#24292E;">输出：[</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">解释：</span></span>
<span class="line"><span style="color:#24292E;">首先，初始化 </span><span style="color:#005CC5;">S</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;">()，然后：</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">80</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">70</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">75</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">85</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">。</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#62E884;">注意</span><span style="color:#F6F6F4;"> (例如) </span><span style="color:#BF9EEE;">S</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">75</span><span style="color:#F6F6F4;">) 返回 </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">，因为截至今天的最后 </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;"> 个价格</span></span>
<span class="line"><span style="color:#F6F6F4;">(包括今天的价格 </span><span style="color:#BF9EEE;">75</span><span style="color:#F6F6F4;">) 小于或等于今天的价格。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">注意</span><span style="color:#24292E;"> (例如) </span><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">75</span><span style="color:#24292E;">) 返回 </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">，因为截至今天的最后 </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> 个价格</span></span>
<span class="line"><span style="color:#24292E;">(包括今天的价格 </span><span style="color:#005CC5;">75</span><span style="color:#24292E;">) 小于或等于今天的价格。</span></span></code></pre></div><p>提示：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">调用 StockSpanner.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(int price) 时，将有 </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> price </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F286C4;">^</span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">。</span></span>
<span class="line"><span style="color:#F6F6F4;">每个测试用例最多可以调用  </span><span style="color:#BF9EEE;">10000</span><span style="color:#F6F6F4;"> 次 StockSpanner.next。</span></span>
<span class="line"><span style="color:#F6F6F4;">在所有测试用例中，最多调用 </span><span style="color:#BF9EEE;">150000</span><span style="color:#F6F6F4;"> 次 StockSpanner.next。</span></span>
<span class="line"><span style="color:#F6F6F4;">此问题的总时间限制减少了 </span><span style="color:#BF9EEE;">50</span><span style="color:#F286C4;">%</span><span style="color:#F6F6F4;">。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">调用 StockSpanner.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(int price) 时，将有 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> price </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">。</span></span>
<span class="line"><span style="color:#24292E;">每个测试用例最多可以调用  </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;"> 次 StockSpanner.next。</span></span>
<span class="line"><span style="color:#24292E;">在所有测试用例中，最多调用 </span><span style="color:#005CC5;">150000</span><span style="color:#24292E;"> 次 StockSpanner.next。</span></span>
<span class="line"><span style="color:#24292E;">此问题的总时间限制减少了 </span><span style="color:#005CC5;">50</span><span style="color:#D73A49;">%</span><span style="color:#24292E;">。</span></span></code></pre></div><h2 id="解题思路" tabindex="-1">解题思路 <a class="header-anchor" href="#解题思路" aria-label="Permalink to &quot;解题思路&quot;">​</a></h2><p>正如题意，我们要求当前元素之前，比自己小（可以相等）的元素个数，并且元素个数包括本身，那么我们最后的结果应该还要加 1.</p><p>于是按题意，我们采用跨度法，举个例子，对于例子 6，1，2，3，4，9，从后往前逆推一下，当我们新插入 9 的时候，如果发现前一位的 4 比 9 小，那么是否说明比 9 小的数量就等于比 4 小的数量加 1？然而这是错的，因为首位的 6 比 9 小，却比 4 大，因此截止数字的 4 时候，比 4 小的数量中并不包含 6 与 9 的对比。</p><p>因此，我们还要跳到 6 的位置再去计算小于等于自己的元素。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-JzoPT" id="tab-r5HDqi6" checked="checked"><label for="tab-r5HDqi6">javascript</label><input type="radio" name="group-JzoPT" id="tab-l0HhzRv"><label for="tab-l0HhzRv">cpp</label><input type="radio" name="group-JzoPT" id="tab-HTljSku"><label for="tab-HTljSku">java</label><input type="radio" name="group-JzoPT" id="tab-egKNtoF"><label for="tab-egKNtoF">python</label></div><div class="blocks"><div class="language-javascript vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">StockSpanner</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 存储股票跨度</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.spanner </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [];</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 存储股票价格</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.stockPrice </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> [];</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@param</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{number}</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">price</span></span>
<span class="line"><span style="color:#7B7F8B;"> * </span><span style="color:#F286C4;">@return</span><span style="color:#7B7F8B;"> </span><span style="color:#97E1F1;font-style:italic;">{number}</span></span>
<span class="line"><span style="color:#7B7F8B;"> */</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">StockSpanner</span><span style="color:#F6F6F4;">.prototype.</span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">price</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 对于第一天进行特殊判断</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">!</span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.spanner.length) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.spanner.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.stockPrice.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(price);</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 直接返回1</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> cnt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> idx </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.stockPrice.length </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (price </span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.stockPrice[idx] </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> idx </span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    cnt </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.spanner[idx];</span></span>
<span class="line"><span style="color:#F6F6F4;">    idx </span><span style="color:#F286C4;">-=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.spanner[idx];</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 加上本身</span></span>
<span class="line"><span style="color:#F6F6F4;">  cnt</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 进行更新操作，将当前股票价格和跨度入栈</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.spanner.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(cnt);</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.stockPrice.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(price);</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> cnt;</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 存储股票跨度</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 存储股票价格</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.stockPrice </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{number}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">price</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{number}</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#005CC5;">StockSpanner</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">price</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 对于第一天进行特殊判断</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.stockPrice.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(price);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 直接返回1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> cnt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> idx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.stockPrice.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (price </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.stockPrice[idx] </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> idx </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    cnt </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner[idx];</span></span>
<span class="line"><span style="color:#24292E;">    idx </span><span style="color:#D73A49;">-=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner[idx];</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 加上本身</span></span>
<span class="line"><span style="color:#24292E;">  cnt</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 进行更新操作，将当前股票价格和跨度入栈</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(cnt);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.stockPrice.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(price);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cnt;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">StockSpanner</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F286C4;">public:</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">StockSpanner</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">price</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">int</span><span style="color:#F6F6F4;"> cnt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">s.</span><span style="color:#62E884;">empty</span><span style="color:#F6F6F4;">() </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> s.</span><span style="color:#62E884;">top</span><span style="color:#F6F6F4;">().first </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> price) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            cnt </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> s.</span><span style="color:#62E884;">top</span><span style="color:#F6F6F4;">().second;</span></span>
<span class="line"><span style="color:#F6F6F4;">            s.</span><span style="color:#62E884;">pop</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        s.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">({price, cnt </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">});</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> cnt </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">private:</span></span>
<span class="line"><span style="color:#F6F6F4;">    stack</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">pair</span><span style="color:#F286C4;">&lt;int</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">int&gt;&gt;</span><span style="color:#F6F6F4;"> s;</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">public:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">price</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> cnt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">empty</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> s.</span><span style="color:#6F42C1;">top</span><span style="color:#24292E;">().first </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> price) {</span></span>
<span class="line"><span style="color:#24292E;">            cnt </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> s.</span><span style="color:#6F42C1;">top</span><span style="color:#24292E;">().second;</span></span>
<span class="line"><span style="color:#24292E;">            s.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        s.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">({price, cnt </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cnt </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">private:</span></span>
<span class="line"><span style="color:#24292E;">    stack</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">pair</span><span style="color:#D73A49;">&lt;int</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int&gt;&gt;</span><span style="color:#24292E;"> s;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">StockSpanner</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">Stack</span><span style="color:#F6F6F4;">&lt;Integer&gt; prices, weights;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">StockSpanner</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">        prices </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Stack</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        weights </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Stack</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">price</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> w </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">!</span><span style="color:#F6F6F4;">prices.</span><span style="color:#62E884;">isEmpty</span><span style="color:#F6F6F4;">() </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> prices.</span><span style="color:#62E884;">peek</span><span style="color:#F6F6F4;">() </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> price) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            prices.</span><span style="color:#62E884;">pop</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">            w </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> weights.</span><span style="color:#62E884;">pop</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        prices.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(price);</span></span>
<span class="line"><span style="color:#F6F6F4;">        weights.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(w);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> w;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    Stack&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; prices, weights;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        prices </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Stack</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        weights </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Stack</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">price</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> w </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">prices.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> prices.</span><span style="color:#6F42C1;">peek</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> price) {</span></span>
<span class="line"><span style="color:#24292E;">            prices.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            w </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> weights.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        prices.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(price);</span></span>
<span class="line"><span style="color:#24292E;">        weights.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(w);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> w;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">StockSpanner</span><span style="color:#F6F6F4;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">def</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">__init__</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;font-style:italic;">self</span><span style="color:#F6F6F4;">):</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">self</span><span style="color:#F6F6F4;">.stack </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">def</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;font-style:italic;">self</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">price</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">-&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">        cnt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;font-style:italic;">self</span><span style="color:#F6F6F4;">.stack </span><span style="color:#F286C4;">and</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;font-style:italic;">self</span><span style="color:#F6F6F4;">.stack[</span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">][</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> price:</span></span>
<span class="line"><span style="color:#F6F6F4;">            cnt </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;font-style:italic;">self</span><span style="color:#F6F6F4;">.stack.pop()[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">self</span><span style="color:#F6F6F4;">.stack.append((price, cnt))</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> cnt</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stack </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">next</span><span style="color:#24292E;">(self, price: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">) -&gt; </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        cnt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stack </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stack[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> price:</span></span>
<span class="line"><span style="color:#24292E;">            cnt </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stack.pop()[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stack.append((price, cnt))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cnt</span></span></code></pre></div></div></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">学如逆水行舟，不进则退</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">学如逆水行舟，不进则退</span></span></code></pre></div>`,15);function i(C,d,h,u,B,D){const a=l("Badge");return o(),e("div",null,[n("h1",y,[s("LeetCode 901. 股票价格跨度 "),t(a,{type:"warning",text:"中等"}),s(),F]),E])}const k=p(r,[["render",i]]);export{g as __pageData,k as default};
