import{_ as n,o as e,c as o,V as s,C as a,a as l}from"./chunks/framework.c6d8cbec.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/python/python-08.md","filePath":"interview/backend/python/python-08.md"}'),p={name:"interview/backend/python/python-08.md"},t=s(`<h3 id="_1、什么是闭包" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#1%E4%BB%80%E4%B9%88%E6%98%AF%E9%97%AD%E5%8C%85" target="_blank" rel="noreferrer">1、什么是闭包</a> <a class="header-anchor" href="#_1、什么是闭包" aria-label="Permalink to &quot;[1、什么是闭包](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，常见面试题及答案汇总.md#1什么是闭包)&quot;">​</a></h3><p>在函数中可以（嵌套）定义另一个函数时，如果内部的函数引用了外部的函数的变量，则可能产生闭包。闭包可以用来在一个函数与一组“私有”变量之间创建关联关系。在给定函数被多次调用的过程中，这些私有变量能够保持其持久性。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;"># 内部函数使用了外部函数的变量，就相当于闭包</span></span>
<span class="line"><span style="color:#F286C4;">def</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">func1</span><span style="color:#F6F6F4;">():</span></span>
<span class="line"><span style="color:#F6F6F4;">a</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">1</span></span>
<span class="line"><span style="color:#F286C4;">def</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">inner</span><span style="color:#F6F6F4;">():</span></span>
<span class="line"><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> a</span></span>
<span class="line"><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> inner</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(func1()())</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 内部函数使用了外部函数的变量，就相当于闭包</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">func1</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">a</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">inner</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> inner</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(func1()())</span></span></code></pre></div><h3 id="_2、索引再什么情况下遵循最左前缀的规则" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#2%E7%B4%A2%E5%BC%95%E5%86%8D%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E9%81%B5%E5%BE%AA%E6%9C%80%E5%B7%A6%E5%89%8D%E7%BC%80%E7%9A%84%E8%A7%84%E5%88%99" target="_blank" rel="noreferrer">2、索引再什么情况下遵循最左前缀的规则？</a> <a class="header-anchor" href="#_2、索引再什么情况下遵循最左前缀的规则" aria-label="Permalink to &quot;[2、索引再什么情况下遵循最左前缀的规则？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，常见面试题及答案汇总.md#2索引再什么情况下遵循最左前缀的规则)&quot;">​</a></h3><p>在多字段进行索引的时候，会遵循以上原则</p><h3 id="_3、如何实现redis集群" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#3%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0redis%E9%9B%86%E7%BE%A4" target="_blank" rel="noreferrer">3、如何实现Redis集群</a> <a class="header-anchor" href="#_3、如何实现redis集群" aria-label="Permalink to &quot;[3、如何实现Redis集群](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，常见面试题及答案汇总.md#3如何实现redis集群)&quot;">​</a></h3><p><strong>1、</strong> Twitter开发的twemproxy</p><p><strong>2、</strong> 豌豆荚开发的codis</p><p><strong>3、</strong> Redis官方的Redis-cluster</p><h3 id="_4、请列举布尔值位false的常见值" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#4%E8%AF%B7%E5%88%97%E4%B8%BE%E5%B8%83%E5%B0%94%E5%80%BC%E4%BD%8Dfalse%E7%9A%84%E5%B8%B8%E8%A7%81%E5%80%BC" target="_blank" rel="noreferrer">4、请列举布尔值位False的常见值</a> <a class="header-anchor" href="#_4、请列举布尔值位false的常见值" aria-label="Permalink to &quot;[4、请列举布尔值位False的常见值](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，常见面试题及答案汇总.md#4请列举布尔值位false的常见值)&quot;">​</a></h3><p>0、&#39;&#39;、[]、{}、tuple()、None、set()</p><h3 id="_5、什么是rpc" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#5%E4%BB%80%E4%B9%88%E6%98%AFrpc" target="_blank" rel="noreferrer">5、什么是rpc</a> <a class="header-anchor" href="#_5、什么是rpc" aria-label="Permalink to &quot;[5、什么是rpc](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，常见面试题及答案汇总.md#5什么是rpc)&quot;">​</a></h3><p>远程过程调用 (RPC) 是一种协议，程序可使用这种协议向网络中的另一台计算机上的程序请求服务</p><p>1.RPC采用客户机/服务器模式。请求程序就是一个客户机，而服务提供程序就是一个服务器。</p><p>2.首先，客户机调用进程发送一个有进程参数的调用信息到服务进程，然后等待应答信息。</p><p>2.在服务器端，进程保持睡眠状态直到调用信息到达为止。当一个调用信息到达，服务器获得进程参数，计算结果，发送答复信息，然后等待下一个调用信息，</p><p>3.最后，客户端调用进程接收答复信息，获得进程结果，然后调用执行继续进行。</p><h3 id="_6、a-range-10-则a-3-的值是" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#6a=range10,%E5%88%99a%5B::-3%5D%E7%9A%84%E5%80%BC%E6%98%AF" target="_blank" rel="noreferrer">6、a=range(10),则a[::-3]的值是？</a> <a class="header-anchor" href="#_6、a-range-10-则a-3-的值是" aria-label="Permalink to &quot;[6、a=range(10),则a[::-3]的值是？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，常见面试题及答案汇总.md#6a=range10,则a[::-3]的值是)&quot;">​</a></h3><p>[9,6,3,0] 或者 range(9,-1,-3)</p><h3 id="_7、写出邮箱的正则表达式" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#7%E5%86%99%E5%87%BA%E9%82%AE%E7%AE%B1%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F" target="_blank" rel="noreferrer">7、写出邮箱的正则表达式</a> <a class="header-anchor" href="#_7、写出邮箱的正则表达式" aria-label="Permalink to &quot;[7、写出邮箱的正则表达式](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，常见面试题及答案汇总.md#7写出邮箱的正则表达式)&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> re</span></span>
<span class="line"><span style="color:#F6F6F4;">pp</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">re.compile(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">[a-zA-Z0-9_-]+@[0-9A-Za-z]+(\\.[0-9a-zA-Z]+)+</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> pp.match(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">1403179190@qq.com</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">):</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">ok</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> re</span></span>
<span class="line"><span style="color:#24292E;">pp</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">re.compile(</span><span style="color:#032F62;">&#39;[a-zA-Z0-9_-]+@[0-9A-Za-z]+(\\.[0-9a-zA-Z]+)+&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> pp.match(</span><span style="color:#032F62;">&#39;1403179190@qq.com&#39;</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ok&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="_8、在python中如何使用多进制数字" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#8%E5%9C%A8python%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%A4%9A%E8%BF%9B%E5%88%B6%E6%95%B0%E5%AD%97" target="_blank" rel="noreferrer">8、在Python中如何使用多进制数字？</a> <a class="header-anchor" href="#_8、在python中如何使用多进制数字" aria-label="Permalink to &quot;[8、在Python中如何使用多进制数字？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，常见面试题及答案汇总.md#8在python中如何使用多进制数字)&quot;">​</a></h3><p>我们在Python中，除十进制外还可以使用二进制、八进制和十六进制。</p><p><strong>1、</strong> 二进制数字由0和1组成，我们使用 0b 或 0B 前缀表示二进制数。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; int(0b1010)</span></span>
<span class="line"><span style="color:#f6f6f4;">10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; int(0b1010)</span></span>
<span class="line"><span style="color:#24292e;">10</span></span></code></pre></div><p><strong>2、</strong> 使用bin()函数将一个数字转换为它的二进制形式。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; bin(0xf)</span></span>
<span class="line"><span style="color:#f6f6f4;">‘0b1111’</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; bin(0xf)</span></span>
<span class="line"><span style="color:#24292e;">‘0b1111’</span></span></code></pre></div><p><strong>3、</strong> 八进制数由数字 0-7 组成，用前缀 0o 或 0O 表示 8 进制数。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; oct(8)</span></span>
<span class="line"><span style="color:#f6f6f4;">‘0o10’</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; oct(8)</span></span>
<span class="line"><span style="color:#24292e;">‘0o10’</span></span></code></pre></div><p><strong>4、</strong> 十六进数由数字 0-15 组成，用前缀 0x 或者 0X 表示 16 进制数。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; hex(16)</span></span>
<span class="line"><span style="color:#f6f6f4;">‘0x10’</span></span>
<span class="line"><span style="color:#f6f6f4;"> </span></span>
<span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; hex(15)</span></span>
<span class="line"><span style="color:#f6f6f4;">‘0xf’</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; hex(16)</span></span>
<span class="line"><span style="color:#24292e;">‘0x10’</span></span>
<span class="line"><span style="color:#24292e;"> </span></span>
<span class="line"><span style="color:#24292e;">&gt;&gt;&gt; hex(15)</span></span>
<span class="line"><span style="color:#24292e;">‘0xf’</span></span></code></pre></div><h3 id="_9、编写程序-输出给定序列中的所有质数" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#9%E7%BC%96%E5%86%99%E7%A8%8B%E5%BA%8F%E8%BE%93%E5%87%BA%E7%BB%99%E5%AE%9A%E5%BA%8F%E5%88%97%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E8%B4%A8%E6%95%B0" target="_blank" rel="noreferrer">9、编写程序，输出给定序列中的所有质数</a> <a class="header-anchor" href="#_9、编写程序-输出给定序列中的所有质数" aria-label="Permalink to &quot;[9、编写程序，输出给定序列中的所有质数](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，常见面试题及答案汇总.md#9编写程序输出给定序列中的所有质数)&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">lower = int(input(&quot;Enter the lower range:&quot;))</span></span>
<span class="line"><span style="color:#f6f6f4;">upper = int(input(&quot;Enter the upper range:&quot;))</span></span>
<span class="line"><span style="color:#f6f6f4;">list(filter(lambda x:all(x % y != 0 for y in range(2, x)), range(lower, upper)))</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">-------------------------------------------------</span></span>
<span class="line"><span style="color:#f6f6f4;">Enter the lower range:10</span></span>
<span class="line"><span style="color:#f6f6f4;">Enter the upper range:50</span></span>
<span class="line"><span style="color:#f6f6f4;">[11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">lower = int(input(&quot;Enter the lower range:&quot;))</span></span>
<span class="line"><span style="color:#24292e;">upper = int(input(&quot;Enter the upper range:&quot;))</span></span>
<span class="line"><span style="color:#24292e;">list(filter(lambda x:all(x % y != 0 for y in range(2, x)), range(lower, upper)))</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">-------------------------------------------------</span></span>
<span class="line"><span style="color:#24292e;">Enter the lower range:10</span></span>
<span class="line"><span style="color:#24292e;">Enter the upper range:50</span></span>
<span class="line"><span style="color:#24292e;">[11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]</span></span></code></pre></div><h3 id="_10、如何实现字符串的反转-如-name-felix-反转成name-xilef" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#10%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%A6%82%EF%BC%9Aname=felix%E5%8F%8D%E8%BD%AC%E6%88%90name=xilef" target="_blank" rel="noreferrer">10、如何实现字符串的反转？如：name=felix，反转成name=xilef</a> <a class="header-anchor" href="#_10、如何实现字符串的反转-如-name-felix-反转成name-xilef" aria-label="Permalink to &quot;[10、如何实现字符串的反转？如：name=felix，反转成name=xilef](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，常见面试题及答案汇总.md#10如何实现字符串的反转如：name=felix反转成name=xilef)&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">name </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">felix</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#7B7F8B;"># 方法一：</span></span>
<span class="line"><span style="color:#F6F6F4;">name</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">name[</span><span style="color:#F286C4;">::-</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#7B7F8B;"># 方法二：</span></span>
<span class="line"><span style="color:#F6F6F4;">name2</span><span style="color:#F286C4;">=</span><span style="color:#97E1F1;font-style:italic;">list</span><span style="color:#F6F6F4;">(name)</span></span>
<span class="line"><span style="color:#F6F6F4;">name2.reverse()</span></span>
<span class="line"><span style="color:#F6F6F4;">name</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&#39;&#39;</span><span style="color:#F6F6F4;">.join(name2)</span></span>
<span class="line"><span style="color:#7B7F8B;"># 方法三：</span></span>
<span class="line"><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> functools </span><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> reduce</span></span>
<span class="line"><span style="color:#F6F6F4;">name</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">reduce(</span><span style="color:#F286C4;">lambda</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">x</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">y</span><span style="color:#F6F6F4;">: y</span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;">x, name)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;felix&quot;</span></span>
<span class="line"><span style="color:#6A737D;"># 方法一：</span></span>
<span class="line"><span style="color:#24292E;">name</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">name[::</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#6A737D;"># 方法二：</span></span>
<span class="line"><span style="color:#24292E;">name2</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">list</span><span style="color:#24292E;">(name)</span></span>
<span class="line"><span style="color:#24292E;">name2.reverse()</span></span>
<span class="line"><span style="color:#24292E;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">.join(name2)</span></span>
<span class="line"><span style="color:#6A737D;"># 方法三：</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> functools </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#E36209;">reduce</span></span>
<span class="line"><span style="color:#24292E;">name</span><span style="color:#D73A49;">=</span><span style="color:#E36209;">reduce</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">lambda</span><span style="color:#24292E;"> x, y: y</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">x, name)</span></span></code></pre></div><h3 id="_11、写出以下代码的输出结果" tabindex="-1">11、写出以下代码的输出结果： <a class="header-anchor" href="#_11、写出以下代码的输出结果" aria-label="Permalink to &quot;11、写出以下代码的输出结果：&quot;">​</a></h3><h3 id="_12、求以下代码的输出结果" tabindex="-1">12、求以下代码的输出结果 <a class="header-anchor" href="#_12、求以下代码的输出结果" aria-label="Permalink to &quot;12、求以下代码的输出结果&quot;">​</a></h3><h3 id="_13、什么是鸭子模型" tabindex="-1">13、什么是鸭子模型？ <a class="header-anchor" href="#_13、什么是鸭子模型" aria-label="Permalink to &quot;13、什么是鸭子模型？&quot;">​</a></h3><h3 id="_14、什么是防火墙-防火墙的作用是什么" tabindex="-1">14、什么是防火墙？防火墙的作用是什么？ <a class="header-anchor" href="#_14、什么是防火墙-防火墙的作用是什么" aria-label="Permalink to &quot;14、什么是防火墙？防火墙的作用是什么？&quot;">​</a></h3><h3 id="_15、1-2-3-4-5能组成多少个互不相同且不重复的三位数" tabindex="-1">15、1，2，3，4，5能组成多少个互不相同且不重复的三位数？ <a class="header-anchor" href="#_15、1-2-3-4-5能组成多少个互不相同且不重复的三位数" aria-label="Permalink to &quot;15、1，2，3，4，5能组成多少个互不相同且不重复的三位数？&quot;">​</a></h3><h3 id="_16、super的作用" tabindex="-1">16、super的作用 <a class="header-anchor" href="#_16、super的作用" aria-label="Permalink to &quot;16、super的作用&quot;">​</a></h3><h3 id="_17、解释一下python中的关系运算符" tabindex="-1">17、解释一下Python中的关系运算符 <a class="header-anchor" href="#_17、解释一下python中的关系运算符" aria-label="Permalink to &quot;17、解释一下Python中的关系运算符&quot;">​</a></h3><h3 id="_18、有如下链表类-请实现单链表逆置。" tabindex="-1">18、有如下链表类，请实现单链表逆置。 <a class="header-anchor" href="#_18、有如下链表类-请实现单链表逆置。" aria-label="Permalink to &quot;18、有如下链表类，请实现单链表逆置。&quot;">​</a></h3><h3 id="_19、使用生成器编写一个函数实现生成指定个数的斐波那契数列" tabindex="-1">19、使用生成器编写一个函数实现生成指定个数的斐波那契数列 <a class="header-anchor" href="#_19、使用生成器编写一个函数实现生成指定个数的斐波那契数列" aria-label="Permalink to &quot;19、使用生成器编写一个函数实现生成指定个数的斐波那契数列&quot;">​</a></h3><h3 id="_20、守护线程-守护进程是什么" tabindex="-1">20、守护线程，守护进程是什么 <a class="header-anchor" href="#_20、守护线程-守护进程是什么" aria-label="Permalink to &quot;20、守护线程，守护进程是什么&quot;">​</a></h3><h3 id="_21、什么是正则的贪婪匹配-贪婪模式和非贪婪模式的区别" tabindex="-1">21、什么是正则的贪婪匹配？贪婪模式和非贪婪模式的区别？ <a class="header-anchor" href="#_21、什么是正则的贪婪匹配-贪婪模式和非贪婪模式的区别" aria-label="Permalink to &quot;21、什么是正则的贪婪匹配？贪婪模式和非贪婪模式的区别？&quot;">​</a></h3><h3 id="_22、如何判断一个对象是否可调用-哪些对象是可调用对象-如何定义一个类-使其对象本身就是可调用对象" tabindex="-1">22、如何判断一个对象是否可调用？哪些对象是可调用对象？如何定义一个类，使其对象本身就是可调用对象？ <a class="header-anchor" href="#_22、如何判断一个对象是否可调用-哪些对象是可调用对象-如何定义一个类-使其对象本身就是可调用对象" aria-label="Permalink to &quot;22、如何判断一个对象是否可调用？哪些对象是可调用对象？如何定义一个类，使其对象本身就是可调用对象？&quot;">​</a></h3><h3 id="_23、前后端分离的基本原理" tabindex="-1">23、前后端分离的基本原理 <a class="header-anchor" href="#_23、前后端分离的基本原理" aria-label="Permalink to &quot;23、前后端分离的基本原理&quot;">​</a></h3><h3 id="_24、mro是什么" tabindex="-1">24、mro是什么？ <a class="header-anchor" href="#_24、mro是什么" aria-label="Permalink to &quot;24、mro是什么？&quot;">​</a></h3><h3 id="_25、一行代码通过filter和lambda函数输出alist-1-22-2-33-23-32-中索引为奇数的值" tabindex="-1">25、一行代码通过filter和lambda函数输出alist=[1,22,2,33,23,32]中索引为奇数的值 <a class="header-anchor" href="#_25、一行代码通过filter和lambda函数输出alist-1-22-2-33-23-32-中索引为奇数的值" aria-label="Permalink to &quot;25、一行代码通过filter和lambda函数输出alist=[1,22,2,33,23,32]中索引为奇数的值&quot;">​</a></h3>`,50),r=a("h3",{"a:":"","1,":"","b:":"","2,":"","c:":"","3,":"","d:":"","4,":"","e:":"",5:"",id:"_26、写代码-如何由tuple1-a-b-c-d-e-和tuple2-1-2-3-4-5-得到res",tabindex:"-1"},[l("26、写代码：如何由tuple1=('a','b','c','d','e')，和tuple2=(1,2,3,4,5)得到res= "),a("a",{class:"header-anchor",href:"#_26、写代码-如何由tuple1-a-b-c-d-e-和tuple2-1-2-3-4-5-得到res","aria-label":`Permalink to "26、写代码：如何由tuple1=('a','b','c','d','e')，和tuple2=(1,2,3,4,5)得到res={'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5}"`},"​")],-1),c=s('<h3 id="_27、b、b、kb、mb、gb的关系" tabindex="-1">27、b、B、kB、MB、GB的关系 <a class="header-anchor" href="#_27、b、b、kb、mb、gb的关系" aria-label="Permalink to &quot;27、b、B、kB、MB、GB的关系&quot;">​</a></h3><h3 id="_28、如何保证api调用时数据的安全性" tabindex="-1">28、如何保证api调用时数据的安全性 <a class="header-anchor" href="#_28、如何保证api调用时数据的安全性" aria-label="Permalink to &quot;28、如何保证api调用时数据的安全性&quot;">​</a></h3><h3 id="_29、解释什么是异步非阻塞" tabindex="-1">29、解释什么是异步非阻塞 <a class="header-anchor" href="#_29、解释什么是异步非阻塞" aria-label="Permalink to &quot;29、解释什么是异步非阻塞&quot;">​</a></h3><h3 id="_30、filter、map、reduce的作用。" tabindex="-1">30、filter、map、reduce的作用。 <a class="header-anchor" href="#_30、filter、map、reduce的作用。" aria-label="Permalink to &quot;30、filter、map、reduce的作用。&quot;">​</a></h3>',4),i=[t,r,c];function E(h,y,d,u,F,A){return e(),o("div",null,i)}const b=n(p,[["render",E]]);export{f as __pageData,b as default};
