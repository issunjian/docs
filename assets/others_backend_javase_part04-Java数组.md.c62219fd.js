import{_ as s,o as n,c as a,V as l}from"./chunks/framework.c6d8cbec.js";const p="/docs/assets/1661321640902.ded0603f.png",o="/docs/assets/1661321680612.d0e25206.png",e="/docs/assets/1661321716135.0fb5fe7a.png",t="/docs/assets/1661353166416.b4bcc036.png",c="/docs/assets/887444982_1119033195.f8907425.jpg",r="/docs/assets/1661354056668.9211562b.png",y="/docs/assets/1661356063895.9ba34d67.png",F="/docs/assets/1661417981361.b15d5e2e.png",i="/docs/assets/1661437717797.082efc0c.png",E="/docs/assets/1661438278304.1fc31609.png",d="/docs/assets/1661439843879.17c069d4.png",C="/docs/assets/1661439986204.05540ccd.png",u="/docs/assets/1661440179341.fb6222bb.png",g="/docs/assets/1661440425901.ffb43b26.png",D="/docs/assets/1661441712915.10ee7b53.png",h="/docs/assets/v2-33afa093891fa3f7fd9785b0fa4800d7.c7d99ce5.gif",A="/docs/assets/1661442733592.25dd01a7.png",B="/docs/assets/1661443189060.15be7645.png",m="/docs/assets/1661444407716.4a734925.png",v="/docs/assets/1661444896100.98110f83.png",T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"others/backend/javase/part04-Java数组.md","filePath":"others/backend/javase/part04-Java数组.md"}'),b={name:"others/backend/javase/part04-Java数组.md"},f=l('<h2 id="part04——java数组" tabindex="-1">part04——Java数组 <a class="header-anchor" href="#part04——java数组" aria-label="Permalink to &quot;part04——Java数组&quot;">​</a></h2><p>目标</p><ol><li>数组 🍐 ❤️ <ul><li>数组的定义和访问</li><li>数组的初始化</li><li>数组的元素访问 ❤️</li><li>数组的遍历 ❤️</li><li>数组的动态初始化</li></ul></li><li>数组在计算机中执行的原理 🍐</li><li>完成数组专项练习 ✏️</li></ol><h2 id="一、认识数组" tabindex="-1">一、认识数组 <a class="header-anchor" href="#一、认识数组" aria-label="Permalink to &quot;一、认识数组&quot;">​</a></h2><p>先来认识一下什么数组</p><h3 id="_1-什么数组" tabindex="-1">1. 什么数组 <a class="header-anchor" href="#_1-什么数组" aria-label="Permalink to &quot;1\\. 什么数组&quot;">​</a></h3><p>数组就是一个容器，用来存一批同种类型的数据的。</p><p>比如：想要存储 20,10,80,60,90 这些数据。 我们可以把代码写成这样</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] array </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">80</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">60</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">90</span><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] array </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">80</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">90</span><span style="color:#24292E;">};</span></span></code></pre></div><p>比如：想要存储 “<strong>牛二</strong>“,“<strong>西门</strong>“,“<strong>全蛋</strong>“ 这些数据。我们可以把代码写成这样</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] names </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">牛二</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">西门</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">全蛋</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] names </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;牛二&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;西门&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;全蛋&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="_2-数组的应用场景" tabindex="-1">2. 数组的应用场景 <a class="header-anchor" href="#_2-数组的应用场景" aria-label="Permalink to &quot;2\\. 数组的应用场景&quot;">​</a></h3><p>问题</p><ol><li>有变量（<strong>用来存储数据</strong>），为什么还要有数组呢？ 比如，我们要做一个点名器</li></ol><p>点击查看点名器效果图</p><img src="'+p+'"><p>如果用变量来做的话，代码是这样子的</p><img src="'+o+'"><p>如果用数组来做的话，代码是这样子的</p><img src="'+e+`"><p>结论</p><p><strong>遇到批量数据的存储和操作时，数组比变量更适合</strong>简洁实用</p><h2 id="二、数组的定义和访问" tabindex="-1">二、数组的定义和访问 <a class="header-anchor" href="#二、数组的定义和访问" aria-label="Permalink to &quot;二、数组的定义和访问&quot;">​</a></h2><p>数组有两种初始化的方式</p><p>1️⃣ 一种是静态初始化</p><p>2️⃣ 一种是动态初始化</p><h3 id="_2-1-数组的静态初始化" tabindex="-1">2.1 数组的静态初始化 <a class="header-anchor" href="#_2-1-数组的静态初始化" aria-label="Permalink to &quot;2.1 数组的静态初始化&quot;">​</a></h3><p>静态初始化指的是：在定义数组时直接给数组中的数据赋值。</p><p><strong>1. 静态初始化标准格式：</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">数据类型[] 变量名 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> 数据类型[]{元素1,元素2,元素3};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">数据类型[] 变量名 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> 数据类型[]{元素1,元素2,元素3};</span></span></code></pre></div><p>按照格式定义int类型、double类型数组</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//定义数组，用来存储多个年龄</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] ages </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[]{</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">24</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">36</span><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#7B7F8B;">//定义数组，用来存储多个成绩</span></span>
<span class="line"><span style="color:#F6F6F4;">double[] scores </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;">[]{</span><span style="color:#BF9EEE;">89.9</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">99.5</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">59.5</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">88.0</span><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//定义数组，用来存储多个年龄</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] ages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[]{</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//定义数组，用来存储多个成绩</span></span>
<span class="line"><span style="color:#24292E;">double[] scores </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">double</span><span style="color:#24292E;">[]{</span><span style="color:#005CC5;">89.9</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">99.5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">59.5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">88.0</span><span style="color:#24292E;">};</span></span></code></pre></div><p><strong>2. 静态初始化简化格式</strong> 简单实用</p><p>Java语言的设计者为了简化定义数组的写法，还为静态初始化提供了一种简化写法</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">数据类型[] 变量名 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {元素1,元素2,元素3};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">数据类型[] 变量名 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {元素1,元素2,元素3};</span></span></code></pre></div><p>使用简化格式定义int类型、double类型数组</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//定义数组，用来存储多个年龄</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] ages </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">24</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">36</span><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#7B7F8B;">//定义数组，用来存储多个成绩</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;">[] scores </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">89.9</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">99.5</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">59.5</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">88.0</span><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//定义数组，用来存储多个年龄</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] ages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//定义数组，用来存储多个成绩</span></span>
<span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;">[] scores </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">89.9</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">99.5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">59.5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">88.0</span><span style="color:#24292E;">};</span></span></code></pre></div><p><strong>注意哟！！</strong></p><ul><li>定义数组时， <code>数据类型[] 数组名</code>开发常用 也可写成 <code>数据类型 数组名[]</code></li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//以下两种写法是等价的。但是建议大家用第一种，因为这种写法更加普遍</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] ages </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">24</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">36</span><span style="color:#F6F6F4;">};</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> ages[] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">24</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">36</span><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//以下两种写法是等价的。但是建议大家用第一种，因为这种写法更加普遍</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] ages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> ages[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>4. 数组在计算机中的基本原理</strong> 🍐</p><p>点击查看数组在计算机中的基本原理</p><p>我们以<code>int[] ages = {12,24,36};</code>这句话为例，看一下这句话到底在计算机中做了那些事情。</p><ul><li>首先，左边<code>int[] ages</code> 表示定义了一个数组类型的变量，变量名叫ages</li><li>其次，右边<code>{12,24,36}</code>表示创建一个数组对象，你完全可以把它理解成一个能装数据的东西。这个对象在内存中会有一个地址值<code>[I@4c873330</code>，每次创建一个数组对象都会有不用的地址值。</li><li>然后，把右边的地址值<code>[I@4c873330</code>赋值给左边的ages变量</li><li>所以，ages变量就可以通过地址值，找到数组这个东西。</li></ul><img src="`+t+'"><p>改变数组中的内容，不会改变这个数组的地址值</p><img src="'+c+'"><h3 id="_2-2-数组的元素访问-❤️" tabindex="-1">2.2 数组的元素访问 ❤️ <a class="header-anchor" href="#_2-2-数组的元素访问-❤️" aria-label="Permalink to &quot;2.2 数组的元素访问 ❤️&quot;">​</a></h3><blockquote><p>通过刚才的学习，我们知道数组是用来存储数据的。</p></blockquote><p>接下来：学习获取中数组中数据的值、或者给数组中的数据赋值</p><p>这里先给大家统一几个概念，数组中存储的数据我们叫做元素；而且数组中的<strong>每一个元素</strong>都有<strong>一个编号</strong>与之对应，我们把这个编号叫做索引 ，这个索引是<strong>从0依次递增的整数</strong>。如下图所示</p><img src="'+r+`"><p>访问数组中的元素</p><p>格式如下：数组名[索引]</p><blockquote><p>数组名可以找到数组对象的地址，再通过索引就可以定位到具体的元素了</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//索引：	   0   1   2</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">24</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">36</span><span style="color:#F6F6F4;">};</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1、访问数组的全部数据</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">]); </span><span style="color:#7B7F8B;">//12</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">]); </span><span style="color:#7B7F8B;">//24</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr[</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">]); </span><span style="color:#7B7F8B;">//36</span></span>
<span class="line"><span style="color:#7B7F8B;">//下面代码没有3索引，会出现ArrayIndexOutOfBoundsException 索引越界异常</span></span>
<span class="line"><span style="color:#7B7F8B;">//System.out.println(arr[3]);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//索引：	   0   1   2</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#6A737D;">// 1、访问数组的全部数据</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]); </span><span style="color:#6A737D;">//12</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]); </span><span style="color:#6A737D;">//24</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]); </span><span style="color:#6A737D;">//36</span></span>
<span class="line"><span style="color:#6A737D;">//下面代码没有3索引，会出现ArrayIndexOutOfBoundsException 索引越界异常</span></span>
<span class="line"><span style="color:#6A737D;">//System.out.println(arr[3]);</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//索引：	   0   1   2</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">24</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">36</span><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// 修改数组中的数据</span></span>
<span class="line"><span style="color:#F6F6F4;">arr[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">66</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">arr[</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">]); </span><span style="color:#7B7F8B;">//66</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">]); </span><span style="color:#BF9EEE;">0</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr[</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">]); </span><span style="color:#7B7F8B;">//100</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//索引：	   0   1   2</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 修改数组中的数据</span></span>
<span class="line"><span style="color:#24292E;">arr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">66</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">arr[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]); </span><span style="color:#6A737D;">//66</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]); </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]); </span><span style="color:#6A737D;">//100</span></span></code></pre></div><p>获取数组中元素的个数，后面我们统称为数组的长度</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 3、访问数组的元素个数：数组名.length</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr.length);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// 技巧：获取数组的最大索引: arr.length - 1(前提是数组中存在数据)</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr.length </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] arr2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {};</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr2.length </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 3、访问数组的元素个数：数组名.length</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr.length);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 技巧：获取数组的最大索引: arr.length - 1(前提是数组中存在数据)</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr.length </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] arr2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr2.length </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="_2-3-数组的遍历-❤️" tabindex="-1">2.3 数组的遍历 ❤️ <a class="header-anchor" href="#_2-3-数组的遍历-❤️" aria-label="Permalink to &quot;2.3 数组的遍历 ❤️&quot;">​</a></h3><p>数组遍历 就是将数组中的元素一个一个的取出来。</p><p>遍历数组准备：</p><ol><li>获得每一个索引</li><li>熟悉数组元素访问的格式：数组名[索引]</li><li>使用循环结构</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] ages </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">12</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">24</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">36</span><span style="color:#F6F6F4;">};</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> ages.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// i的取值 = 0,1,2</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(ages[i]); </span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] ages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> ages.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// i的取值 = 0,1,2</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ages[i]); </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_2-4-数组静态初始化案例-✏️" tabindex="-1">2.4 数组静态初始化案例 ✏️ <a class="header-anchor" href="#_2-4-数组静态初始化案例-✏️" aria-label="Permalink to &quot;2.4 数组静态初始化案例 ✏️&quot;">​</a></h3><p>学习完数组的静态初始化之后，接下来我们做一个练习题来巩固一下。</p><p>需求</p><p>需求：某部门5名员工的销售额分别是：16、26、36、6、100，请计算出他们部门的总销售额。</p><p>点击查看需求分析</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">需求分析：</span></span>
<span class="line"><span style="color:#F6F6F4;">	1.看到有16、</span><span style="color:#BF9EEE;">26</span><span style="color:#F6F6F4;">、</span><span style="color:#BF9EEE;">36</span><span style="color:#F6F6F4;">、</span><span style="color:#BF9EEE;">6</span><span style="color:#F6F6F4;">、100这5个数据数据，而且数据值很明确;</span></span>
<span class="line"><span style="color:#F6F6F4;">		</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">)想到,可以使用数组静态初始化把这5个数据存起来</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span></span>
<span class="line"><span style="color:#F6F6F4;">	2.请计算出他们部门的总销售额（这不就是求数组中数据的和吗？）</span></span>
<span class="line"><span style="color:#F6F6F4;">		</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">)必须先将数组中所有的元素遍历出来</span></span>
<span class="line"><span style="color:#F6F6F4;">		</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">)想要求和，得先有一个求和变量sum</span></span>
<span class="line"><span style="color:#F6F6F4;">		</span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">)再将每一个元素和求和变量sum进行累加（求和思想）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">需求分析：</span></span>
<span class="line"><span style="color:#24292E;">	1.看到有16、</span><span style="color:#005CC5;">26</span><span style="color:#24292E;">、</span><span style="color:#005CC5;">36</span><span style="color:#24292E;">、</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">、100这5个数据数据，而且数据值很明确;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)想到,可以使用数组静态初始化把这5个数据存起来</span></span>
<span class="line"><span style="color:#24292E;">	</span></span>
<span class="line"><span style="color:#24292E;">	2.请计算出他们部门的总销售额（这不就是求数组中数据的和吗？）</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)必须先将数组中所有的元素遍历出来</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)想要求和，得先有一个求和变量sum</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">)再将每一个元素和求和变量sum进行累加（求和思想）</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 1、定义一个数组存储5名员工的销售额</span></span>
<span class="line"><span style="color:#7B7F8B;">//索引          0   1    2  3   4</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] money </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">16</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">26</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">36</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">6</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// 3、定义一个变量用于累加求和</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> sum </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// 2、遍历这个数组中的每个数据。</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> money.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// i = 0  1  2  3  4</span></span>
<span class="line"><span style="color:#F6F6F4;">    sum </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> money[i];</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">员工的销售总额：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> sum);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 1、定义一个数组存储5名员工的销售额</span></span>
<span class="line"><span style="color:#6A737D;">//索引          0   1    2  3   4</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] money </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">26</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 3、定义一个变量用于累加求和</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> sum </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 2、遍历这个数组中的每个数据。</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> money.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// i = 0  1  2  3  4</span></span>
<span class="line"><span style="color:#24292E;">    sum </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> money[i];</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;员工的销售总额：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> sum);</span></span></code></pre></div><h3 id="_2-5-数组的动态初始化-❤️" tabindex="-1">2.5 数组的动态初始化 ❤️ <a class="header-anchor" href="#_2-5-数组的动态初始化-❤️" aria-label="Permalink to &quot;2.5 数组的动态初始化 ❤️&quot;">​</a></h3><p>动态初始化不需要我们写出具体的元素，而是指定元素类型和长度就行。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//数据类型[]  数组名 = new 数据类型[长度];</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//数据类型[]  数组名 = new 数据类型[长度];</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">];</span></span></code></pre></div><p>点击查看动态初始化数组的原理图</p><p>动态初始化数组的原理图。我们发现<code>int[] arr</code> 其实就是一个变量，它记录了数组对象的地址值，而且数组中的元素默认值是0。</p><img src="`+y+'"><p>点击查看不同元素的初始值</p><p>使用动态初始化定义数组时，根据元素类型不同，默认值也有所不同。</p><img src="'+F+`"><h3 id="_2-6-数组动态初始化案例-✏️" tabindex="-1">2.6 数组动态初始化案例 ✏️ <a class="header-anchor" href="#_2-6-数组动态初始化案例-✏️" aria-label="Permalink to &quot;2.6 数组动态初始化案例 ✏️&quot;">​</a></h3><p>案例需求</p><p>某歌唱比赛，需要开发一个系统：可以录入6名评委的打分，录入完毕后立即输出平均分做选手得分</p><p>点击查看需求分析</p><ol><li>需要录入6名评委的分数，可以用一个数组来保存。 <ul><li>因为在评委没有录入分数之前，还不确定数组中应该存哪些数据。</li><li>所以可以使用数组的动态初始化</li></ul></li><li>遍历数组中的每一个位置，并录入分数，将分数存入数组中</li><li>遍历数组中的每一个元素，对元素求和</li></ol><p>代码如下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 1、定义一个动态初始化的数组，负责后期存储6个评委的打分。</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;">[] scores </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">6</span><span style="color:#F6F6F4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">Scanner</span><span style="color:#F6F6F4;"> sc  </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(System.in);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// 2、遍历数组中的每个位置，录入评委的分数，存入到数组中去</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> scores.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// i = 0 1 2 3 4 5</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请您输入当前第</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> (i </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">+</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">个评委的分数：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> score </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sc.</span><span style="color:#62E884;">nextDouble</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    scores[i] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> score;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// 3、遍历数组中的每个元素进行求和</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> sum  </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> scores.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    sum </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> scores[i];</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">选手最终得分是：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> sum </span><span style="color:#F286C4;">/</span><span style="color:#F6F6F4;"> scores.length);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 1、定义一个动态初始化的数组，负责后期存储6个评委的打分。</span></span>
<span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;">[] scores </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">double</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Scanner sc  </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(System.in);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 2、遍历数组中的每个位置，录入评委的分数，存入到数组中去</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> scores.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// i = 0 1 2 3 4 5</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请您输入当前第&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;个评委的分数：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> score </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sc.</span><span style="color:#6F42C1;">nextDouble</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    scores[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> score;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 3、遍历数组中的每个元素进行求和</span></span>
<span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;"> sum  </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> scores.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    sum </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> scores[i];</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;选手最终得分是：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> sum </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> scores.length);</span></span></code></pre></div><h2 id="三、数组在计算机中的执行原理-🚀-🍐" tabindex="-1">三、数组在计算机中的执行原理 🚀 🍐 <a class="header-anchor" href="#三、数组在计算机中的执行原理-🚀-🍐" aria-label="Permalink to &quot;三、数组在计算机中的执行原理 🚀 🍐&quot;">​</a></h2><p>相关信息</p><ul><li>已经会定义数组、遍历数组</li><li>可以修改数组元素内容，了解数组的索引</li></ul><p>Java程序的执行的内存原理</p><p>由于数组是一个容器，变量也是一个容器，在理解他们执行原理的时候，容易搞混，现在我把他们放在一起带着大家回顾一下他们的会执行原理，顺便带着大家详细理解一下Java程序的执行的内存原理。</p><h3 id="_3-1-数组的执行原理-java程序的执行原理" tabindex="-1">3.1 数组的执行原理，Java程序的执行原理 <a class="header-anchor" href="#_3-1-数组的执行原理-java程序的执行原理" aria-label="Permalink to &quot;3.1 数组的执行原理，Java程序的执行原理&quot;">​</a></h3><p>我们以下面的代码，来讲解变量、数组的执原理。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">ArrayDemo1</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(a);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[]{</span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">22</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">33</span><span style="color:#F6F6F4;">};</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        arr[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">44</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        arr[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">55</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        arr[</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">66</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">]);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">]);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr[</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">]);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ArrayDemo1</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(a);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[]{</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">22</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">33</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        arr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">44</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        arr[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">55</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        arr[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">66</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>知识点</p><ol><li><p>程序是在内存中执行的。Java程序是把编译后的字节码.class 加载到Java虚拟机中执行的。 <img src="`+i+'"></p></li><li><p>Java为了便于虚拟机执行Java程序，将虚拟机的内存划分为 方法区关注、栈关注、堆关注、本地方法栈、寄存器 这5块区域。</p></li></ol><ul><li><strong>方法区</strong>：字节码文件先加载到这里</li><li><strong>栈</strong>：方法运行时所进入的内存区域，由于变量在方法中，所以变量也在这一块区域中</li><li><strong>堆</strong>：存储new出来的东西，并分配地址。由于数组是new 出来的，所以数组也在这块区域。</li></ul><p>下面是上面案例执行的内存原理如下图所示，按照① ② ③ ④ ⑤ ⑥ 的标记的顺序来看</p><img src="'+E+`"><p>总结一下\`int a = 10\`与 \`int[] arr = new int[]{11,22,33}的区别\`</p><ul><li><strong>a</strong>是一个变量，在栈内存中，<strong>a</strong>变量中存储的数据就是<strong>10</strong>这个值。</li><li><strong>arr</strong>也是一个变量，在栈中，存储的是数组对象在堆内存中的地址值</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 这里的int a是一个基本类型变量，存储的是一个数值</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> a </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;"> ; </span></span>
<span class="line"><span style="color:#7B7F8B;">//这里的int[] arr是一个引用类型的变量，存储的是一个地址值</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[]{</span><span style="color:#BF9EEE;">44</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">55</span><span style="color:#F6F6F4;">,</span><span style="color:#BF9EEE;">66</span><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 这里的int a是一个基本类型变量，存储的是一个数值</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> ; </span></span>
<span class="line"><span style="color:#6A737D;">//这里的int[] arr是一个引用类型的变量，存储的是一个地址值</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[]{</span><span style="color:#005CC5;">44</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">55</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">66</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="_3-2-多个变量指向同一个数组的问题" tabindex="-1">3.2 多个变量指向同一个数组的问题 <a class="header-anchor" href="#_3-2-多个变量指向同一个数组的问题" aria-label="Permalink to &quot;3.2 多个变量指向同一个数组的问题&quot;">​</a></h3><p>各位同学，我们了解了数组在内存中的执行原理。我们知道数组类型的变量，指向的是堆内存中数组对象的地址。但是在实际开发中可能存在一种特殊情况，就是多个变量指向同一个数组对象的形式。</p><p>讲解这个知识点的目的，是让同学们注意多个变量指向同一个数组对象存在什么问题？</p><p>我们先看一段代码</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">ArrayDemo2</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 目标：认识多个变量指向同一个数组对象的形式，并掌握其注意事项。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] arr1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">22</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">33</span><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 把int类型的数组变量arr1赋值给int类型的数组变量arr2</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] arr2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> arr1;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr1);</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        arr2[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">99</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr1[</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        arr2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">; </span><span style="color:#7B7F8B;">// 拿到的数组变量中存储的值是null</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(arr2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//System.out.println(arr2[0]);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//System.out.println(arr2.length);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ArrayDemo2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 目标：认识多个变量指向同一个数组对象的形式，并掌握其注意事项。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] arr1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">22</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">33</span><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 把int类型的数组变量arr1赋值给int类型的数组变量arr2</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] arr2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr1;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr1);</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        arr2[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">99</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr1[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        arr2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 拿到的数组变量中存储的值是null</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(arr2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//System.out.println(arr2[0]);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//System.out.println(arr2.length);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>我们重点关注这一段代码</p><img src="`+d+'"><p>刚执行完<code>int[] arr1 = {11,22,33};</code>时，内存原理如下</p><img src="'+C+'"><p>当执行完<code>int[] arr2 = arr1;</code>后，内存原理如下</p><img src="'+u+'"><p>当执行到<code>arr2[1]=99;时</code>，内存原理如下</p><img src="'+g+`"><p>总结一下</p><ul><li><strong>两个变量</strong>指向<strong>同一个数组</strong>时，两个变量记录的是同一个地址值。</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] arr1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">11</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">22</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">33</span><span style="color:#F6F6F4;">};</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] arr2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> arr1;</span></span>
<span class="line"><span style="color:#7B7F8B;">// arr1、arr2是同一个地址值</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] arr1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">22</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">33</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] arr2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr1;</span></span>
<span class="line"><span style="color:#6A737D;">// arr1、arr2是同一个地址值</span></span></code></pre></div><ul><li>当一个变量修改数组中的元素时，另一个变量去访问数组中的元素，元素已经被修改过了。</li></ul><p>到这里有关数组的基本操作，和内存原理我们就全部学习完了。</p><h2 id="四、数组专项练习-✏️-❤️" tabindex="-1">四、数组专项练习 ✏️ ❤️ <a class="header-anchor" href="#四、数组专项练习-✏️-❤️" aria-label="Permalink to &quot;四、数组专项练习 ✏️ ❤️&quot;">​</a></h2><p>接下来我们做一些专项练习题，把数组的常见操作练习一下。在学习这个案例时，重点掌握数组求最值的思路，代码只是用来表达你的思路的。</p><h3 id="_4-1-数组求最值" tabindex="-1">4.1 数组求最值 <a class="header-anchor" href="#_4-1-数组求最值" aria-label="Permalink to &quot;4.1 数组求最值&quot;">​</a></h3><p>需求：定义一个int类型数组，求数组中元素的最大值，并打印最大值</p><p>我们先看一下选美比赛，是怎么选出颜值最高的人的。然后再以此思路，来写代码找出数组中元素的最大值。</p><img src="`+D+'"><p>数组求最大值思路：</p><ul><li>1)先找出数组中0索引的元素，假设为最大值，用max表示【擂主】</li><li>2)遍历后面的每一个元素和max比较，把较大的元素值重新赋值给max(擂主换人)</li><li>3)最后max就是所有元素的最大值(最后站在台上的擂主) <img src="'+h+`"></li></ul><p>点击查看代码</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test1</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、把颜值数据拿到程序中来，用数组装起来</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] faceScores </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">15</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">9000</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">10000</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">20000</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">9500</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、定义一个变量用于最终记住最大值。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> max </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> faceScores[</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、从数组的第二个位置开始遍历。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> faceScores.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// i = 1  2  3  4  5</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 判断一下当前遍历的这个数据，是否大于最大值变量max存储的数据，</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">//如果大于，当前遍历的数据需要赋值给max</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(faceScores[i] </span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> max ){</span></span>
<span class="line"><span style="color:#F6F6F4;">                max </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> faceScores[i];</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">最高颜值是：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> max);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test1</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、把颜值数据拿到程序中来，用数组装起来</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] faceScores </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">15</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9500</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、定义一个变量用于最终记住最大值。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> faceScores[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、从数组的第二个位置开始遍历。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> faceScores.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// i = 1  2  3  4  5</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 判断一下当前遍历的这个数据，是否大于最大值变量max存储的数据，</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//如果大于，当前遍历的数据需要赋值给max</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(faceScores[i] </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> max ){</span></span>
<span class="line"><span style="color:#24292E;">                max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> faceScores[i];</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;最高颜值是：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> max);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>总结一下：</strong></p><p>通过这个案例，我们主要掌握求最值的思路，以后不管遇到求最大值还是最小值，编程思路都是一样的，不同的可能是数据不同。</p><h3 id="_4-2-数组元素反转" tabindex="-1">4.2 数组元素反转 <a class="header-anchor" href="#_4-2-数组元素反转" aria-label="Permalink to &quot;4.2 数组元素反转&quot;">​</a></h3><p>需求：某个数组有5个数据：10,20,30,40,50，请将这个数组中的数据进行反转。</p><p>[10, 20, 30, 40, 50] 反转后 [50, 40, 30, 20, 10]</p><p>数组元素反转的核心，其实是数组中两个数据的交换。我们可以认为两个数据分别存储在两个水杯中。想要交换两个水杯中的东西，我们得借助第三个水杯，如下图所示</p><img src="`+A+'"><p>数组中元素交换，就是用的借用第三方变量的思想。 我们把数组中的每一个元素当做一个水杯，然后索引控制哪两个元素互换位置。</p><p>怎么样，才能达到元素反转的效果呢？我们只需将第一个和最后一个元素互换、第二个和倒数第二个互换、依次内推.... 如下图所示</p><img src="'+B+`"><p>怎么样写代码，才能达到上面的效果呢？</p><p>分析</p><ol><li>每次交换，需要有左右两边的两个索引，我们可以用i和j表示 <ul><li>刚开始i=0，j=数组长度-1;</li></ul></li><li>每次让i和j索引位置的两个元素互换位置 <ul><li>arr[i]和arr[j]互换位置</li></ul></li><li>每次还完位置之后，让i往右移动一位，让j往前移动一位</li></ol><p>点击查看代码</p><p>具体代码如下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test2</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 目标：完成数组反转。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、准备一个数组</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">30</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">40</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">50</span><span style="color:#F6F6F4;">};  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、定义一个循环，设计2个变量，一个在前，一个在后</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">, j </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> arr.length </span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> j; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">, j</span><span style="color:#F286C4;">--</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// arr[i]   arr[j]</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 交换</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 1、定义一个临时变量记住后一个位置处的值</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> temp </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> arr[j];</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 2、把前一个位置处的值赋值给后一个位置了</span></span>
<span class="line"><span style="color:#F6F6F4;">            arr[j] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> arr[i];</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 3、把临时变量中记住的后一个位置处的值赋值给前一个位置处</span></span>
<span class="line"><span style="color:#F6F6F4;">            arr[i] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> temp;</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、遍历数组中的每个数据，看是否反转成功了</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> arr.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(arr[i] </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 目标：完成数组反转。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、准备一个数组</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">};  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、定义一个循环，设计2个变量，一个在前，一个在后</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr.length </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> j; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">, j</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// arr[i]   arr[j]</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 交换</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 1、定义一个临时变量记住后一个位置处的值</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr[j];</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 2、把前一个位置处的值赋值给后一个位置了</span></span>
<span class="line"><span style="color:#24292E;">            arr[j] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr[i];</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 3、把临时变量中记住的后一个位置处的值赋值给前一个位置处</span></span>
<span class="line"><span style="color:#24292E;">            arr[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、遍历数组中的每个数据，看是否反转成功了</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> arr.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(arr[i] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>总结一下：</strong></p><p>通过上面的案例，需要我们掌握元素互换位置的编程思路；以后遇到数据互换问题，都这样做。</p><h3 id="_4-3-随机排名" tabindex="-1">4.3 随机排名 <a class="header-anchor" href="#_4-3-随机排名" aria-label="Permalink to &quot;4.3 随机排名&quot;">​</a></h3><blockquote><p>学习随机排名案例，将数据交换的思路再巩固一下。</p></blockquote><p>需求</p><p>某公司开发部5名开发人员，要进行项目进展汇报演讲，现在采取随机排名后进行汇报。请先依次录入5名员工的工号，然后展示出一组随机的排名顺序。</p><p>点击查看随机排名的思路</p><ol><li>在程序中录入5名员工的工号存储起来 ---&gt; 使用动态初始化数组的方式。</li><li>依次遍历数组中的每个数据。</li><li>每遍历到一个数据，都随机一个索引值出来，让当前数据与该索引位置处的数据进行交换。 如下图所示，每次遍历到一个元素，随机将当前位置元素和随机索引元素换位置。</li></ol><img src="`+m+`"><p>点击查看代码</p><p>代码如下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Test3</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 目标：完成随机排名</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、定义一个动态初始化的数组用于存储5名员工的工号</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[] codes </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、提示用户录入5名员工的工号。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Scanner</span><span style="color:#F6F6F4;"> sc </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(System.in);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> codes.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// i = 0 1 2 3 4</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请您输入第</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> (i </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">+</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">个员工的工号：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> code </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sc.</span><span style="color:#62E884;">nextInt</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">            codes[i] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> code;</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、打乱数组中的元素顺序。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// [12, 33, 54, 26, 8]</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//  i       index</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Random</span><span style="color:#F6F6F4;"> r </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Random</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> codes.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// codes[i]</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 每遍历到一个数据，都随机一个数组索引范围内的值。</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">//然后让当前遍历的数据与该索引位置处的值交换。</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> index </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> r.</span><span style="color:#62E884;">nextInt</span><span style="color:#F6F6F4;">(codes.length); </span><span style="color:#7B7F8B;">// 0 - 4</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 定义一个临时变量记住index位置处的值</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> temp </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> codes[index];</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 把i位置处的值赋值给index位置处</span></span>
<span class="line"><span style="color:#F6F6F4;">            codes[index] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> codes[i];</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 把index位置原来的值赋值给i位置处</span></span>
<span class="line"><span style="color:#F6F6F4;">            codes[i] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> temp;</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 4、遍历数组中的工号输出即可</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> codes.length; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(codes[i] </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test3</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 目标：完成随机排名</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、定义一个动态初始化的数组用于存储5名员工的工号</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] codes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、提示用户录入5名员工的工号。</span></span>
<span class="line"><span style="color:#24292E;">        Scanner sc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(System.in);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> codes.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// i = 0 1 2 3 4</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请您输入第&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;个员工的工号：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> code </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sc.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            codes[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> code;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、打乱数组中的元素顺序。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// [12, 33, 54, 26, 8]</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//  i       index</span></span>
<span class="line"><span style="color:#24292E;">        Random r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Random</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> codes.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// codes[i]</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 每遍历到一个数据，都随机一个数组索引范围内的值。</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//然后让当前遍历的数据与该索引位置处的值交换。</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> r.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">(codes.length); </span><span style="color:#6A737D;">// 0 - 4</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 定义一个临时变量记住index位置处的值</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> codes[index];</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 把i位置处的值赋值给index位置处</span></span>
<span class="line"><span style="color:#24292E;">            codes[index] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> codes[i];</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 把index位置原来的值赋值给i位置处</span></span>
<span class="line"><span style="color:#24292E;">            codes[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 4、遍历数组中的工号输出即可</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> codes.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(codes[i] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>到这有关数组的常见练习题我们就讲完了，待会我们在给同学们讲一个开发中用得比较多的工具叫做Debug调试。</p><h2 id="五、debug调试工具" tabindex="-1">五、Debug调试工具 <a class="header-anchor" href="#五、debug调试工具" aria-label="Permalink to &quot;五、Debug调试工具&quot;">​</a></h2><p>各位同学，为了让大家更好的理解代码的执行流程，这里给大家讲一个在开发中非常重要的工具——叫做Debug调试。</p><p>通过Debug调试，我们可以查看代码的执行流程。当你代码中有Bug但是又发现不了的时候，你就可以用Debug调试工具，查看执行流程，逐步分析是哪一行出现了问题。</p><p>Debug调试工具的使用步骤如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">第一步：打断点，如下图的红色小圆点</span></span>
<span class="line"><span style="color:#F6F6F4;">第二步：右键Debug方式启动程序，如下图右键菜单</span></span>
<span class="line"><span style="color:#F6F6F4;">	  启动后，代码会停留在打断点的这一行</span></span>
<span class="line"><span style="color:#F6F6F4;">第三步：点击箭头按钮，一行一行往下执行</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">第一步：打断点，如下图的红色小圆点</span></span>
<span class="line"><span style="color:#24292E;">第二步：右键Debug方式启动程序，如下图右键菜单</span></span>
<span class="line"><span style="color:#24292E;">	  启动后，代码会停留在打断点的这一行</span></span>
<span class="line"><span style="color:#24292E;">第三步：点击箭头按钮，一行一行往下执行</span></span></code></pre></div><img src="`+v+'">',166),k=[f];function S(_,q,j,x,w,P){return n(),a("div",null,k)}const I=s(b,[["render",S]]);export{T as __pageData,I as default};
