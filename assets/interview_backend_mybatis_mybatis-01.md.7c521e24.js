import{_ as s,o as a,c as o,V as e}from"./chunks/framework.c6d8cbec.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/mybatis/mybatis-01.md","filePath":"interview/backend/mybatis/mybatis-01.md"}'),l={name:"interview/backend/mybatis/mybatis-01.md"},t=e(`<h3 id="_1、mybatis的一级、二级缓存" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#1mybatis%E7%9A%84%E4%B8%80%E7%BA%A7%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98" target="_blank" rel="noreferrer">1、Mybatis的一级、二级缓存</a> <a class="header-anchor" href="#_1、mybatis的一级、二级缓存" aria-label="Permalink to &quot;[1、Mybatis的一级、二级缓存](https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis最新2021年面试题，高级面试题及附答案解析.md#1mybatis的一级二级缓存)&quot;">​</a></h3><p><strong>1、</strong> 一级缓存: 基于 PerpetualCache 的 HashMap 本地缓存，其存储作用域为 Session，当 Session flush 或 close 之后，该 Session 中的所有 Cache 就将清空，默认打开一级缓存。</p><p><strong>2、</strong> 二级缓存与一级缓存其机制相同，默认也是采用 PerpetualCache，HashMap 存储，不同在于其存储作用域为 Mapper(Namespace)，并且可自定义存储源，如 Ehcache。默认不打开二级缓存，要开启二级缓存，使用二级缓存属性类需要实现Serializable序列化接口(可用来保存对象的状态),可在它的映射文件中配置<code>&lt;cache/&gt;</code></p><p><strong>3、</strong> 对于缓存数据更新机制，当某一个作用域(一级缓存 Session/二级缓存Namespaces)的进行了C/U/D 操作后，默认该作用域下所有 select 中的缓存将被 clear。</p><h3 id="_2、简述mybatis的xml映射文件和mybatis内部数据结构之间的映射关系" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#2%E7%AE%80%E8%BF%B0mybatis%E7%9A%84xml%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6%E5%92%8Cmybatis%E5%86%85%E9%83%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%97%B4%E7%9A%84%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB" target="_blank" rel="noreferrer">2、简述Mybatis的Xml映射文件和Mybatis内部数据结构之间的映射关系？</a> <a class="header-anchor" href="#_2、简述mybatis的xml映射文件和mybatis内部数据结构之间的映射关系" aria-label="Permalink to &quot;[2、简述Mybatis的Xml映射文件和Mybatis内部数据结构之间的映射关系？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis最新2021年面试题，高级面试题及附答案解析.md#2简述mybatis的xml映射文件和mybatis内部数据结构之间的映射关系)&quot;">​</a></h3><p>Mybatis将所有Xml配置信息都封装到All-In-One重量级对象Configuration内部。在Xml映射文件中，<code>&lt;parameterMap&gt;</code>标签会被解析为ParameterMap对象，其每个子元素会被解析为ParameterMapping对象。<code>&lt;resultMap&gt;</code>标签会被解析为ResultMap对象，其每个子元素会被解析为ResultMapping对象。每一个<code>&lt;select&gt;</code>、<code>&lt;insert&gt;</code>、<code>&lt;update&gt;</code>、<code>&lt;delete&gt;</code>标签均会被解析为MappedStatement对象，标签内的sql会被解析为BoundSql对象。</p><h3 id="_3、mybatis是否支持延迟加载-如果支持-它的实现原理是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#3mybatis%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E5%A6%82%E6%9E%9C%E6%94%AF%E6%8C%81%E5%AE%83%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">3、Mybatis是否支持延迟加载？如果支持，它的实现原理是什么？</a> <a class="header-anchor" href="#_3、mybatis是否支持延迟加载-如果支持-它的实现原理是什么" aria-label="Permalink to &quot;[3、Mybatis是否支持延迟加载？如果支持，它的实现原理是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis最新2021年面试题，高级面试题及附答案解析.md#3mybatis是否支持延迟加载如果支持它的实现原理是什么)&quot;">​</a></h3><p>Mybatis仅支持association关联对象和collection关联集合对象的延迟加载，association指的就是一对一，collection指的就是一对多查询。在Mybatis配置文件中，可以配置是否启用延迟加载lazyLoadingEnabled=true|false。</p><p>它的原理是，使用CGLIB创建目标对象的代理对象，当调用目标方法时，进入拦截器方法，比如调用a.getB().getName()，拦截器invoke()方法发现a.getB()是null值，那么就会单独发送事先保存好的查询关联B对象的sql，把B查询上来，然后调用a.setB(b)，于是a的对象b属性就有值了，接着完成a.getB().getName()方法的调用。这就是延迟加载的基本原理。</p><p>当然了，不光是Mybatis，几乎所有的包括Hibernate，支持延迟加载的原理都是一样的。</p><h3 id="_4、什么是mybatis的接口绑定-有哪些实现方式" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#4%E4%BB%80%E4%B9%88%E6%98%AFmybatis%E7%9A%84%E6%8E%A5%E5%8F%A3%E7%BB%91%E5%AE%9A%E6%9C%89%E5%93%AA%E4%BA%9B%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F" target="_blank" rel="noreferrer">4、什么是MyBatis的接口绑定？有哪些实现方式？</a> <a class="header-anchor" href="#_4、什么是mybatis的接口绑定-有哪些实现方式" aria-label="Permalink to &quot;[4、什么是MyBatis的接口绑定？有哪些实现方式？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis最新2021年面试题，高级面试题及附答案解析.md#4什么是mybatis的接口绑定有哪些实现方式)&quot;">​</a></h3><p>接口绑定，就是在MyBatis中任意定义接口,然后把接口里面的方法和SQL语句绑定, 我们直接调用接口方法就可以,这样比起原来了SqlSession提供的方法我们可以有更加灵活的选择和设置。</p><p>接口绑定有两种实现方式,一种是通过注解绑定，就是在接口的方法上面加上 @Select、@Update等注解，里面包含Sql语句来绑定；另外一种就是通过xml里面写SQL来绑定, 在这种情况下,要指定xml映射文件里面的namespace必须为接口的全路径名。当Sql语句比较简单时候,用注解绑定, 当SQL语句比较复杂时候,用xml绑定,一般用xml绑定的比较多。</p><h3 id="_5、mapper-编写有几种方式" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#5mapper-%E7%BC%96%E5%86%99%E6%9C%89%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F-" target="_blank" rel="noreferrer">5、Mapper 编写有几种方式 ？</a> <a class="header-anchor" href="#_5、mapper-编写有几种方式" aria-label="Permalink to &quot;[5、Mapper 编写有几种方式 ？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis最新2021年面试题，高级面试题及附答案解析.md#5mapper-编写有几种方式-)&quot;">​</a></h3><p><strong>1、</strong> 接口实现类集成<code>SQLSessionDaoSupport</code>** 此方法需要编写<code>mapper</code>接口，<code>mapper</code>接口的实现类,<code>mapper.xml</code>文件。</p><p><strong>2、</strong> 使用<code>org.mybatis.spring.mapper.MapperFactoryBean</code>** 此方法需要在<code>SqlMapConfig.xml</code>中配置<code>mapper.xml</code>的位置，还需定义<code>mapper</code>接口。</p><p><strong>3、</strong> 使用<code>mapper</code>扫描器** 需要编写<code>mapper.xml</code>文件，需要<code>mapper</code>接口，配置<code>mapper</code>扫描器，使用扫描器从<code>spring</code>容器中获取<code>mapper</code>的实现对象。</p><h3 id="_6、mybatis动态sql有什么用-执行原理-有哪些动态sql" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#6mybatis%E5%8A%A8%E6%80%81sql%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8%E6%89%A7%E8%A1%8C%E5%8E%9F%E7%90%86%E6%9C%89%E5%93%AA%E4%BA%9B%E5%8A%A8%E6%80%81sql" target="_blank" rel="noreferrer">6、Mybatis动态sql有什么用？执行原理？有哪些动态sql？</a> <a class="header-anchor" href="#_6、mybatis动态sql有什么用-执行原理-有哪些动态sql" aria-label="Permalink to &quot;[6、Mybatis动态sql有什么用？执行原理？有哪些动态sql？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis最新2021年面试题，高级面试题及附答案解析.md#6mybatis动态sql有什么用执行原理有哪些动态sql)&quot;">​</a></h3><p>Mybatis动态sql可以在Xml映射文件内，以标签的形式编写动态sql，执行原理是根据表达式的值 完成逻辑判断并动态拼接sql的功能。</p><p>Mybatis提供了9种动态sql标签：<code>trim | where | set | foreach | if | choose | when | otherwise | bind</code>。</p><h3 id="_7、mybatis实现一对一有几种方式-具体怎么操作的" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#7mybatis%E5%AE%9E%E7%8E%B0%E4%B8%80%E5%AF%B9%E4%B8%80%E6%9C%89%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%85%B7%E4%BD%93%E6%80%8E%E4%B9%88%E6%93%8D%E4%BD%9C%E7%9A%84" target="_blank" rel="noreferrer">7、MyBatis实现一对一有几种方式?具体怎么操作的？</a> <a class="header-anchor" href="#_7、mybatis实现一对一有几种方式-具体怎么操作的" aria-label="Permalink to &quot;[7、MyBatis实现一对一有几种方式?具体怎么操作的？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis最新2021年面试题，高级面试题及附答案解析.md#7mybatis实现一对一有几种方式具体怎么操作的)&quot;">​</a></h3><p>有联合查询和嵌套查询,联合查询是几个表联合查询,只查询一次, 通过在resultMap里面配置association节点配置一对一的类就可以完成；</p><p>嵌套查询是先查一个表，根据这个表里面的结果的 外键id，去再另外一个表里面查询数据,也是通过association配置，但另外一个表的查询通过select属性配置。</p><h3 id="_8、模糊查询like语句该怎么写" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#8%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2like%E8%AF%AD%E5%8F%A5%E8%AF%A5%E6%80%8E%E4%B9%88%E5%86%99" target="_blank" rel="noreferrer">8、模糊查询like语句该怎么写</a> <a class="header-anchor" href="#_8、模糊查询like语句该怎么写" aria-label="Permalink to &quot;[8、模糊查询like语句该怎么写](https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis最新2021年面试题，高级面试题及附答案解析.md#8模糊查询like语句该怎么写)&quot;">​</a></h3><ul><li>1 ’%\${question}%’ 可能引起SQL注入，不推荐</li><li>2 &quot;%&quot;#{question}&quot;%&quot; 注意：因为#{…}解析成sql语句时候，会在变量外侧自动加单引号’ &#39;，所以这里 % 需要使用双引号&quot; &quot;，不能使用单引号 ’ &#39;，不然会查不到任何结果。</li><li>3 CONCAT(’%’,#{question},’%’) 使用CONCAT()函数，（推荐）</li><li>4 使用bind标签（不推荐）</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;select id=&quot;listUserLikeUsername&quot; resultType=&quot;com.jourwon.pojo.User&quot;&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">  &lt;bind name=&quot;pattern&quot; value=&quot;&#39;%&#39; + username + &#39;%&#39;&quot; /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">  select id,sex,age,username,password from person where username LIKE{pattern}</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/select&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;select id=&quot;listUserLikeUsername&quot; resultType=&quot;com.jourwon.pojo.User&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">  &lt;bind name=&quot;pattern&quot; value=&quot;&#39;%&#39; + username + &#39;%&#39;&quot; /&gt;</span></span>
<span class="line"><span style="color:#24292e;">  select id,sex,age,username,password from person where username LIKE{pattern}</span></span>
<span class="line"><span style="color:#24292e;">&lt;/select&gt;</span></span></code></pre></div><h3 id="_9、mybatis实现一对多有几种方式-怎么操作的" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#9mybatis%E5%AE%9E%E7%8E%B0%E4%B8%80%E5%AF%B9%E5%A4%9A%E6%9C%89%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F,%E6%80%8E%E4%B9%88%E6%93%8D%E4%BD%9C%E7%9A%84" target="_blank" rel="noreferrer">9、MyBatis实现一对多有几种方式,怎么操作的？</a> <a class="header-anchor" href="#_9、mybatis实现一对多有几种方式-怎么操作的" aria-label="Permalink to &quot;[9、MyBatis实现一对多有几种方式,怎么操作的？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis最新2021年面试题，高级面试题及附答案解析.md#9mybatis实现一对多有几种方式,怎么操作的)&quot;">​</a></h3><p>有联合查询和嵌套查询。联合查询是几个表联合查询,只查询一次,通过在resultMap里面的collection节点配置一对多的类就可以完成；嵌套查询是先查一个表,根据这个表里面的 结果的外键id,去再另外一个表里面查询数据,也是通过配置collection,但另外一个表的查询通过select节点配置。</p><h3 id="_10、mapper编写有哪几种方式" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#10mapper%E7%BC%96%E5%86%99%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F" target="_blank" rel="noreferrer">10、Mapper编写有哪几种方式？</a> <a class="header-anchor" href="#_10、mapper编写有哪几种方式" aria-label="Permalink to &quot;[10、Mapper编写有哪几种方式？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MyBatis/MyBatis最新2021年面试题，高级面试题及附答案解析.md#10mapper编写有哪几种方式)&quot;">​</a></h3><p>第一种：接口实现类继承SqlSessionDaoSupport：使用此种方法需要编写mapper接口，mapper接口实现类、mapper.xml文件。</p><p><strong>1、</strong> 在sqlMapConfig.xml中配置mapper.xml的位置</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">mappers</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">mapper</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">resource</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">mapper.xml文件的地址</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> /&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">mapper</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">resource</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">mapper.xml文件的地址</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> /&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">mappers</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resource</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;mapper.xml文件的地址&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resource</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;mapper.xml文件的地址&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><strong>1、</strong> 定义mapper接口</p><p><strong>3、</strong> 实现类集成SqlSessionDaoSupport</p><p>mapper方法中可以this.getSqlSession()进行数据增删改查。</p><p><strong>4、</strong> spring 配置</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">bean</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">id</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">class</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">mapper接口的实现</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">property</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">name</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sqlSessionFactory</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">ref</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sqlSessionFactory</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;&lt;/</span><span style="color:#F286C4;">property</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">bean</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">bean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;mapper接口的实现&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sqlSessionFactory&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sqlSessionFactory&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">property</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">bean</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>第二种：使用<code>org.mybatis.spring.mapper.MapperFactoryBean</code>：</p><p><strong>1、</strong> 在sqlMapConfig.xml中配置mapper.xml的位置，如果mapper.xml和mappre接口的名称相同且在同一个目录，这里可以不用配置</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">mappers</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">mapper</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">resource</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">mapper.xml文件的地址</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> /&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">mapper</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">resource</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">mapper.xml文件的地址</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> /&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">mappers</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resource</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;mapper.xml文件的地址&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">mapper</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resource</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;mapper.xml文件的地址&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">mappers</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><strong>2、</strong> 定义mapper接口：</p><p><strong>1、</strong> mapper.xml中的namespace为mapper接口的地址</p><p><strong>2、</strong> mapper接口中的方法名和mapper.xml中的定义的statement的id保持一致</p><p><strong>3、</strong> Spring中定义</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">bean</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">id</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">class</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">org.mybatis.spring.mapper.MapperFactoryBean</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">property</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">name</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">mapperInterface</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">   </span><span style="color:#62E884;font-style:italic;">value</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">mapper接口地址</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> /&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">property</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">name</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sqlSessionFactory</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">ref</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sqlSessionFactory</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> /&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">bean</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">bean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;org.mybatis.spring.mapper.MapperFactoryBean&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;mapperInterface&quot;</span><span style="color:#24292E;">   </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;mapper接口地址&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sqlSessionFactory&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sqlSessionFactory&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">bean</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>第三种：使用mapper扫描器：</p><p><strong>1、</strong> mapper.xml文件编写：</p><p>mapper.xml中的namespace为mapper接口的地址；</p><p>mapper接口中的方法名和mapper.xml中的定义的statement的id保持一致；</p><p>如果将mapper.xml和mapper接口的名称保持一致则不用在sqlMapConfig.xml中进行配置。</p><p><strong>2、</strong> 定义mapper接口：</p><p>注意mapper.xml的文件名和mapper的接口名称保持一致，且放在同一个目录</p><p><strong>3、</strong> 配置mapper扫描器：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">bean</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">class</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">org.mybatis.spring.mapper.MapperScannerConfigurer</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">property</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">name</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">basePackage</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">value</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">mapper接口包地址</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;&lt;/</span><span style="color:#F286C4;">property</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">property</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">name</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sqlSessionFactoryBeanName</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">value</span><span style="color:#F6F6F4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sqlSessionFactory</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">/&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">bean</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">bean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;basePackage&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;mapper接口包地址&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">property</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sqlSessionFactoryBeanName&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sqlSessionFactory&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">bean</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><strong>4、</strong> 使用扫描器后从spring容器中获取mapper的实现对象。</p><h3 id="_11、mybatis框架的缺点" tabindex="-1">11、MyBatis框架的缺点： <a class="header-anchor" href="#_11、mybatis框架的缺点" aria-label="Permalink to &quot;11、MyBatis框架的缺点：&quot;">​</a></h3><h3 id="_12、mybatis-里面的动态-sql-是怎么设定的-用什么语法" tabindex="-1">12、MyBatis 里面的动态 Sql 是怎么设定的?用什么语法? <a class="header-anchor" href="#_12、mybatis-里面的动态-sql-是怎么设定的-用什么语法" aria-label="Permalink to &quot;12、MyBatis 里面的动态 Sql 是怎么设定的?用什么语法?&quot;">​</a></h3><h3 id="_13、简述mybatis的插件运行原理-以及如何编写一个插件。" tabindex="-1">13、简述Mybatis的插件运行原理，以及如何编写一个插件。 <a class="header-anchor" href="#_13、简述mybatis的插件运行原理-以及如何编写一个插件。" aria-label="Permalink to &quot;13、简述Mybatis的插件运行原理，以及如何编写一个插件。&quot;">​</a></h3><h3 id="_14、mybatis动态sql" tabindex="-1">14、Mybatis动态SQL？ <a class="header-anchor" href="#_14、mybatis动态sql" aria-label="Permalink to &quot;14、Mybatis动态SQL？&quot;">​</a></h3><h3 id="_15、使用mybatis的mapper接口调用时有哪些要求" tabindex="-1">15、使用MyBatis的mapper接口调用时有哪些要求？ <a class="header-anchor" href="#_15、使用mybatis的mapper接口调用时有哪些要求" aria-label="Permalink to &quot;15、使用MyBatis的mapper接口调用时有哪些要求？&quot;">​</a></h3><h3 id="_16、mybatis-是如何进行分页的-分页插件的原理是什么" tabindex="-1">16、Mybatis 是如何进行分页的？分页插件的原理是什么？ <a class="header-anchor" href="#_16、mybatis-是如何进行分页的-分页插件的原理是什么" aria-label="Permalink to &quot;16、Mybatis 是如何进行分页的？分页插件的原理是什么？&quot;">​</a></h3><h3 id="_17、如何获取自动生成的-主-键值" tabindex="-1">17、如何获取自动生成的(主)键值？ <a class="header-anchor" href="#_17、如何获取自动生成的-主-键值" aria-label="Permalink to &quot;17、如何获取自动生成的(主)键值？&quot;">​</a></h3><h3 id="_18、mybatis-能执行一对一、一对多的关联查询吗-都有哪些实现方式-以及它们之间的区" tabindex="-1">18、Mybatis 能执行一对一、一对多的关联查询吗？都有哪些实现方式，以及它们之间的区 <a class="header-anchor" href="#_18、mybatis-能执行一对一、一对多的关联查询吗-都有哪些实现方式-以及它们之间的区" aria-label="Permalink to &quot;18、Mybatis 能执行一对一、一对多的关联查询吗？都有哪些实现方式，以及它们之间的区&quot;">​</a></h3><h3 id="_19、简述-mybatis-的插件运行原理-以及如何编写一个插件" tabindex="-1">19、简述 Mybatis 的插件运行原理，以及如何编写一个插件？ <a class="header-anchor" href="#_19、简述-mybatis-的插件运行原理-以及如何编写一个插件" aria-label="Permalink to &quot;19、简述 Mybatis 的插件运行原理，以及如何编写一个插件？&quot;">​</a></h3><h3 id="_20、模糊查询like语句该怎么写" tabindex="-1">20、模糊查询like语句该怎么写? <a class="header-anchor" href="#_20、模糊查询like语句该怎么写" aria-label="Permalink to &quot;20、模糊查询like语句该怎么写?&quot;">​</a></h3><h3 id="_21、mybatis是如何将sql执行结果封装为目标对象并返回的-都有哪些映射形式" tabindex="-1">21、Mybatis是如何将sql执行结果封装为目标对象并返回的？都有哪些映射形式？ <a class="header-anchor" href="#_21、mybatis是如何将sql执行结果封装为目标对象并返回的-都有哪些映射形式" aria-label="Permalink to &quot;21、Mybatis是如何将sql执行结果封装为目标对象并返回的？都有哪些映射形式？&quot;">​</a></h3><h3 id="_22、mybatis-中如何指定使用哪一种-executor-执行器" tabindex="-1">22、Mybatis 中如何指定使用哪一种 Executor 执行器？ <a class="header-anchor" href="#_22、mybatis-中如何指定使用哪一种-executor-执行器" aria-label="Permalink to &quot;22、Mybatis 中如何指定使用哪一种 Executor 执行器？&quot;">​</a></h3><h3 id="_23、jdbc编程有哪些不足之处-mybatis是如何解决的" tabindex="-1">23、JDBC编程有哪些不足之处，MyBatis是如何解决的？ <a class="header-anchor" href="#_23、jdbc编程有哪些不足之处-mybatis是如何解决的" aria-label="Permalink to &quot;23、JDBC编程有哪些不足之处，MyBatis是如何解决的？&quot;">​</a></h3><h3 id="_24、mybatis优缺点" tabindex="-1">24、Mybatis优缺点 <a class="header-anchor" href="#_24、mybatis优缺点" aria-label="Permalink to &quot;24、Mybatis优缺点&quot;">​</a></h3><h3 id="_25、-里面的名称对应的是map里面的key名称。" tabindex="-1">25、{}里面的名称对应的是Map里面的key名称。 <a class="header-anchor" href="#_25、-里面的名称对应的是map里面的key名称。" aria-label="Permalink to &quot;25、{}里面的名称对应的是Map里面的key名称。&quot;">​</a></h3>`,70),p=[t];function n(r,c,E,y,i,F){return a(),o("div",null,p)}const d=s(l,[["render",n]]);export{u as __pageData,d as default};
