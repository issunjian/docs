import{_ as o,o as r,c as a,V as e}from"./chunks/framework.c6d8cbec.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/spring/spring-14.md","filePath":"interview/backend/spring/spring-14.md"}'),t={name:"interview/backend/spring/spring-14.md"},n=e(`<h3 id="_1、springboot-的配置文件有哪几种格式-它们有什么区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#1springboot-%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%E6%A0%BC%E5%BC%8F%E5%AE%83%E4%BB%AC%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">1、SpringBoot 的配置文件有哪几种格式？它们有什么区别？</a> <a class="header-anchor" href="#_1、springboot-的配置文件有哪几种格式-它们有什么区别" aria-label="Permalink to &quot;[1、SpringBoot 的配置文件有哪几种格式？它们有什么区别？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新2021年面试题附答案解析，大汇总.md#1springboot-的配置文件有哪几种格式它们有什么区别)&quot;">​</a></h3><p>.properties 和 .yml，它们的区别主要是书写格式不同。</p><p><strong>1、</strong> properties</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">app.user.name = javastack</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">app.user.name = javastack</span></span></code></pre></div><p><strong>2、</strong> yml</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">app:</span></span>
<span class="line"><span style="color:#f6f6f4;"> user:</span></span>
<span class="line"><span style="color:#f6f6f4;"> name: javastack</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">app:</span></span>
<span class="line"><span style="color:#24292e;"> user:</span></span>
<span class="line"><span style="color:#24292e;"> name: javastack</span></span></code></pre></div><p>另外，.yml 格式不支持 <a href="/docs/PropertySource.html">@PropertySource </a> 注解导入配置。</p><h3 id="_2、如何重新加载-springboot上的更改-而无需重新启动服务器" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#2%E5%A6%82%E4%BD%95%E9%87%8D%E6%96%B0%E5%8A%A0%E8%BD%BD-springboot%E4%B8%8A%E7%9A%84%E6%9B%B4%E6%94%B9%E8%80%8C%E6%97%A0%E9%9C%80%E9%87%8D%E6%96%B0%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noreferrer">2、如何重新加载 SpringBoot上的更改，而无需重新启动服务器？</a> <a class="header-anchor" href="#_2、如何重新加载-springboot上的更改-而无需重新启动服务器" aria-label="Permalink to &quot;[2、如何重新加载 SpringBoot上的更改，而无需重新启动服务器？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新2021年面试题附答案解析，大汇总.md#2如何重新加载-springboot上的更改而无需重新启动服务器)&quot;">​</a></h3><p>使用DEV工具来实现。 通过这种依赖关系，可以节省任何更改，嵌入式 tomcat将重新启动。 使用SpringBoot有一个开发工具<code>Dev Tools</code>模块，可以重新加载 SpringBoot上的更改，而无需重新启动服务器。消除每次手动部署更改的需要。 SpringBoot在发布它的第一个版本时没有这个功能。该模块将在生产环境中被禁用。它还提供H2数据库控制台以更好地测试应用程序。</p><h3 id="_3、创建一个-springboot-project-的最简单的方法是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#3%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA-springboot-project-%E7%9A%84%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%96%B9%E6%B3%95%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">3、创建一个 SpringBoot Project 的最简单的方法是什么？</a> <a class="header-anchor" href="#_3、创建一个-springboot-project-的最简单的方法是什么" aria-label="Permalink to &quot;[3、创建一个 SpringBoot Project 的最简单的方法是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新2021年面试题附答案解析，大汇总.md#3创建一个-springboot-project-的最简单的方法是什么)&quot;">​</a></h3><p>Spring Initializr是启动 SpringBoot Projects 的一个很好的工具。</p><p><strong>我们需要做一下几步：</strong></p><p><strong>1、</strong> 登录 Spring Initializr，按照以下方式进行选择：</p><p><strong>2、</strong> 选择 com.in28minutes.SpringBoot 为组</p><p><strong>3、</strong> 选择 studet-services 为组件</p><p><strong>4、</strong> 选择下面的依赖项</p><p>Web</p><p>Actuator</p><p>DevTools</p><p><strong>5、</strong> 点击生 GenerateProject</p><p><strong>6、</strong> 将项目导入 Eclipse。文件 - 导入 - 现有的 Maven 项目</p><h3 id="_4、springboot-2、x-有什么新特性-与-1、x-有什么区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#4springboot-2x-%E6%9C%89%E4%BB%80%E4%B9%88%E6%96%B0%E7%89%B9%E6%80%A7%E4%B8%8E-1x-%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">4、SpringBoot 2、X 有什么新特性？与 1、X 有什么区别？</a> <a class="header-anchor" href="#_4、springboot-2、x-有什么新特性-与-1、x-有什么区别" aria-label="Permalink to &quot;[4、SpringBoot 2、X 有什么新特性？与 1、X 有什么区别？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新2021年面试题附答案解析，大汇总.md#4springboot-2x-有什么新特性与-1x-有什么区别)&quot;">​</a></h3><p><strong>1、</strong> 配置变更</p><p><strong>2、</strong> JDK 版本升级</p><p><strong>3、</strong> 第三方类库升级</p><p><strong>4、</strong> 响应式 Spring 编程支持</p><p><strong>5、</strong> HTTP/2 支持</p><p><strong>6、</strong> 配置属性绑定</p><p><strong>7、</strong> 更多改进与加强</p><h3 id="_5、为什么要选择微服务架构" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#5%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%80%89%E6%8B%A9%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84" target="_blank" rel="noreferrer">5、为什么要选择微服务架构？</a> <a class="header-anchor" href="#_5、为什么要选择微服务架构" aria-label="Permalink to &quot;[5、为什么要选择微服务架构？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新2021年面试题附答案解析，大汇总.md#5为什么要选择微服务架构)&quot;">​</a></h3><p>这是一个非常常见的微服务面试问题，你应该准备好了！微服务架构提供了许多优点。这里有几个：</p><p><strong>1、</strong> 微服务可以轻松适应其他框架或技术。</p><p><strong>2、</strong> 单个进程的失败不会影响整个系统。</p><p><strong>3、</strong> 为大企业和小型团队提供支持。</p><p><strong>4、</strong> 可以在相对较短的时间内独立部署。</p><h3 id="_6、什么是-csrf-攻击" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#6%E4%BB%80%E4%B9%88%E6%98%AF-csrf-%E6%94%BB%E5%87%BB" target="_blank" rel="noreferrer">6、什么是 CSRF 攻击？</a> <a class="header-anchor" href="#_6、什么是-csrf-攻击" aria-label="Permalink to &quot;[6、什么是 CSRF 攻击？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新2021年面试题附答案解析，大汇总.md#6什么是-csrf-攻击)&quot;">​</a></h3><p>CSRF 代表跨站请求伪造。这是一种攻击，迫使最终用户在当前通过身份验证的Web 应用程序上执行不需要的操作。CSRF 攻击专门针对状态改变请求，而不是数据窃取，因为攻击者无法查看对伪造请求的响应。</p><h3 id="_7、什么是springboot" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#7%E4%BB%80%E4%B9%88%E6%98%AFspringboot" target="_blank" rel="noreferrer">7、什么是SpringBoot？</a> <a class="header-anchor" href="#_7、什么是springboot" aria-label="Permalink to &quot;[7、什么是SpringBoot？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新2021年面试题附答案解析，大汇总.md#7什么是springboot)&quot;">​</a></h3><p>多年来，随着新功能的增加，spring变得越来越复杂。只需访问<a href="https://spring.io/projects" target="_blank" rel="noreferrer">https://spring.io/projects</a> 页面，我们就会看到可以在我们的应用程序中使用的所有Spring项目的不同功能。如果必须启动一个新的Spring项目，我们必须添加构建路径或添加Maven依赖关系，配置应用程序服务器，添加spring配置。因此，开始一个新的spring项目需要很多努力，因为我们现在必须从头开始做所有事情。</p><p>SpringBoot是解决这个问题的方法。SpringBoot已经建立在现有spring框架之上。使用spring启动，我们避免了之前我们必须做的所有样板代码和配置。因此，SpringBoot可以帮助我们以最少的工作量，更加健壮地使用现有的Spring功能。</p><h3 id="_8、springboot-的核心注解是哪个-它主要由哪几个注解组成的" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#8springboot-%E7%9A%84%E6%A0%B8%E5%BF%83%E6%B3%A8%E8%A7%A3%E6%98%AF%E5%93%AA%E4%B8%AA%E5%AE%83%E4%B8%BB%E8%A6%81%E7%94%B1%E5%93%AA%E5%87%A0%E4%B8%AA%E6%B3%A8%E8%A7%A3%E7%BB%84%E6%88%90%E7%9A%84" target="_blank" rel="noreferrer">8、SpringBoot 的核心注解是哪个？它主要由哪几个注解组成的？</a> <a class="header-anchor" href="#_8、springboot-的核心注解是哪个-它主要由哪几个注解组成的" aria-label="Permalink to &quot;[8、SpringBoot 的核心注解是哪个？它主要由哪几个注解组成的？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新2021年面试题附答案解析，大汇总.md#8springboot-的核心注解是哪个它主要由哪几个注解组成的)&quot;">​</a></h3><p>启动类上面的注解是@SpringBootApplication，它也是 SpringBoot 的核心注解，主要组合包含了以下 3 个注解：</p><p>@SpringBootConfiguration：组合了 <a href="/docs/Configuration.html">@Configuration </a> 注解，实现配置文件的功能。</p><p>@EnableAutoConfiguration：打开自动配置的功能，也可以关闭某个自动配置的选项，如关闭数据源自动配置功能：</p><p>[@SpringBootApplication(exclude ](/SpringBootApplication(exclude ) = { DataSourceAutoConfiguration.class })。</p><p>@ComponentScan：Spring组件扫描。</p><h3 id="_9、为什么我们需要微服务容器" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#9%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8" target="_blank" rel="noreferrer">9、为什么我们需要微服务容器？</a> <a class="header-anchor" href="#_9、为什么我们需要微服务容器" aria-label="Permalink to &quot;[9、为什么我们需要微服务容器？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新2021年面试题附答案解析，大汇总.md#9为什么我们需要微服务容器)&quot;">​</a></h3><p>要管理基于微服务的应用程序，容器是最简单的选择。它帮助用户单独部署和开发。您还可以使用Docker将微服务封装到容器的镜像中。没有任何额外的依赖或工作，微服务可以使用这些元素。</p><h3 id="_10、微服务之间是如何独立通讯的" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%A4%A7%E6%B1%87%E6%80%BB.md#10%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E6%98%AF%E5%A6%82%E4%BD%95%E7%8B%AC%E7%AB%8B%E9%80%9A%E8%AE%AF%E7%9A%84" target="_blank" rel="noreferrer">10、微服务之间是如何独立通讯的</a> <a class="header-anchor" href="#_10、微服务之间是如何独立通讯的" aria-label="Permalink to &quot;[10、微服务之间是如何独立通讯的](https://gitee.com/souyunku/DevBooks/blob/master/docs/Spring/Spring最新2021年面试题附答案解析，大汇总.md#10微服务之间是如何独立通讯的)&quot;">​</a></h3><p><strong>1、</strong> Dubbo 使用的是 RPC 通信，二进制传输，占用带宽小；</p><p><strong>2、</strong> Spring Cloud 使用的是 HTTP RESTFul 方式。</p><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2020/5/2/01/44/45_2.png#alt=45%5C_2.png" alt=""></p><h3 id="_11、springboot-实现热部署有哪几种方式" tabindex="-1">11、SpringBoot 实现热部署有哪几种方式？ <a class="header-anchor" href="#_11、springboot-实现热部署有哪几种方式" aria-label="Permalink to &quot;11、SpringBoot 实现热部署有哪几种方式？&quot;">​</a></h3><h3 id="_12、spring-mvc-框架有什么用" tabindex="-1">12、Spring MVC 框架有什么用？ <a class="header-anchor" href="#_12、spring-mvc-框架有什么用" aria-label="Permalink to &quot;12、Spring MVC 框架有什么用？&quot;">​</a></h3><h3 id="_13、微服务架构有哪些优势" tabindex="-1">13、微服务架构有哪些优势？ <a class="header-anchor" href="#_13、微服务架构有哪些优势" aria-label="Permalink to &quot;13、微服务架构有哪些优势？&quot;">​</a></h3><h3 id="_14、springboot-有哪几种读取配置的方式" tabindex="-1">14、SpringBoot 有哪几种读取配置的方式？ <a class="header-anchor" href="#_14、springboot-有哪几种读取配置的方式" aria-label="Permalink to &quot;14、SpringBoot 有哪几种读取配置的方式？&quot;">​</a></h3><h3 id="_15、列举-spring-framework-的优点。" tabindex="-1">15、列举 Spring Framework 的优点。 <a class="header-anchor" href="#_15、列举-spring-framework-的优点。" aria-label="Permalink to &quot;15、列举 Spring Framework 的优点。&quot;">​</a></h3><h3 id="_16、运行-springboot-有哪几种方式" tabindex="-1">16、运行 SpringBoot 有哪几种方式？ <a class="header-anchor" href="#_16、运行-springboot-有哪几种方式" aria-label="Permalink to &quot;16、运行 SpringBoot 有哪几种方式？&quot;">​</a></h3><h3 id="_17、spring-cloud-bus" tabindex="-1">17、Spring Cloud Bus <a class="header-anchor" href="#_17、spring-cloud-bus" aria-label="Permalink to &quot;17、Spring Cloud Bus&quot;">​</a></h3><h3 id="_18、spring-boot-starter-parent-有什么用" tabindex="-1">18、spring-boot-starter-parent 有什么用 ? <a class="header-anchor" href="#_18、spring-boot-starter-parent-有什么用" aria-label="Permalink to &quot;18、spring-boot-starter-parent 有什么用 ?&quot;">​</a></h3><h3 id="_19、解释不同方式的自动装配" tabindex="-1">19、解释不同方式的自动装配 <a class="header-anchor" href="#_19、解释不同方式的自动装配" aria-label="Permalink to &quot;19、解释不同方式的自动装配&quot;">​</a></h3><h3 id="_20、什么是耦合" tabindex="-1">20、什么是耦合？ <a class="header-anchor" href="#_20、什么是耦合" aria-label="Permalink to &quot;20、什么是耦合？&quot;">​</a></h3><h3 id="_21、为什么人们会犹豫使用微服务" tabindex="-1">21、为什么人们会犹豫使用微服务？ <a class="header-anchor" href="#_21、为什么人们会犹豫使用微服务" aria-label="Permalink to &quot;21、为什么人们会犹豫使用微服务？&quot;">​</a></h3><h3 id="_22、运行-springboot-有哪几种方式" tabindex="-1">22、运行 SpringBoot 有哪几种方式？ <a class="header-anchor" href="#_22、运行-springboot-有哪几种方式" aria-label="Permalink to &quot;22、运行 SpringBoot 有哪几种方式？&quot;">​</a></h3><h3 id="_23、什么是无所不在的语言" tabindex="-1">23、什么是无所不在的语言？ <a class="header-anchor" href="#_23、什么是无所不在的语言" aria-label="Permalink to &quot;23、什么是无所不在的语言？&quot;">​</a></h3><h3 id="_24、有哪些不同类型的ioc-依赖注入-方式" tabindex="-1">24、有哪些不同类型的IOC（依赖注入）方式？ <a class="header-anchor" href="#_24、有哪些不同类型的ioc-依赖注入-方式" aria-label="Permalink to &quot;24、有哪些不同类型的IOC（依赖注入）方式？&quot;">​</a></h3><h3 id="_25、springcloud-config-可以实现实时刷新吗" tabindex="-1">25、SpringCloud Config 可以实现实时刷新吗？ <a class="header-anchor" href="#_25、springcloud-config-可以实现实时刷新吗" aria-label="Permalink to &quot;25、SpringCloud Config 可以实现实时刷新吗？&quot;">​</a></h3><h3 id="_26、如何在自定义端口上运行-springboot-应用程序" tabindex="-1">26、如何在自定义端口上运行 SpringBoot 应用程序？ <a class="header-anchor" href="#_26、如何在自定义端口上运行-springboot-应用程序" aria-label="Permalink to &quot;26、如何在自定义端口上运行 SpringBoot 应用程序？&quot;">​</a></h3><h3 id="_27、为什么我们需要-spring-boot-maven-plugin" tabindex="-1">27、为什么我们需要 spring-boot-maven-plugin? <a class="header-anchor" href="#_27、为什么我们需要-spring-boot-maven-plugin" aria-label="Permalink to &quot;27、为什么我们需要 spring-boot-maven-plugin?&quot;">​</a></h3><h3 id="_28、什么是javaconfig" tabindex="-1">28、什么是JavaConfig？ <a class="header-anchor" href="#_28、什么是javaconfig" aria-label="Permalink to &quot;28、什么是JavaConfig？&quot;">​</a></h3><h3 id="_29、列举-spring-framework-的优点。" tabindex="-1">29、列举 Spring Framework 的优点。 <a class="header-anchor" href="#_29、列举-spring-framework-的优点。" aria-label="Permalink to &quot;29、列举 Spring Framework 的优点。&quot;">​</a></h3><h3 id="_30、负载平衡的意义什么" tabindex="-1">30、负载平衡的意义什么？ <a class="header-anchor" href="#_30、负载平衡的意义什么" aria-label="Permalink to &quot;30、负载平衡的意义什么？&quot;">​</a></h3><h3 id="_31、spring-cloud-断路器的作用是什么" tabindex="-1">31、spring cloud 断路器的作用是什么？ <a class="header-anchor" href="#_31、spring-cloud-断路器的作用是什么" aria-label="Permalink to &quot;31、spring cloud 断路器的作用是什么？&quot;">​</a></h3>`,73),s=[n];function i(p,E,g,l,c,B){return r(),a("div",null,s)}const u=o(t,[["render",i]]);export{d as __pageData,u as default};
