import{_ as s,o as n,c as a,V as l}from"./chunks/framework.c6d8cbec.js";const p="/docs/assets/PriorityQueue-8dca2f55-a7c7-49e1-95a5-df1a34f2aef5.f0e9c0cf.png",o="/docs/assets/PriorityQueue-0fb89aa7-c8fa-4fad-adbb-40c61c3bb0e9.773bf430.png",e="/docs/assets/PriorityQueue-5059f157-845e-4d1c-b993-5cfe539d5607.c4afc3bc.png",t="/docs/assets/PriorityQueue-e25ba931-2e6f-4c17-84b8-9b959733d541.8b0af4f7.png",c="/docs/assets/PriorityQueue-ed0d08d3-b38e-44a1-a710-ee7a01afda62.4bb13f8f.png",g=JSON.parse('{"title":"Java 优先级队列PriorityQueue详解：从源码分析到实践应用","description":"本文详细解析了 Java 优先级队列 PriorityQueue 的实现原理、功能特点以及源码，为您提供了 PriorityQueue 的实际应用示例和性能优化建议。阅读本文，将帮助您更深入地理解 PriorityQueue 在 Java 编程中的应用，从而在实际编程中充分发挥其优势。","frontmatter":{"title":"Java 优先级队列PriorityQueue详解：从源码分析到实践应用","shortTitle":"优先级队列PriorityQueue详解","category":["Java核心"],"tag":["集合框架（容器）"],"description":"本文详细解析了 Java 优先级队列 PriorityQueue 的实现原理、功能特点以及源码，为您提供了 PriorityQueue 的实际应用示例和性能优化建议。阅读本文，将帮助您更深入地理解 PriorityQueue 在 Java 编程中的应用，从而在实际编程中充分发挥其优势。","head":[["meta",{"name":"keywords","content":"Java,优先级队列,PriorityQueue,java 优先级队列,java PriorityQueue, 源码分析, 实现原理"}]]},"headers":[],"relativePath":"backend/tobetter/collection/PriorityQueue.md","filePath":"backend/tobetter/collection/PriorityQueue.md"}'),r={name:"backend/tobetter/collection/PriorityQueue.md"},y=l("",76),F=[y];function i(E,u,d,f,C,h){return n(),a("div",null,F)}const v=s(r,[["render",i]]);export{g as __pageData,v as default};
