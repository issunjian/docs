import{_ as s,o as n,c as a,V as l}from"./chunks/framework.c6d8cbec.js";const p="/docs/assets/1661129154598.5dcb8aad.png",o="/docs/assets/1661131910804.c71bfb2c.png",e="/docs/assets/1661132063147.c476021b.png",t="/docs/assets/1661132132708.7da1a106.png",c="/docs/assets/1661132888600.cad88ca0.png",r="/docs/assets/1661132851560.29f43816.png",y="/docs/assets/1661133510341.e1ec0fb4.png",F="/docs/assets/1661134120042.b18fcf88.png",i="/docs/assets/1661135813464.57bb3f8b.png",E="/docs/assets/1661136001680.85c728a2.png",u="/docs/assets/1661136414587.cd76ae44.png",d="/docs/assets/1661137599188.77b7bb4a.png",C="/docs/assets/1661138616082.a77d0fb5.png",D="/docs/assets/1661139301013.5f2dcfd7.png",h="/docs/assets/1661139453144.d0f5c3c0.png",g="/docs/assets/1661141338265.44e2ee59.png",A="/docs/assets/1661141996444.d25b0454.png",m="/docs/assets/1661141867092.d9a3d230.png",v="/docs/assets/1661143715539.92b72d4c.png",P=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"others/backend/javase/part03-程序流程控制.md","filePath":"others/backend/javase/part03-程序流程控制.md"}'),f={name:"others/backend/javase/part03-程序流程控制.md"},b=l('<h2 id="part03——程序流程控制" tabindex="-1">part03——程序流程控制 <a class="header-anchor" href="#part03——程序流程控制" aria-label="Permalink to &quot;part03——程序流程控制&quot;">​</a></h2><p>目标</p><ol><li>程序流程控制 🍐 <ul><li>顺序结构</li><li>分支结构</li><li>循环结构</li></ul></li><li>生成随机数 ✏️</li></ol><p>流程控制，说白了就是控制程序的执行顺序。</p><img src="'+p+'"><h2 id="一、分支结构-🚩" tabindex="-1">一、分支结构 🚩 <a class="header-anchor" href="#一、分支结构-🚩" aria-label="Permalink to &quot;一、分支结构 🚩&quot;">​</a></h2><h3 id="_1-1-if分支" tabindex="-1">1.1 if分支 <a class="header-anchor" href="#_1-1-if分支" aria-label="Permalink to &quot;1.1 if分支&quot;">​</a></h3><p>if分支</p><p><strong>if的作用</strong>，是用于对<strong>条件进行判断</strong>，判断的结果<strong>只可能有两个值</strong>true或者false，然后根据条件判断的结果来决定<strong>执行那段代码</strong>。</p><p>点击查看if分支的应用场景</p><ul><li>比如，在<strong>火车站</strong>、<strong>地铁站</strong>等公共场所，会对过往的旅客测体温。如果体温在37度以内，就属于正常的；如果体温在37读以上，测体温的装置就会报警。</li><li>再比如，你在使用微信付钱时，微信内部的程序会先判断你的<strong>余额是否足够</strong>，如果足够就可以支付成功；<strong>如果余额不足</strong>，就会提示支付失败。</li></ul><p><strong>if分支的格式</strong></p><blockquote><p>if分支格式分为3种，如下</p></blockquote><p><strong>if 第一种形式</strong> (特点：只有如果)</p><p>if 第一种形式的代码格式，和执行流程如下图所示</p><img src="'+o+`"><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> 第一种形式执行流程如下：</span></span>
<span class="line"><span style="color:#F6F6F4;">    如果 条件表达式 为true，就执行下面的语句体</span></span>
<span class="line"><span style="color:#F6F6F4;">    如果 条件表达式 为false,就不执行</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> 第一种形式执行流程如下：</span></span>
<span class="line"><span style="color:#24292E;">    如果 条件表达式 为true，就执行下面的语句体</span></span>
<span class="line"><span style="color:#24292E;">    如果 条件表达式 为false,就不执行</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 需求：测量用户体温，发现体温高于37度就报警。</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> t </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">36.9</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(t </span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">37</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">这个人的温度异常，把他赶紧带走~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 需求：测量用户体温，发现体温高于37度就报警。</span></span>
<span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;"> t </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">36.9</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(t </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">37</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;这个人的温度异常，把他赶紧带走~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>if 第二种形式</strong> (特点：如果，否则)</p><p>if 第二种形式的代码格式，和执行流程如下图所示</p><img src="`+e+`"><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> 第二种形式执行流程如下：</span></span>
<span class="line"><span style="color:#F6F6F4;">    如果 条件表达式 为true,就执行下面的语句体1</span></span>
<span class="line"><span style="color:#F6F6F4;">    如果 条件表达式 为false,就执行else下面的语句体2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> 第二种形式执行流程如下：</span></span>
<span class="line"><span style="color:#24292E;">    如果 条件表达式 为true,就执行下面的语句体1</span></span>
<span class="line"><span style="color:#24292E;">    如果 条件表达式 为false,就执行else下面的语句体2</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 需求2：发红包，你的钱包余额是99元，现在要发出90元</span></span>
<span class="line"><span style="color:#7B7F8B;">// 如果钱够触发发红包的动作，如果钱不够，则提示：余额不足。</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> money </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">19</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(money </span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">90</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">发红包成功了~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">余额不足~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 需求2：发红包，你的钱包余额是99元，现在要发出90元</span></span>
<span class="line"><span style="color:#6A737D;">// 如果钱够触发发红包的动作，如果钱不够，则提示：余额不足。</span></span>
<span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;"> money </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">19</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(money </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">90</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;发红包成功了~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;余额不足~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>if 第三种形式</strong></p><p>if 第三种形式的代码格式(特点：多个如果，一个否则)</p><img src="`+t+`"><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> 第三种形式执行流程如下：</span></span>
<span class="line"><span style="color:#F6F6F4;">    如果 条件表达式1 为true,就执行下面的代码1;</span></span>
<span class="line"><span style="color:#F6F6F4;">    如果 条件表达式1 为false，就继续判断条件表达式2;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    如果 条件表达式2 为true，就执行下面的语句体;</span></span>
<span class="line"><span style="color:#F6F6F4;">    如果 条件表达式2 为false，就继续判断条件语句体3;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    如果 条件表达式3 为true,就执行下面的语句体3</span></span>
<span class="line"><span style="color:#F6F6F4;">    如果 条件表达式3 为false,就继续判断后面的表达式;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    ....</span></span>
<span class="line"><span style="color:#F6F6F4;">    如果前面所有条件表达式判断都为false，就执行最后的else语句中的代码</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> 第三种形式执行流程如下：</span></span>
<span class="line"><span style="color:#24292E;">    如果 条件表达式1 为true,就执行下面的代码1;</span></span>
<span class="line"><span style="color:#24292E;">    如果 条件表达式1 为false，就继续判断条件表达式2;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    如果 条件表达式2 为true，就执行下面的语句体;</span></span>
<span class="line"><span style="color:#24292E;">    如果 条件表达式2 为false，就继续判断条件语句体3;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    如果 条件表达式3 为true,就执行下面的语句体3</span></span>
<span class="line"><span style="color:#24292E;">    如果 条件表达式3 为false,就继续判断后面的表达式;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    ....</span></span>
<span class="line"><span style="color:#24292E;">    如果前面所有条件表达式判断都为false，就执行最后的else语句中的代码</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 需求3：某个公司有一个绩效系统，根据员工的打分输出对应的绩效级别。[0,60) D  [60,80) C [80,90) B [90,100] A</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> score </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">298</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(score </span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> score </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">60</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您的绩效级别是： D</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(score </span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">60</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> score </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">80</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您的绩效级别是： C</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(score </span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">80</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> score </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">90</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您的绩效级别是： B</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(score </span><span style="color:#F286C4;">&gt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">90</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> score </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您的绩效级别是： A</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您录入的分数有毛病~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 需求3：某个公司有一个绩效系统，根据员工的打分输出对应的绩效级别。[0,60) D  [60,80) C [80,90) B [90,100] A</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> score </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">298</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(score </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> score </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您的绩效级别是： D&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(score </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> score </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您的绩效级别是： C&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(score </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">80</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> score </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">90</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您的绩效级别是： B&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(score </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">90</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> score </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您的绩效级别是： A&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您录入的分数有毛病~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>6. if 使用的几个常见问题</strong></p><ul><li>第1个问题：if的()后面不能写分号<code>;</code> 否则if下面的语句与if无关</li></ul><img src="`+c+'"><ul><li>第2个问题：if后面的大括号，如果只有一行代码，大括号可以省略初学者不建议省略</li></ul><img src="'+r+'"><p>if 分支小结</p><p>if分支有什么作用？举几个应用场景？</p><ul><li>if作用：if分支可以根据条件，选择执行某段程序</li><li>if应用场景 <ul><li>比如1：测量用户体温，发现体温高于37度就报警</li><li>比如2:发红包，你的钱包余额是99元，现在要发出90元</li><li>比如3:根据员工的绩效打分输出对应的绩效级别</li></ul></li></ul><p>if分支的格式有几种，执行流程是什么样的？</p><img src="'+y+'"><hr><h3 id="_1-2-switch分支" tabindex="-1">1.2 switch分支 <a class="header-anchor" href="#_1-2-switch分支" aria-label="Permalink to &quot;1.2 switch分支&quot;">​</a></h3><p>分支结构的第二种形式——switch分支。</p><blockquote><p>涉及单词： switch case default break</p></blockquote><p><strong>1. switch分支的执行流程</strong></p><p>switch 分支的作用，<strong>是通过比较值来决定执行哪条分支代码</strong>。</p><img src="'+F+`"><p>下面通过案例来演示一下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/*</span></span>
<span class="line"><span style="color:#7B7F8B;">需求：做个电子备忘录，在控制台分别输出周一到周五的工作安排</span></span>
<span class="line"><span style="color:#7B7F8B;">    周一：埋头苦干，解决bug</span></span>
<span class="line"><span style="color:#7B7F8B;">    周二：请求大牛程序员帮忙</span></span>
<span class="line"><span style="color:#7B7F8B;">    周三：今晚啤酒、龙虾、小烧烤</span></span>
<span class="line"><span style="color:#7B7F8B;">    周四：主动帮助新来的女程序解决bug</span></span>
<span class="line"><span style="color:#7B7F8B;">    周五：今晚吃鸡</span></span>
<span class="line"><span style="color:#7B7F8B;">    周六：与王婆介绍的小芳相亲</span></span>
<span class="line"><span style="color:#7B7F8B;">    周日：郁郁寡欢、准备上班。</span></span>
<span class="line"><span style="color:#7B7F8B;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">需求：做个电子备忘录，在控制台分别输出周一到周五的工作安排</span></span>
<span class="line"><span style="color:#6A737D;">    周一：埋头苦干，解决bug</span></span>
<span class="line"><span style="color:#6A737D;">    周二：请求大牛程序员帮忙</span></span>
<span class="line"><span style="color:#6A737D;">    周三：今晚啤酒、龙虾、小烧烤</span></span>
<span class="line"><span style="color:#6A737D;">    周四：主动帮助新来的女程序解决bug</span></span>
<span class="line"><span style="color:#6A737D;">    周五：今晚吃鸡</span></span>
<span class="line"><span style="color:#6A737D;">    周六：与王婆介绍的小芳相亲</span></span>
<span class="line"><span style="color:#6A737D;">    周日：郁郁寡欢、准备上班。</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;"> week </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">周三</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">switch</span><span style="color:#F6F6F4;"> (week){</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">case</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">周一</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">埋头苦干，解决bug</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">case</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">周二</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请求大牛程序员帮忙</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">case</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">周三</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">今晚啤酒、龙虾、小烧烤</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">case</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">周四</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">主动帮助新来的女程序解决bug</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">case</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">周五</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">今晚吃鸡</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">case</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">周六</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">与王婆介绍的小芳相亲</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">case</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">周日</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">郁郁寡欢、准备上班</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">default:</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您输入的星期信息不存在~~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">String week </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;周三&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (week){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;周一&quot;</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;埋头苦干，解决bug&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;周二&quot;</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请求大牛程序员帮忙&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;周三&quot;</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;今晚啤酒、龙虾、小烧烤&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;周四&quot;</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;主动帮助新来的女程序解决bug&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;周五&quot;</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;今晚吃鸡&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;周六&quot;</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;与王婆介绍的小芳相亲&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;周日&quot;</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;郁郁寡欢、准备上班&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">default:</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您输入的星期信息不存在~~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>2. if 、switch如何选择</strong></p><p>if 、switch如何选择</p><p>如果单从功能上来讲，if 分支 的功能是更加强大的，switch分支能做的事情if 分支都能做。但是具体用哪一种分支形式，也是有一些使用原则的</p><ul><li>如果是对一个范围 进行判断，建议使用if分支 结构</li><li>如果是与一个一个的值 比较的时候，建议使用switch 分支结构</li></ul><p>作业</p><p>🚩 1. 春天播种，夏天灌溉 秋天收获 冬天仓储 使用Switch case break 输出</p><p>🚩 2. 案例：双十一 满减活动：满1000 减少100 ； 满2000 减少150 ； 满3000 减少320 ； 满10000 减少1000 ；使用if 和else if else 输出活动情况。</p><h3 id="_1-3-switch-注意事项-⚠️" tabindex="-1">1.3 switch 注意事项 ⚠️ <a class="header-anchor" href="#_1-3-switch-注意事项-⚠️" aria-label="Permalink to &quot;1.3 switch 注意事项 ⚠️&quot;">​</a></h3><p>各位同学，接下来我们学习swtich的注意事项。同学们掌握这些注意事项之后，就可以避免入坑了，也可以应对一些面试笔试题。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> 1.表达式类型只能是byte、</span><span style="color:#97E1F1;font-style:italic;">short</span><span style="color:#F6F6F4;">、</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;">、</span><span style="color:#97E1F1;font-style:italic;">char</span></span>
<span class="line"><span style="color:#F6F6F4;">	JDK5开始支持枚举，</span><span style="color:#97E1F1;font-style:italic;">JDK7开始支持String</span></span>
<span class="line"><span style="color:#F6F6F4;">	不支持double、</span><span style="color:#97E1F1;font-style:italic;">float</span><span style="color:#F6F6F4;">、</span><span style="color:#97E1F1;font-style:italic;">double</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> 2.case给出的值不允许重复，且只能是字面量，不能是变量。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;"> 3.正常使用switch的时候，不要忘记写break，否则会出现穿透现象。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 1.表达式类型只能是byte、</span><span style="color:#D73A49;">short</span><span style="color:#24292E;">、</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">、</span><span style="color:#D73A49;">char</span></span>
<span class="line"><span style="color:#24292E;">	JDK5开始支持枚举，JDK7开始支持String</span></span>
<span class="line"><span style="color:#24292E;">	不支持double、</span><span style="color:#D73A49;">float</span><span style="color:#24292E;">、</span><span style="color:#D73A49;">double</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 2.case给出的值不允许重复，且只能是字面量，不能是变量。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 3.正常使用switch的时候，不要忘记写break，否则会出现穿透现象。</span></span></code></pre></div><p><strong>1. 演示switch语句匹配的数据类型</strong></p><p>各位同学，如果下图所示，可以自己分别用变量a、b放在switch语句中匹配试一试，如果遇到不支持的写法，IDEA会报错的。</p><img src="`+i+'"><p><strong>2. 演示case后面的值，只能是字面量不能是变量</strong></p><p>各位同学，也可以自己试试，下图箭头指向的位置只能写字面量，不能写变量</p><img src="'+E+'"><p><strong>3. 演示case穿透现象</strong></p><p>当switch语句中没有遇到break，就会直接穿透到下一个case语句执行，直到遇到break为止。</p><p>这种语法设计也是有它的用处的，当多个case语句想要执行同一段代码时，可以利用case穿透现象，提高代码复用性。</p><p>比如：我们下面程序中，想要让周二、周三、周四，都请大牛程序员来写代码。</p><img src="'+u+`"><h2 id="二、循环结构-🚩" tabindex="-1">二、循环结构 🚩 <a class="header-anchor" href="#二、循环结构-🚩" aria-label="Permalink to &quot;二、循环结构 🚩&quot;">​</a></h2><p>循环结构可以控制一段代码重复执行</p><p>循环结构有for循环、while循环、do-while循环。</p><h3 id="_1️⃣-2-1-for循环——格式和流程" tabindex="-1">1️⃣ 2.1 for循环——格式和流程 <a class="header-anchor" href="#_1️⃣-2-1-for循环——格式和流程" aria-label="Permalink to &quot;1️⃣ 2.1 for循环——格式和流程&quot;">​</a></h3><p>这里首先来学习for循环，同学们重点掌握for循环的书写格式，并理解for循环的执行流程。</p><p><strong>1. for循环的格式和流程</strong></p><p>为了让大家更直观的理解for循环的执行流程，我们直接来看具体的案例代码。</p><p>比如：我们想要在控制台打印输出3个HelloWorld 🎯</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//需求：打印3行Hello World</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Hello World</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//需求：打印3行Hello World</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello World&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>如下图所示，是按照下面的① ② ③ ④， ② ③ ④... 的顺序来执行的；</p><p>当②条件为true时，再依次执行③④代码，然后回到②继续判断</p><p>当②条件为false时，就结束循环</p><img src="`+d+'"><p>具体执行的每一步可以看下面的图解</p><img src="'+C+`"><p>通过上面的案例演示，最后我们再总结一下for循环的格式</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//for循环格式：</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (初始化语句; 循环条件; 迭代语句) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    循环体语句(重复执行的代码);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">初始化语句：一般是定义一个变量，并给初始值</span></span>
<span class="line"><span style="color:#F6F6F4;">循环条件：一般是一个关系表达式，结果必须是true或者false</span></span>
<span class="line"><span style="color:#F6F6F4;">迭代语句：用于对条件进行控制，一般是自增或者自减</span></span>
<span class="line"><span style="color:#F6F6F4;">循环语句体：需要重复执行的代码</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//for循环格式：</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (初始化语句; 循环条件; 迭代语句) {</span></span>
<span class="line"><span style="color:#24292E;">    循环体语句(重复执行的代码);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">初始化语句：一般是定义一个变量，并给初始值</span></span>
<span class="line"><span style="color:#24292E;">循环条件：一般是一个关系表达式，结果必须是true或者false</span></span>
<span class="line"><span style="color:#24292E;">迭代语句：用于对条件进行控制，一般是自增或者自减</span></span>
<span class="line"><span style="color:#24292E;">循环语句体：需要重复执行的代码</span></span></code></pre></div><p><strong>2. for循环有哪些应用场景</strong></p><p>特点：其实只要是重复做的事情，都可以用循环语句来做</p><p>比如：在京东的网页上展示100台手机信息，我们只需要把展示数据的代码写一份，重复执行就可以了。</p><img src="`+D+'"><p>再比如：再我们教学管理系统中，有很多班级需要展示在页面上，我们没必要每一个班级都写一份展示数据代码，只需要写一份重复执行就可以了。</p><img src="'+h+`"><h3 id="_2️⃣-for循环案例案例" tabindex="-1">2️⃣ for循环案例案例 <a class="header-anchor" href="#_2️⃣-for循环案例案例" aria-label="Permalink to &quot;2️⃣ for循环案例案例&quot;">​</a></h3><p>通过这个案例，主要是让同学们掌握一种使用程序来求和的思想。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//1.掌握使用for循环批量产生数据。</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(i);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//1.掌握使用for循环批量产生数据。</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">求和的思路分析：</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">)首先需要定义一个求和变量，一般命名为sum</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">)再遍历得到所有需要求和的数据(</span><span style="color:#BF9EEE;">1</span><span style="color:#F286C4;">~</span><span style="color:#F6F6F4;">100之间的所有整数)</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">)让需要求和的数据和sum累加，</span></span>
<span class="line"><span style="color:#F6F6F4;">	结果：所有数据累加完之后最终sum就是所有数据的和</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">求和的思路分析：</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)首先需要定义一个求和变量，一般命名为sum</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)再遍历得到所有需要求和的数据(</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">~</span><span style="color:#24292E;">100之间的所有整数)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)让需要求和的数据和sum累加，</span></span>
<span class="line"><span style="color:#24292E;">	结果：所有数据累加完之后最终sum就是所有数据的和</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//2.需求：求1~100中所有整数的和</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> sum </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#7B7F8B;">//定义一个循环，先产生1-100，这100个数</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">//每产生一个数据，就把这个数和sum累加</span></span>
<span class="line"><span style="color:#F6F6F4;">    sum </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> i; </span><span style="color:#7B7F8B;">//sum = sum  + i;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1-100的数据和：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;">  sum);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//2.需求：求1~100中所有整数的和</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> sum </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">//定义一个循环，先产生1-100，这100个数</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//每产生一个数据，就把这个数和sum累加</span></span>
<span class="line"><span style="color:#24292E;">    sum </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> i; </span><span style="color:#6A737D;">//sum = sum  + i;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;1-100的数据和：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">  sum);</span></span></code></pre></div><p>分析上面代码的执行过程：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">1时：sum</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">0</span><span style="color:#F286C4;">+</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; sum</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">2时：sum</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">1</span><span style="color:#F286C4;">+</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">; sum</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">3时：sum</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">3</span><span style="color:#F286C4;">+</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">; sum</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">6</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">4时：sum</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">6</span><span style="color:#F286C4;">+</span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">; sum</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">...</span></span>
<span class="line"><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">100时</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> sum</span><span style="color:#F286C4;">+=</span><span style="color:#BF9EEE;">99</span><span style="color:#F6F6F4;">; sum</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">5050</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">1时：sum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; sum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">2时：sum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">; sum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">3时：sum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">; sum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">4时：sum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">6</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">; sum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">...</span></span>
<span class="line"><span style="color:#24292E;">i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">100时</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> sum</span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;">99</span><span style="color:#24292E;">; sum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">5050</span></span></code></pre></div><p>需求：求1~100之间奇数的和</p><p><strong>1. 代码写法一</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">求奇数和的思路（只是求和的数据变成了奇数，思路和前面没有变化）</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">)首先需要定义一个求和变量，这里命名为sum1</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">)再遍历得到所有需要求和的数据(</span><span style="color:#BF9EEE;">1</span><span style="color:#F286C4;">~</span><span style="color:#F6F6F4;">100之间的所有奇数)</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">)让需要求和的数据和sum1累加，</span></span>
<span class="line"><span style="color:#F6F6F4;">	结果：所有数据累加完之后最终sum1就是所有数据的和</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">求奇数和的思路（只是求和的数据变成了奇数，思路和前面没有变化）</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)首先需要定义一个求和变量，这里命名为sum1</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)再遍历得到所有需要求和的数据(</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">~</span><span style="color:#24292E;">100之间的所有奇数)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)让需要求和的数据和sum1累加，</span></span>
<span class="line"><span style="color:#24292E;">	结果：所有数据累加完之后最终sum1就是所有数据的和</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//1)定义一个变量用于求和</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> sum1 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#7B7F8B;">//2)定义一个循环产生1-100之间的奇数</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">+=</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// i = 1 3 5 7 ...</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">//3)让需要求和的数据和sum1累加，</span></span>
<span class="line"><span style="color:#F6F6F4;">    sum1 </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> i;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1-100之间的奇数和：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;">  sum1);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//1)定义一个变量用于求和</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> sum1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">//2)定义一个循环产生1-100之间的奇数</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// i = 1 3 5 7 ...</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//3)让需要求和的数据和sum1累加，</span></span>
<span class="line"><span style="color:#24292E;">    sum1 </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> i;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;1-100之间的奇数和：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">  sum1);</span></span></code></pre></div><p>以上代码的执行流程分析</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">初始化sum1</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">当i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">1时：sum1</span><span style="color:#F286C4;">+=</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; sum1</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">当i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">3时：sum1</span><span style="color:#F286C4;">+=</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">; sum1</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">当i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">5时：sum1</span><span style="color:#F286C4;">+=</span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">; sum1</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">9</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">...</span></span>
<span class="line"><span style="color:#F6F6F4;">当i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">99时：sum1</span><span style="color:#F286C4;">+=</span><span style="color:#BF9EEE;">99</span><span style="color:#F6F6F4;">; sum1</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">2500</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">初始化sum1</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">当i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">1时：sum1</span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; sum1</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">当i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">3时：sum1</span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">; sum1</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">当i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">5时：sum1</span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">; sum1</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">...</span></span>
<span class="line"><span style="color:#24292E;">当i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">99时：sum1</span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;">99</span><span style="color:#24292E;">; sum1</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2500</span></span></code></pre></div><p><strong>2. 代码写法二</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">求奇数和的思路（只是求和的数据变成了奇数，思路和前面没有变化）</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">)首先需要定义一个求和变量，这里命名为sum2</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">)再遍历得到所有需要求和的数据(</span><span style="color:#BF9EEE;">1</span><span style="color:#F286C4;">~</span><span style="color:#F6F6F4;">100之间的所有整数)</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">)在求和之前先对数据判断，如果是奇数，才和sum1累加；否则什么也不干</span></span>
<span class="line"><span style="color:#F6F6F4;">	结果：所有数据累加完之后最终sum1就是所有数据的和</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">求奇数和的思路（只是求和的数据变成了奇数，思路和前面没有变化）</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)首先需要定义一个求和变量，这里命名为sum2</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)再遍历得到所有需要求和的数据(</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">~</span><span style="color:#24292E;">100之间的所有整数)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)在求和之前先对数据判断，如果是奇数，才和sum1累加；否则什么也不干</span></span>
<span class="line"><span style="color:#24292E;">	结果：所有数据累加完之后最终sum1就是所有数据的和</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//1)首先需要定义一个求和变量，这里命名为sum2</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> sum2 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#7B7F8B;">//2)再遍历得到所有需要求和的数据(1~100之间的所有整数)</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">//i = 1 2 3 4 5 6 ... 99 100</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">//3)在求和之前先对数据判断，如果是奇数，才和sum1累加；否则什么也不干</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(i </span><span style="color:#F286C4;">%</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// i = 1 3 5 7 9 ... 99</span></span>
<span class="line"><span style="color:#F6F6F4;">        sum2 </span><span style="color:#F286C4;">+=</span><span style="color:#F6F6F4;"> i;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1-100之间的奇数和：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> sum2);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//1)首先需要定义一个求和变量，这里命名为sum2</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> sum2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">//2)再遍历得到所有需要求和的数据(1~100之间的所有整数)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//i = 1 2 3 4 5 6 ... 99 100</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//3)在求和之前先对数据判断，如果是奇数，才和sum1累加；否则什么也不干</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// i = 1 3 5 7 9 ... 99</span></span>
<span class="line"><span style="color:#24292E;">        sum2 </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> i;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;1-100之间的奇数和：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> sum2);</span></span></code></pre></div><p>作业</p><p>🚩 1. 需求：统计出100-100000内“水仙花数”一共有多少个，并在控制台输出个数？</p><p>水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身（例如：1^3 + 5^3+ 3^3 = 153）。</p><h3 id="_3️⃣-2-3-while循环——格式和流程" tabindex="-1">3️⃣ 2.3 while循环——格式和流程 <a class="header-anchor" href="#_3️⃣-2-3-while循环——格式和流程" aria-label="Permalink to &quot;3️⃣ 2.3 while循环——格式和流程&quot;">​</a></h3><p>各位同学，接下来我们学习第二种循环结构——while循环。</p><p>我们先来认识一下while循环长什么样子，然后按照格式写一个while循环的基础案例</p><img src="`+g+`"><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 需求：打印5行Hello World</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// i = 0 1 2 3 4</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Hello World</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 需求：打印5行Hello World</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// i = 0 1 2 3 4</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello World&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>代码的执行流程如下图所示：按照① ②③④ ②③④ ... 的流程执行</p><p>如果②步骤为true，才循环执行③④步骤</p><p>如果②步骤为false，则循环结束</p><img src="`+A+'"><img src="'+m+`"><p><strong>for、while如何选择</strong></p><p>学到这里，细心的同学可能会发现while循环和for循环的执行流程是一样的。那他们是不是可以通用呢？</p><ul><li><p>从功能来说：能够用for循环做的，都能用while循环做。</p></li><li><p>使用规范上来说：知道循环几次，建议使用for；不知道循环几次建议使用while</p></li></ul><h3 id="_5️⃣-2-3-while循环案例——折纸案例" tabindex="-1">5️⃣ 2.3 while循环案例——折纸案例 <a class="header-anchor" href="#_5️⃣-2-3-while循环案例——折纸案例" aria-label="Permalink to &quot;5️⃣ 2.3 while循环案例——折纸案例&quot;">​</a></h3><p>各位同学，上一节我们已经学习了while循环的基本使用。下面我们通过一个案例再将while循环的使用巩固一下，主要目的还是想让大家知道什么使用while循环来完成需求。</p><p>案例需求如下</p><p>需求：世界最高山峰珠穆朗玛峰高度是：8848.86米=8848860毫米，假如我有一张足够大的它的厚度是0.1毫米。请问：<strong>该纸张折叠多少次，可以折成珠穆朗玛峰的高度？</strong></p><p>分析流程</p><p>分析：首先由于不知道折叠多少次，我们可以选择用while循环</p><ul><li>1)纸张的初始化厚度为0.1毫米，珠峰的高度为8848860毫米</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> peakHeight </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">8848860</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> paperThickness </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0.1</span><span style="color:#F6F6F4;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;"> peakHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8848860</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> paperThickness </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.1</span><span style="color:#24292E;">;</span></span></code></pre></div><ul><li>2)每次折叠纸张的厚度为原来的两倍，这是需要循环执行的</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;">(纸张厚度</span><span style="color:#F286C4;">&lt;</span><span style="color:#BF9EEE;">8848860</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        纸张厚度</span><span style="color:#F286C4;">*=</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;">(纸张厚度</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">8848860</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        纸张厚度</span><span style="color:#D73A49;">*=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><ul><li>3)需要求折叠的次数，可以用一个变量来记录折叠的次数</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> 次数 </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;">(纸张厚度</span><span style="color:#F286C4;">&lt;</span><span style="color:#BF9EEE;">8848860</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">    纸张厚度</span><span style="color:#F286C4;">*=</span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    次数</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">; </span><span style="color:#7B7F8B;">//每次折叠次数累加</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> 次数 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;">(纸张厚度</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">8848860</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    纸张厚度</span><span style="color:#D73A49;">*=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    次数</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">//每次折叠次数累加</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">结果：等循环结束之后，打印记录次数的值，就是折叠多少次了。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">结果：等循环结束之后，打印记录次数的值，就是折叠多少次了。</span></span></code></pre></div><p>按照上面分析的思路把代码写出来</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 1、定义变量记住珠穆朗玛峰的高度和纸张的高度。</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> peakHeight </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">8848860</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">double</span><span style="color:#F6F6F4;"> paperThickness </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0.1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// 3、定义一个变量count用于记住纸张折叠了多少次</span></span>
<span class="line"><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> count </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// 2、定义while循环控制纸张开始折叠</span></span>
<span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (paperThickness </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> peakHeight) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 把纸张进行折叠，把纸张的厚度变成原来的2倍。</span></span>
<span class="line"><span style="color:#F6F6F4;">    paperThickness </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> paperThickness </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">2</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    count</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">需要折叠多少次：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> count);</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">最终纸张的厚度是：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> paperThickness);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 1、定义变量记住珠穆朗玛峰的高度和纸张的高度。</span></span>
<span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;"> peakHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8848860</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;"> paperThickness </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.1</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 3、定义一个变量count用于记住纸张折叠了多少次</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 2、定义while循环控制纸张开始折叠</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (paperThickness </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> peakHeight) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 把纸张进行折叠，把纸张的厚度变成原来的2倍。</span></span>
<span class="line"><span style="color:#24292E;">    paperThickness </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> paperThickness </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    count</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;需要折叠多少次：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> count);</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;最终纸张的厚度是：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> paperThickness);</span></span></code></pre></div><h3 id="_6️⃣-2-4-do-while循环——格式和流程" tabindex="-1">6️⃣ 2.4 do-while循环——格式和流程 <a class="header-anchor" href="#_6️⃣-2-4-do-while循环——格式和流程" aria-label="Permalink to &quot;6️⃣ 2.4 do-while循环——格式和流程&quot;">​</a></h3><p>循环结构的第三种格式——do-while循环</p><p>点击查看格式和执行流程</p><img src="`+v+`"><p>如下图所示：do-while循环的执行流程，是按照① ②③④ ②③④... 的顺序执行的。</p><p>我们会发现，do-while循环的特点是先执行，再判断的。即使条件不成立，也会先执行一次。</p><p>三种循环对比</p><ol><li>for循环 和 while循环（先判断后执行）; do...while （先执行后判断）</li></ol><p>2.for循环和while循环的执行流程是一模一样的， 功能上无区别，for能做的while也能做，反之亦然。 如果已知循环次数建议使用for循环，如果不清楚要循环多少次建议使用while循环。</p><p>3 for循环中控制循环的变量只在循环中使用 while循环中，控制循环的变量在循环后还可以继续使用</p><h3 id="_7️⃣-2-6-死循环" tabindex="-1">7️⃣ 2.6 死循环 <a class="header-anchor" href="#_7️⃣-2-6-死循环" aria-label="Permalink to &quot;7️⃣ 2.6 死循环&quot;">​</a></h3><p>同学们在写代码时，可能一不小心把代码写成了死循环，所谓死循环就是停不下来的循环。</p><p>接下来，带着同学们认识几种死循环的写法。然后再说一下死循环有什么用。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//for死循环</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> ( ; ; ){</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Hello World1</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">//while死循环</span></span>
<span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (</span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Hello World2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">//do-while死循环</span></span>
<span class="line"><span style="color:#F286C4;">do</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Hello World3</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (</span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//for死循环</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> ( ; ; ){</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello World1&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//while死循环</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello World2&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//do-while死循环</span></span>
<span class="line"><span style="color:#D73A49;">do</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello World3&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span></code></pre></div><p><strong>死循环有什么应用场景呢？</strong></p><p>最典型的是可以用死循环来做服务器程序， 比如百度的服务器程序就是一直在执行的，你随时都可以通过浏览器去访问百度。如果哪一天百度的服务器停止了运行，有就意味着所有的人都永不了百度提供的服务了。</p><p>对于这样的应用我们目前了解一下就可以了。对于目前来说我们只要知道代码格式该怎么写，能达到什么效果就行。</p><h3 id="_8️⃣-2-8-循环嵌套" tabindex="-1">8️⃣ 2.8 循环嵌套 <a class="header-anchor" href="#_8️⃣-2-8-循环嵌套" aria-label="Permalink to &quot;8️⃣ 2.8 循环嵌套&quot;">​</a></h3><p>各位同学，接下来我们学习一种在实际工作中很常用的循环形式——循环嵌套。</p><p>所谓循环嵌套，就是一个循环中又包含另一个循环（就是同学们常说的，套娃_），下面我们通过案例代码演示一下。</p><p>循环嵌套执行流程：外部循环每循环一次，内部循环会全部执行完一轮。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">0时; i</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">3为true; 进入循环</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#7B7F8B;">//j的取值从0到5,执行一轮，打印5次&quot;我爱你&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> j </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; j </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">; j</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">       System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">我爱你：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> i);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    内层循环执行完之后，执行外层的i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">; i的值1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">1时：i</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">3为true; 进入循环</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#7B7F8B;">//j的取值从0到5,又执行一轮，打印5次&quot;我爱你&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> j </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; j </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">; j</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">       System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">我爱你：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> i);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    内层循环执行完之后，执行外层的i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">; i的值2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">2时：i</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">3为true; 进入循环</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#7B7F8B;">//j的取值从0到5,再执行一轮，打印5次&quot;我爱你&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">	</span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> j </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; j </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">; j</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">       System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">我爱你：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> i);</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    内层循环执行完之后，执行外层的i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">; i的值3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">3时：i</span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;">3为false; 外层循环结束</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">0时; i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">3为true; 进入循环</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">//j的取值从0到5,执行一轮，打印5次&quot;我爱你&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">; j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">       System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;我爱你：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> i);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    内层循环执行完之后，执行外层的i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">; i的值1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">1时：i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">3为true; 进入循环</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">//j的取值从0到5,又执行一轮，打印5次&quot;我爱你&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">; j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">       System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;我爱你：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> i);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    内层循环执行完之后，执行外层的i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">; i的值2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">2时：i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">3为true; 进入循环</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">//j的取值从0到5,再执行一轮，打印5次&quot;我爱你&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">; j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">       System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;我爱你：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> i);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    内层循环执行完之后，执行外层的i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">; i的值3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">i</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">3时：i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">3为false; 外层循环结束</span></span></code></pre></div><p>理解问循环嵌套的执行流程之后，我们再写一个案例来巩固一下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">需求：在控制台使用 </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;"> 打印出4行5列的矩形</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">****</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">****</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">****</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">****</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">需求：在控制台使用 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 打印出4行5列的矩形</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">****</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">****</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">****</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">****</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">//1)先写一个循环用来在一行中打印5个&quot;*&quot;</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> j </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; j </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">; j</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">*</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">); </span><span style="color:#7B7F8B;">// 不换行</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">//换行</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">-----------------</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">//2)再将第一步的代码套一层循环，执行4次，就可以打印4行</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> j </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; j </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">; j</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        System.out.</span><span style="color:#62E884;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">*</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">); </span><span style="color:#7B7F8B;">// 不换行</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(); </span><span style="color:#7B7F8B;">//换行</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//1)先写一个循环用来在一行中打印5个&quot;*&quot;</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">; j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 不换行</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//换行</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;-----------------&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//2)再将第一步的代码套一层循环，执行4次，就可以打印4行</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">; j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 不换行</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//换行</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>总结一下，对于嵌套循环重点理解这句话：<strong>外部循环每循环一次，内部循环会全部执行完一轮。</strong></p><h3 id="_9️⃣-2-9-跳转语句-break-、continue" tabindex="-1">9️⃣ 2.9 跳转语句 break 、continue <a class="header-anchor" href="#_9️⃣-2-9-跳转语句-break-、continue" aria-label="Permalink to &quot;9️⃣ 2.9 跳转语句 break 、continue&quot;">​</a></h3><p>前面我们学习了循环结构，在中间我们还接触了死循环的一些形式，那么我想要在循环过程中提前跳出循环怎么做呢？</p><p>这里就需要用到跳转语句，需要用到<strong>break</strong>和<strong>continue</strong>两个关键字。我们先来认识一下这两个关键字的作用</p><ul><li>break作用：跳出并结束当前所在循环的执行</li><li>continue作用：结束本次循环，进入下一次循环</li></ul><p>案例1：演示break的使用，提前终止循环的执行</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 1、break:跳出并结束当前所在循环的执行。</span></span>
<span class="line"><span style="color:#7B7F8B;">// 场景：假如你又有老婆了，你犯错了，你老婆罚你说：5句我爱你</span></span>
<span class="line"><span style="color:#7B7F8B;">// 说到第三句的时候心软了，让你别再说了。</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">我爱你：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> i);</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(i </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">){</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 说明已经说完了第三句了，心软了。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">; </span><span style="color:#7B7F8B;">// 跳出并结束当前所在循环的执行。</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 1、break:跳出并结束当前所在循环的执行。</span></span>
<span class="line"><span style="color:#6A737D;">// 场景：假如你又有老婆了，你犯错了，你老婆罚你说：5句我爱你</span></span>
<span class="line"><span style="color:#6A737D;">// 说到第三句的时候心软了，让你别再说了。</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;我爱你：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> i);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 说明已经说完了第三句了，心软了。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 跳出并结束当前所在循环的执行。</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>案例2：演示continue的使用，结束循环中的一次，继续下一次循环</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 2、continue:跳出当前循环的当次执行，直接进入循环的下一次执行。</span></span>
<span class="line"><span style="color:#7B7F8B;">// 场景: 假如你有老婆，你犯错了，你老婆罚你洗碗5天。</span></span>
<span class="line"><span style="color:#7B7F8B;">// 第三天的时候，你表现很好，第三天不用洗碗，但是不解恨，第四天还是要继续的。</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(i </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">3</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 已经到了第三天，第三天不用洗的。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">continue</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">    System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">洗碗：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> i);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 2、continue:跳出当前循环的当次执行，直接进入循环的下一次执行。</span></span>
<span class="line"><span style="color:#6A737D;">// 场景: 假如你有老婆，你犯错了，你老婆罚你洗碗5天。</span></span>
<span class="line"><span style="color:#6A737D;">// 第三天的时候，你表现很好，第三天不用洗碗，但是不解恨，第四天还是要继续的。</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 已经到了第三天，第三天不用洗的。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">continue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;洗碗：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> i);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>需要注意的是<strong>break和continue不是任何地方都可以使用的</strong></p><hr><h3 id="_2-10-循环结构总结" tabindex="-1">2.10 循环结构总结 <a class="header-anchor" href="#_2-10-循环结构总结" aria-label="Permalink to &quot;2.10 循环结构总结&quot;">​</a></h3><p>问题</p><p>什么是流程控制?</p><p>流程控制是用来控制程序的执行顺序的</p><p>分支结构if和switch，如何选择？</p><ul><li><p>if分支：一般用于对<strong>一个范围</strong>进行判断</p></li><li><p>switch分支：对<strong>一个一个值</strong>进行匹配</p></li></ul><p>for循环和while循环、do-while如何循环?</p><ul><li><strong>知道循环次数</strong>用for、</li><li><strong>不知道循环次数</strong>用while</li><li>想要<strong>先</strong>执行，再判断，用do-while</li></ul><h2 id="三、生成随机数-🚩" tabindex="-1">三、生成随机数 🚩 <a class="header-anchor" href="#三、生成随机数-🚩" aria-label="Permalink to &quot;三、生成随机数 🚩&quot;">​</a></h2><p>各位同学，接下来我们再学习一个新的知识——生成随机数。</p><p>生成随机数其实在很多场景下都很实用，比如，在课堂上可以写一个随机点名器点同学起来回答问题；再比如公司年会可以随机抽奖等。</p><h3 id="_3-1-如何产生一个随机数" tabindex="-1">3.1 如何产生一个随机数 <a class="header-anchor" href="#_3-1-如何产生一个随机数" aria-label="Permalink to &quot;3.1 如何产生一个随机数&quot;">​</a></h3><p>生成随机数的功能，其实 Java已经给我们提供了，在JDK中提供了一个类叫做Random，我们只需要调用Random这个类提供的功能就可以了。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 目标：掌握使用Random生成随机数的步骤。</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1、导包。import java.util.Random; (idea会自动完成)</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> java.util.Random;</span></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">RandomDemo1</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、创建一个Random对象，用于生成随机数。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Random</span><span style="color:#F6F6F4;"> r </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Random</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 3、调用Random提供的功能：nextInt得到随机数。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> (</span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> data </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> r.</span><span style="color:#62E884;">nextInt</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">); </span><span style="color:#7B7F8B;">// 0 - 9</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(data);</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 目标：掌握使用Random生成随机数的步骤。</span></span>
<span class="line"><span style="color:#6A737D;">// 1、导包。import java.util.Random; (idea会自动完成)</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.Random;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RandomDemo1</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、创建一个Random对象，用于生成随机数。</span></span>
<span class="line"><span style="color:#24292E;">        Random r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Random</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 3、调用Random提供的功能：nextInt得到随机数。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> r.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 0 - 9</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(data);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_3-2-猜数字小游戏" tabindex="-1">3.2 猜数字小游戏 <a class="header-anchor" href="#_3-2-猜数字小游戏" aria-label="Permalink to &quot;3.2 猜数字小游戏&quot;">​</a></h3><p>各位同学，接下来我们通过一个案例把前面的流程控制、跳转语句、随机数综合运用一下；</p><p>如果能把这个案例写出来，说明你对今天的知识点掌握得挺好了。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">需求：</span></span>
<span class="line"><span style="color:#F6F6F4;">	随机生成一个1</span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;">100之间的数据，提示用户猜测，猜大提示过大，猜小提示过小，直到猜中	  结束游戏</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">分析：</span></span>
<span class="line"><span style="color:#F6F6F4;">	1.先随机生成一个1</span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;">100之间的数据。</span></span>
<span class="line"><span style="color:#F6F6F4;">		谁可以帮你生成随机数啊？ 是不是要用到Random？</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">	2.定义一个死循环让用户可以一直猜测。</span></span>
<span class="line"><span style="color:#F6F6F4;">		用户猜的数据从哪里来啊？ 是不是要用到Scanner</span><span style="color:#F286C4;">?</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">	3.在死循环里，每次让用户录入的数据和随机数进行比较</span></span>
<span class="line"><span style="color:#F6F6F4;">		如果比随机数大：提示猜大了</span></span>
<span class="line"><span style="color:#F6F6F4;">		如果比随机数小：提示猜小了</span></span>
<span class="line"><span style="color:#F6F6F4;">		如果和随机数相同：提示恭喜你猜中了</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">需求：</span></span>
<span class="line"><span style="color:#24292E;">	随机生成一个1</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">100之间的数据，提示用户猜测，猜大提示过大，猜小提示过小，直到猜中	  结束游戏</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">分析：</span></span>
<span class="line"><span style="color:#24292E;">	1.先随机生成一个1</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">100之间的数据。</span></span>
<span class="line"><span style="color:#24292E;">		谁可以帮你生成随机数啊？ 是不是要用到Random？</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	2.定义一个死循环让用户可以一直猜测。</span></span>
<span class="line"><span style="color:#24292E;">		用户猜的数据从哪里来啊？ 是不是要用到Scanner</span><span style="color:#D73A49;">?</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	3.在死循环里，每次让用户录入的数据和随机数进行比较</span></span>
<span class="line"><span style="color:#24292E;">		如果比随机数大：提示猜大了</span></span>
<span class="line"><span style="color:#24292E;">		如果比随机数小：提示猜小了</span></span>
<span class="line"><span style="color:#24292E;">		如果和随机数相同：提示恭喜你猜中了</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> java.util.Random;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> java.util.Scanner;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">RandomTest2</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">static</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">main</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">String</span><span style="color:#F6F6F4;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 1、随机产生一个1-100之间的数据，做为中奖号码。</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Random</span><span style="color:#F6F6F4;"> r </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Random</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> luckNumber </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> r.</span><span style="color:#62E884;">nextInt</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 2、定义一个死循环，让用户不断的猜测数据</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#97E1F1;font-style:italic;">Scanner</span><span style="color:#F6F6F4;"> sc </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Scanner</span><span style="color:#F6F6F4;">(System.in);</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> (</span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 提示用户猜测</span></span>
<span class="line"><span style="color:#F6F6F4;">            System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">请您输入您猜测的数据：</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#97E1F1;font-style:italic;">int</span><span style="color:#F6F6F4;"> guessNumber </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> sc.</span><span style="color:#62E884;">nextInt</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// 3、判断用户猜测的数字与幸运号码的大小情况</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(guessNumber </span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> luckNumber){</span></span>
<span class="line"><span style="color:#F6F6F4;">                System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您猜测的数字过大~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;">(guessNumber </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> luckNumber){</span></span>
<span class="line"><span style="color:#F6F6F4;">                System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">您猜测的数字过小~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">                System.out.</span><span style="color:#62E884;">println</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">恭喜您，猜测成功了，可以买单了~~</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">                </span><span style="color:#F286C4;">break</span><span style="color:#F6F6F4;">; </span><span style="color:#7B7F8B;">// 结束死循环</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.Random;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.Scanner;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RandomTest2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 1、随机产生一个1-100之间的数据，做为中奖号码。</span></span>
<span class="line"><span style="color:#24292E;">        Random r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Random</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> luckNumber </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> r.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 2、定义一个死循环，让用户不断的猜测数据</span></span>
<span class="line"><span style="color:#24292E;">        Scanner sc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scanner</span><span style="color:#24292E;">(System.in);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 提示用户猜测</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请您输入您猜测的数据：&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> guessNumber </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sc.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 3、判断用户猜测的数字与幸运号码的大小情况</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(guessNumber </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> luckNumber){</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您猜测的数字过大~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(guessNumber </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> luckNumber){</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;您猜测的数字过小~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;恭喜您，猜测成功了，可以买单了~~&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 结束死循环</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,194),B=[b];function q(k,j,S,_,w,x){return n(),a("div",null,B)}const H=s(f,[["render",q]]);export{P as __pageData,H as default};
