import{_ as e,o as a,c as s,V as o}from"./chunks/framework.c6d8cbec.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/vue/Vue最新面试题2021年，常见面试题及答案汇总.md","filePath":"interview/backend/vue/Vue最新面试题2021年，常见面试题及答案汇总.md"}'),n={name:"interview/backend/vue/Vue最新面试题2021年，常见面试题及答案汇总.md"},t=o(`<h3 id="_1、vue的两个核心点" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#1vue%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%A0%B8%E5%BF%83%E7%82%B9" target="_blank" rel="noreferrer">1、vue的两个核心点</a> <a class="header-anchor" href="#_1、vue的两个核心点" aria-label="Permalink to &quot;[1、vue的两个核心点](https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue最新面试题2021年，常见面试题及答案汇总.md#1vue的两个核心点)&quot;">​</a></h3><p><strong>1、</strong> 数据驱动、组件系统</p><p><strong>2、</strong> 数据驱动：ViewModel，保证数据和视图的一致性。</p><p><strong>3、</strong> 组件系统：应用类UI可以看作全部是由组件树构成的。</p><h3 id="_2、为什么vue被称为-渐进框架" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#2%E4%B8%BA%E4%BB%80%E4%B9%88vue%E8%A2%AB%E7%A7%B0%E4%B8%BA%E2%80%9C%E6%B8%90%E8%BF%9B%E6%A1%86%E6%9E%B6" target="_blank" rel="noreferrer">2、为什么Vue被称为“渐进框架”？</a> <a class="header-anchor" href="#_2、为什么vue被称为-渐进框架" aria-label="Permalink to &quot;[2、为什么Vue被称为“渐进框架”？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue最新面试题2021年，常见面试题及答案汇总.md#2为什么vue被称为“渐进框架)&quot;">​</a></h3><p>使用渐进式框架的代价很小，从而使现有项目（使用其他技术构建的项目）更容易采用并迁移到新框架。 Vue.js 是一个渐进式框架，因为你可以逐步将其引入现有应用，而不必从头开始重写整个程序。</p><p>Vue 的最基本和核心的部分涉及“视图”层，因此可以通过逐步将 Vue 引入程序并替换“视图”实现来开始你的旅程。</p><p>由于其不断发展的性质，Vue 与其他库配合使用非常好，并且非常容易上手。这与 Angular.js 之类的框架相反，后者要求将现有程序完全重构并在该框架中实现。</p><h3 id="_3、vue中template编译的理解" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#3vue%E4%B8%ADtemplate%E7%BC%96%E8%AF%91%E7%9A%84%E7%90%86%E8%A7%A3" target="_blank" rel="noreferrer">3、vue中template编译的理解？</a> <a class="header-anchor" href="#_3、vue中template编译的理解" aria-label="Permalink to &quot;[3、vue中template编译的理解？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue最新面试题2021年，常见面试题及答案汇总.md#3vue中template编译的理解)&quot;">​</a></h3><p>就是先转化成AST树，再得到的render函数返回VNode（Vue的虚拟DOM节点），具体为：</p><p>首先，通过compile编译器把template编译成AST语法树（abstract syntax tree 即 源代码的抽象语法结构的树状表现形式），compile是createCompiler的返回值，createCompiler是用以创建编译器的。</p><p>另外compile还负责合并option。</p><p>然后，AST会经过generate（将AST语法树转化成render funtion字符串的过程）得到render函数，render的返回值是VNode，VNode是Vue的虚拟DOM节点，里面有（标签名、子节点、文本等等）</p><h3 id="_4、vue的历史记录" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#4vue%E7%9A%84%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95" target="_blank" rel="noreferrer">4、vue的历史记录</a> <a class="header-anchor" href="#_4、vue的历史记录" aria-label="Permalink to &quot;[4、vue的历史记录](https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue最新面试题2021年，常见面试题及答案汇总.md#4vue的历史记录)&quot;">​</a></h3><p>history 记录中向前或者后退多少步</p><h3 id="_5、import-和-exports-是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#5import-%E5%92%8C-exports-%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">5、import 和 exports 是什么？</a> <a class="header-anchor" href="#_5、import-和-exports-是什么" aria-label="Permalink to &quot;[5、import 和 exports 是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue最新面试题2021年，常见面试题及答案汇总.md#5import-和-exports-是什么)&quot;">​</a></h3><p>import和exports 帮助咱们编写模块化的JS代码。使用import和exports，咱们可以将代码分割成多个文件。import只允许获取文件的某些特定变量或方法。可以导入模块导出的方法或变量。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">//index.js</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;"> import name,age from &#39;./person&#39;;</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;"> console.log(name);</span></span>
<span class="line"><span style="color:#f6f6f4;"> console.log(age);</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;"> //person.js</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;"> let name =&#39;Sharad&#39;, occupation=&#39;developer&#39;, age =26;</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;"> export { name, age};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">//index.js</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"> import name,age from &#39;./person&#39;;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"> console.log(name);</span></span>
<span class="line"><span style="color:#24292e;"> console.log(age);</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"> //person.js</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"> let name =&#39;Sharad&#39;, occupation=&#39;developer&#39;, age =26;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"> export { name, age};</span></span></code></pre></div><h3 id="_6、渐进式框架的理解" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#6%E6%B8%90%E8%BF%9B%E5%BC%8F%E6%A1%86%E6%9E%B6%E7%9A%84%E7%90%86%E8%A7%A3" target="_blank" rel="noreferrer">6、渐进式框架的理解</a> <a class="header-anchor" href="#_6、渐进式框架的理解" aria-label="Permalink to &quot;[6、渐进式框架的理解](https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue最新面试题2021年，常见面试题及答案汇总.md#6渐进式框架的理解)&quot;">​</a></h3><p>主张最少；可以根据不同的需求选择不同的层级；</p><h3 id="_7、简述一下sass、less-且说明区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#7%E7%AE%80%E8%BF%B0%E4%B8%80%E4%B8%8Bsassless%E4%B8%94%E8%AF%B4%E6%98%8E%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">7、简述一下Sass、Less，且说明区别？</a> <a class="header-anchor" href="#_7、简述一下sass、less-且说明区别" aria-label="Permalink to &quot;[7、简述一下Sass、Less，且说明区别？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue最新面试题2021年，常见面试题及答案汇总.md#7简述一下sassless且说明区别)&quot;">​</a></h3><p><strong>1、</strong> 他们是动态的样式语言，是CSS预处理器,CSS上的一种抽象层。他们是一种特殊的语法/语言而编译成CSS。</p><p><strong>2、</strong> 变量符不一样，less是@，而Sass是$;</p><p><strong>3、</strong> Sass支持条件语句，可以使用if{}else{},for{}循环等等。而Less不支持;</p><p><strong>4、</strong> Sass是基于Ruby的，是在服务端处理的，而Less是需要引入less.js来处理Less代码输出Css到浏览器</p><h3 id="_8、导航钩子有哪些-它们有哪些参数" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#8%E5%AF%BC%E8%88%AA%E9%92%A9%E5%AD%90%E6%9C%89%E5%93%AA%E4%BA%9B%E5%AE%83%E4%BB%AC%E6%9C%89%E5%93%AA%E4%BA%9B%E5%8F%82%E6%95%B0" target="_blank" rel="noreferrer">8、导航钩子有哪些？它们有哪些参数？</a> <a class="header-anchor" href="#_8、导航钩子有哪些-它们有哪些参数" aria-label="Permalink to &quot;[8、导航钩子有哪些？它们有哪些参数？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue最新面试题2021年，常见面试题及答案汇总.md#8导航钩子有哪些它们有哪些参数)&quot;">​</a></h3><p><strong>导航钩子有：</strong></p><p>a/全局钩子和组件内独享的钩子。b/beforeRouteEnter、afterEnter、beforeRouterUpdate、beforeRouteLeave</p><p><strong>参数：</strong></p><p>有to（去的那个路由）、from（离开的路由）、next（一定要用这个函数才能去到下一个路由，如果不用就拦截）最常用就这几种</p><h3 id="_9、解释js中的高阶函数" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#9%E8%A7%A3%E9%87%8Ajs%E4%B8%AD%E7%9A%84%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0" target="_blank" rel="noreferrer">9、解释JS中的高阶函数？</a> <a class="header-anchor" href="#_9、解释js中的高阶函数" aria-label="Permalink to &quot;[9、解释JS中的高阶函数？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue最新面试题2021年，常见面试题及答案汇总.md#9解释js中的高阶函数)&quot;">​</a></h3><p>高阶函数是JS函数式编程的最佳特性。它是以函数为参数并返回函数作为结果的函数。一些内置的高阶函数是map、filter、reduce 等等。</p><h3 id="_10、如何在js中动态添加-删除对象的属性" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%982021%E5%B9%B4%EF%BC%8C%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#10%E5%A6%82%E4%BD%95%E5%9C%A8js%E4%B8%AD%E5%8A%A8%E6%80%81%E6%B7%BB%E5%8A%A0/%E5%88%A0%E9%99%A4%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%9E%E6%80%A7" target="_blank" rel="noreferrer">10、如何在JS中动态添加/删除对象的属性？</a> <a class="header-anchor" href="#_10、如何在js中动态添加-删除对象的属性" aria-label="Permalink to &quot;[10、如何在JS中动态添加/删除对象的属性？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Vue/Vue最新面试题2021年，常见面试题及答案汇总.md#10如何在js中动态添加/删除对象的属性)&quot;">​</a></h3><p>咱们可以使用object.property_name = value向对象添加属性，delete object.property_name 用于删除属性。 例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">let user = new Object();</span></span>
<span class="line"><span style="color:#f6f6f4;">// adding a property</span></span>
<span class="line"><span style="color:#f6f6f4;">user.name=&#39;Anil&#39;;</span></span>
<span class="line"><span style="color:#f6f6f4;">user.age  =25;</span></span>
<span class="line"><span style="color:#f6f6f4;">console.log(user);</span></span>
<span class="line"><span style="color:#f6f6f4;">delete user.age;</span></span>
<span class="line"><span style="color:#f6f6f4;">console.log(user);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">let user = new Object();</span></span>
<span class="line"><span style="color:#24292e;">// adding a property</span></span>
<span class="line"><span style="color:#24292e;">user.name=&#39;Anil&#39;;</span></span>
<span class="line"><span style="color:#24292e;">user.age  =25;</span></span>
<span class="line"><span style="color:#24292e;">console.log(user);</span></span>
<span class="line"><span style="color:#24292e;">delete user.age;</span></span>
<span class="line"><span style="color:#24292e;">console.log(user);</span></span></code></pre></div><h3 id="_11、js中let和const有什么用" tabindex="-1">11、JS中let和const有什么用？ <a class="header-anchor" href="#_11、js中let和const有什么用" aria-label="Permalink to &quot;11、JS中let和const有什么用？&quot;">​</a></h3><h3 id="_12、axios的特点有哪些" tabindex="-1">12、axios的特点有哪些 <a class="header-anchor" href="#_12、axios的特点有哪些" aria-label="Permalink to &quot;12、axios的特点有哪些&quot;">​</a></h3><h3 id="_13、vuejs与angularjs以及react的区别-与angularjs的区别" tabindex="-1">13、vuejs与angularjs以及react的区别，与AngularJS的区别 <a class="header-anchor" href="#_13、vuejs与angularjs以及react的区别-与angularjs的区别" aria-label="Permalink to &quot;13、vuejs与angularjs以及react的区别，与AngularJS的区别&quot;">​</a></h3><h3 id="_14、列出js基本和非基本数据类型之间的一些区别" tabindex="-1">14、列出JS基本和非基本数据类型之间的一些区别？ <a class="header-anchor" href="#_14、列出js基本和非基本数据类型之间的一些区别" aria-label="Permalink to &quot;14、列出JS基本和非基本数据类型之间的一些区别？&quot;">​</a></h3><h3 id="_15、如何让css只在当前组件中起作用" tabindex="-1">15、如何让CSS只在当前组件中起作用？ <a class="header-anchor" href="#_15、如何让css只在当前组件中起作用" aria-label="Permalink to &quot;15、如何让CSS只在当前组件中起作用？&quot;">​</a></h3><h3 id="_16、bom-和-dom-的关系" tabindex="-1">16、BOM 和 DOM 的关系 <a class="header-anchor" href="#_16、bom-和-dom-的关系" aria-label="Permalink to &quot;16、BOM 和 DOM 的关系&quot;">​</a></h3><h3 id="_17、如何将数据从父组件传递到子组件" tabindex="-1">17、如何将数据从父组件传递到子组件？ <a class="header-anchor" href="#_17、如何将数据从父组件传递到子组件" aria-label="Permalink to &quot;17、如何将数据从父组件传递到子组件？&quot;">​</a></h3><h3 id="_18、delete和vue-delete删除数组的区别" tabindex="-1">18、delete和Vue.delete删除数组的区别 <a class="header-anchor" href="#_18、delete和vue-delete删除数组的区别" aria-label="Permalink to &quot;18、delete和Vue.delete删除数组的区别&quot;">​</a></h3><h3 id="_19、如何从子组件发出自定义事件" tabindex="-1">19、如何从子组件发出自定义事件？ <a class="header-anchor" href="#_19、如何从子组件发出自定义事件" aria-label="Permalink to &quot;19、如何从子组件发出自定义事件？&quot;">​</a></h3><h3 id="_20、active-class-是哪个组件的属性" tabindex="-1">20、active-class 是哪个组件的属性？ <a class="header-anchor" href="#_20、active-class-是哪个组件的属性" aria-label="Permalink to &quot;20、active-class 是哪个组件的属性？&quot;">​</a></h3><h3 id="_21、如何在js中编码和解码" tabindex="-1">21、如何在JS中编码和解码 <a class="header-anchor" href="#_21、如何在js中编码和解码" aria-label="Permalink to &quot;21、如何在JS中编码和解码&quot;">​</a></h3><h3 id="_22、created和mounted的区别" tabindex="-1">22、created和mounted的区别 <a class="header-anchor" href="#_22、created和mounted的区别" aria-label="Permalink to &quot;22、created和mounted的区别&quot;">​</a></h3><h3 id="_23、如何在js中克隆对象" tabindex="-1">23、如何在JS中克隆对象 <a class="header-anchor" href="#_23、如何在js中克隆对象" aria-label="Permalink to &quot;23、如何在JS中克隆对象&quot;">​</a></h3><h3 id="_24、嵌套路由怎么定义" tabindex="-1">24、嵌套路由怎么定义？ <a class="header-anchor" href="#_24、嵌套路由怎么定义" aria-label="Permalink to &quot;24、嵌套路由怎么定义？&quot;">​</a></h3><h3 id="_25、js中判断数据类型的方法有几种" tabindex="-1">25、JS中判断数据类型的方法有几种? <a class="header-anchor" href="#_25、js中判断数据类型的方法有几种" aria-label="Permalink to &quot;25、JS中判断数据类型的方法有几种?&quot;">​</a></h3><h3 id="_26、js中的substr-和substring-函数有什么区别" tabindex="-1">26、JS中的substr()和substring()函数有什么区别 <a class="header-anchor" href="#_26、js中的substr-和substring-函数有什么区别" aria-label="Permalink to &quot;26、JS中的substr()和substring()函数有什么区别&quot;">​</a></h3><h3 id="_27、seo优化" tabindex="-1">27、SEO优化 <a class="header-anchor" href="#_27、seo优化" aria-label="Permalink to &quot;27、SEO优化&quot;">​</a></h3><h3 id="_28、什么是-vue-生命周期-有什么作用" tabindex="-1">28、什么是 vue 生命周期？有什么作用？ <a class="header-anchor" href="#_28、什么是-vue-生命周期-有什么作用" aria-label="Permalink to &quot;28、什么是 vue 生命周期？有什么作用？&quot;">​</a></h3>`,53),r=[t];function l(p,E,c,u,i,d){return a(),s("div",null,r)}const A=e(n,[["render",l]]);export{B as __pageData,A as default};
