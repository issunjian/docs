import{_ as a,o as e,c as s,V as t}from"./chunks/framework.c6d8cbec.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/elasticsearch/elasticsearch-01.md","filePath":"interview/backend/elasticsearch/elasticsearch-01.md"}'),r={name:"interview/backend/elasticsearch/elasticsearch-01.md"},c=t(`<h3 id="_1、elasticsearch的倒排索引是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#1elasticsearch%E7%9A%84%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">1、elasticsearch的倒排索引是什么</a> <a class="header-anchor" href="#_1、elasticsearch的倒排索引是什么" aria-label="Permalink to &quot;[1、elasticsearch的倒排索引是什么](https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch最新2021年面试题，高级面试题及附答案解析.md#1elasticsearch的倒排索引是什么)&quot;">​</a></h3><p><code>面试官</code>：想了解你对基础概念的认知。</p><p>通俗解释一下就可以。</p><p>传统的我们的检索是通过文章，逐个遍历找到对应关键词的位置。</p><p>而倒排索引，是通过分词策略，形成了词和文章的映射关系表，这种词典+映射表即为倒排索引。</p><p>有了倒排索引，就能实现<code>o（1）时间复杂度</code>的效率检索文章了，极大的提高了检索效率。</p><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0814/01/img_2.png#alt=img%5C_2.png" alt=""></p><p>学术的解答方式：</p><blockquote><p>倒排索引，相反于一篇文章包含了哪些词，它从词出发，记载了这个词在哪些文档中出现过，由两部分组成——词典和倒排表。</p></blockquote><p><code>加分项</code>：倒排索引的底层实现是基于：FST（Finite State Transducer）数据结构。</p><p>lucene从4+版本后开始大量使用的数据结构是FST。FST有两个优点：</p><p><strong>1、</strong> 空间占用小。通过对词典中单词前缀和后缀的重复利用，压缩了存储空间；</p><p><strong>2、</strong> 查询速度快。O(len(str))的查询时间复杂度。</p><h3 id="_2、elasticsearch-在部署时-对-linux-的设置有哪些优化方法" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#2elasticsearch-%E5%9C%A8%E9%83%A8%E7%BD%B2%E6%97%B6%E5%AF%B9-linux-%E7%9A%84%E8%AE%BE%E7%BD%AE%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95" target="_blank" rel="noreferrer">2、Elasticsearch 在部署时，对 Linux 的设置有哪些优化方法</a> <a class="header-anchor" href="#_2、elasticsearch-在部署时-对-linux-的设置有哪些优化方法" aria-label="Permalink to &quot;[2、Elasticsearch 在部署时，对 Linux 的设置有哪些优化方法](https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch最新2021年面试题，高级面试题及附答案解析.md#2elasticsearch-在部署时对-linux-的设置有哪些优化方法)&quot;">​</a></h3><p>面试官：想了解对 ES 集群的运维能力。</p><p>解</p><p><strong>1、</strong> 关闭缓存 swap;</p><p><strong>2、</strong> 堆内存设置为：Min（节点内存/2, 32GB）;</p><p><strong>3、</strong> 设置最大文件句柄数；</p><p><strong>4、</strong> 线程池+队列大小根据业务需要做调整；</p><p><strong>5、</strong> 磁盘存储 raid 方式——存储有条件使用 RAID10，增加单节点性能以及避免单</p><p>节点存储故障。</p><h3 id="_3、详细描述一下elasticsearch索引文档的过程" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#3%E8%AF%A6%E7%BB%86%E6%8F%8F%E8%BF%B0%E4%B8%80%E4%B8%8Belasticsearch%E7%B4%A2%E5%BC%95%E6%96%87%E6%A1%A3%E7%9A%84%E8%BF%87%E7%A8%8B" target="_blank" rel="noreferrer">3、详细描述一下Elasticsearch索引文档的过程</a> <a class="header-anchor" href="#_3、详细描述一下elasticsearch索引文档的过程" aria-label="Permalink to &quot;[3、详细描述一下Elasticsearch索引文档的过程](https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch最新2021年面试题，高级面试题及附答案解析.md#3详细描述一下elasticsearch索引文档的过程)&quot;">​</a></h3><p><code>面试官</code>：想了解ES的底层原理，不再只关注业务层面了。</p><p>这里的索引文档应该理解为文档写入ES，创建索引的过程。</p><p>文档写入包含：单文档写入和批量bulk写入，这里只解释一下：单文档写入流程。</p><p>记住官方文档中的这个图。</p><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0814/01/img_3.png#alt=img%5C_3.png" alt=""></p><p>第一步：客户写集群某节点写入数据，发送请求。（如果没有指定路由/协调节点，请求的节点扮演<code>路由节点</code>的角色。）</p><p>第二步：节点1接受到请求后，使用文档_id来确定文档属于分片0。请求会被转到另外的节点，假定节点3。因此分片0的主分片分配到节点3上。</p><p>第三步：节点3在主分片上执行写操作，如果成功，则将请求并行转发到节点1和节点2的副本分片上，等待结果返回。所有的副本分片都报告成功，节点3将向协调节点（节点1）报告成功，节点1向请求客户端报告写入成功。</p><p>如果面试官再问：第二步中的文档获取分片的过程？</p><p>回借助路由算法获取，路由算法就是根据路由和文档id计算目标的分片id的过程。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">1shard = hash(_routing) % (num_of_primary_shards)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1shard = hash(_routing) % (num_of_primary_shards)</span></span></code></pre></div><h3 id="_4、在并发情况下-elasticsearch-如果保证读写一致" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#4%E5%9C%A8%E5%B9%B6%E5%8F%91%E6%83%85%E5%86%B5%E4%B8%8Belasticsearch-%E5%A6%82%E6%9E%9C%E4%BF%9D%E8%AF%81%E8%AF%BB%E5%86%99%E4%B8%80%E8%87%B4" target="_blank" rel="noreferrer">4、在并发情况下，Elasticsearch 如果保证读写一致？</a> <a class="header-anchor" href="#_4、在并发情况下-elasticsearch-如果保证读写一致" aria-label="Permalink to &quot;[4、在并发情况下，Elasticsearch 如果保证读写一致？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch最新2021年面试题，高级面试题及附答案解析.md#4在并发情况下elasticsearch-如果保证读写一致)&quot;">​</a></h3><p><strong>1、</strong> 可以通过版本号使用乐观并发控制，以确保新版本不会被旧版本覆盖，<strong>由应用</strong></p><p><strong>层来处理具体的冲突；</strong></p><p><strong>2、</strong> 另外对于写操作，一致性级别支持 quorum/one/all，默认为 quorum，即只有当大多数分片可用时才允许写操作。但即使大多数可用，也可能存在因为网络等原因导致写入副本失败，这样该副本被认为故障，分片将会在一个不同的节点</p><p>上重建。</p><p><strong>3、</strong> 对于读操作，可以设置 replication 为 sync(默认)，这使得操作在主分片和副本分片都完成后才会返回；如果设置 replication 为 async 时，也可以通过设置搜索请求参数_preference 为 primary 来查询主分片，确保文档是最新版本。</p><h3 id="_5、请解释在-elasticsearch-集群中添加或创建索引的过程" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#5%E8%AF%B7%E8%A7%A3%E9%87%8A%E5%9C%A8-elasticsearch-%E9%9B%86%E7%BE%A4%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%88%96%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E7%9A%84%E8%BF%87%E7%A8%8B" target="_blank" rel="noreferrer">5、请解释在 Elasticsearch 集群中添加或创建索引的过程？</a> <a class="header-anchor" href="#_5、请解释在-elasticsearch-集群中添加或创建索引的过程" aria-label="Permalink to &quot;[5、请解释在 Elasticsearch 集群中添加或创建索引的过程？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch最新2021年面试题，高级面试题及附答案解析.md#5请解释在-elasticsearch-集群中添加或创建索引的过程)&quot;">​</a></h3><p>要添加新索引，应使用创建索引 API 选项。创建索引所需的参数是索引的配置Settings，索引中的字段 Mapping 以及索引别名 Alias。</p><p>也可以通过模板 Template 创建索引。</p><h3 id="_6、安装-elasticsearch-需要依赖什么组件吗" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#6%E5%AE%89%E8%A3%85-elasticsearch-%E9%9C%80%E8%A6%81%E4%BE%9D%E8%B5%96%E4%BB%80%E4%B9%88%E7%BB%84%E4%BB%B6%E5%90%97" target="_blank" rel="noreferrer">6、安装 Elasticsearch 需要依赖什么组件吗？</a> <a class="header-anchor" href="#_6、安装-elasticsearch-需要依赖什么组件吗" aria-label="Permalink to &quot;[6、安装 Elasticsearch 需要依赖什么组件吗？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch最新2021年面试题，高级面试题及附答案解析.md#6安装-elasticsearch-需要依赖什么组件吗)&quot;">​</a></h3><p>ES 早期版本需要JDK，在7.X版本后已经集成了 JDK，已无需第三方依赖。</p><h3 id="_7、如何使用-elastic-reporting" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#7%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-elastic-reporting-" target="_blank" rel="noreferrer">7、如何使用 Elastic Reporting ？</a> <a class="header-anchor" href="#_7、如何使用-elastic-reporting" aria-label="Permalink to &quot;[7、如何使用 Elastic Reporting ？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch最新2021年面试题，高级面试题及附答案解析.md#7如何使用-elastic-reporting-)&quot;">​</a></h3><p>收费功能，只是了解，点到为止。</p><p>Reporting API有助于将检索结果生成 PD F格式，图像 PNG 格式以及电子表格 CSV 格式的数据，并可根据需要进行共享或保存。</p><h3 id="_8、elasticsearch-是如何实现-master-选举的" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#8elasticsearch-%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0-master-%E9%80%89%E4%B8%BE%E7%9A%84" target="_blank" rel="noreferrer">8、elasticsearch 是如何实现 master 选举的</a> <a class="header-anchor" href="#_8、elasticsearch-是如何实现-master-选举的" aria-label="Permalink to &quot;[8、elasticsearch 是如何实现 master 选举的](https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch最新2021年面试题，高级面试题及附答案解析.md#8elasticsearch-是如何实现-master-选举的)&quot;">​</a></h3><p>面试官：想了解 ES 集群的底层原理，不再只关注业务层面了。</p><p>解</p><p><strong>前置前提：</strong></p><p><strong>1、</strong> 只有候选主节点（master：true）的节点才能成为主节点。</p><p><strong>2、</strong> 最小主节点数（min_master_nodes）的目的是防止脑裂。</p><p>这个我看了各种网上分析的版本和源码分析的书籍，云里雾里。核对了一下代码，核心入口为 findMaster，选择主节点成功返回对应 Master，否则返回 null。</p><p><strong>选举流程大致描述如下：</strong></p><p>第一步：确认候选主节点数达标，elasticsearch.yml 设置的值</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">discovery.zen.minimum_master_nodes；</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">discovery.zen.minimum_master_nodes；</span></span></code></pre></div><p>第二步：比较：先判定是否具备 master 资格，具备候选主节点资格的优先返回；</p><p>若两节点都为候选主节点，则 id 小的值会主节点。</p><p>注意这里的 id 为 string 类型。</p><p>题外话：获取节点 id 的方法。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">1GET /_cat/nodes?v&amp;h=ip,port,heapPercent,heapMax,id,name</span></span>
<span class="line"><span style="color:#f6f6f4;">2ip</span></span>
<span class="line"><span style="color:#f6f6f4;">port heapPercent heapMax id</span></span>
<span class="line"><span style="color:#f6f6f4;">name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1GET /_cat/nodes?v&amp;h=ip,port,heapPercent,heapMax,id,name</span></span>
<span class="line"><span style="color:#24292e;">2ip</span></span>
<span class="line"><span style="color:#24292e;">port heapPercent heapMax id</span></span>
<span class="line"><span style="color:#24292e;">name</span></span></code></pre></div><h3 id="_9、在并发情况下-elasticsearch如果保证读写一致" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#9%E5%9C%A8%E5%B9%B6%E5%8F%91%E6%83%85%E5%86%B5%E4%B8%8Belasticsearch%E5%A6%82%E6%9E%9C%E4%BF%9D%E8%AF%81%E8%AF%BB%E5%86%99%E4%B8%80%E8%87%B4" target="_blank" rel="noreferrer">9、在并发情况下，Elasticsearch如果保证读写一致？</a> <a class="header-anchor" href="#_9、在并发情况下-elasticsearch如果保证读写一致" aria-label="Permalink to &quot;[9、在并发情况下，Elasticsearch如果保证读写一致？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch最新2021年面试题，高级面试题及附答案解析.md#9在并发情况下elasticsearch如果保证读写一致)&quot;">​</a></h3><p><strong>1、</strong> 可以通过版本号使用乐观并发控制，以确保新版本不会被旧版本覆盖，由应用层来处理具体的冲突；</p><p><strong>2、</strong> 另外对于写操作，一致性级别支持quorum/one/all，默认为quorum，即只有当大多数分片可用时才允许写操作。但即使大多数可用，也可能存在因为网络等原因导致写入副本失败，这样该副本被认为故障，分片将会在一个不同的节点上重建。</p><p><strong>3、</strong> 对于读操作，可以设置replication为sync(默认)，这使得操作在主分片和副本分片都完成后才会返回；如果设置replication为async时，也可以通过设置搜索请求参数_preference为primary来查询主分片，确保文档是最新版本。</p><h3 id="_10、详细描述一下elasticsearch更新和删除文档的过程。" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#10%E8%AF%A6%E7%BB%86%E6%8F%8F%E8%BF%B0%E4%B8%80%E4%B8%8Belasticsearch%E6%9B%B4%E6%96%B0%E5%92%8C%E5%88%A0%E9%99%A4%E6%96%87%E6%A1%A3%E7%9A%84%E8%BF%87%E7%A8%8B%E3%80%82" target="_blank" rel="noreferrer">10、详细描述一下Elasticsearch更新和删除文档的过程。</a> <a class="header-anchor" href="#_10、详细描述一下elasticsearch更新和删除文档的过程。" aria-label="Permalink to &quot;[10、详细描述一下Elasticsearch更新和删除文档的过程。](https://gitee.com/souyunku/DevBooks/blob/master/docs/Elasticsearch/Elasticsearch最新2021年面试题，高级面试题及附答案解析.md#10详细描述一下elasticsearch更新和删除文档的过程。)&quot;">​</a></h3><p><strong>1、</strong> 删除和更新也都是写操作，但是Elasticsearch中的文档是不可变的，因此不能被删除或者改动以展示其变更；</p><p><strong>2、</strong> 磁盘上的每个段都有一个相应的.del文件。当删除请求发送后，文档并没有真的被删除，而是在.del文件中被标记为删除。该文档依然能匹配查询，但是会在结果中被过滤掉。当段合并时，在.del文件中被标记为删除的文档将不会被写入新段。</p><p><strong>3、</strong> 在新的文档被创建时，Elasticsearch会为该文档指定一个版本号，当执行更新时，旧版本的文档在.del文件中被标记为删除，新版本的文档被索引到一个新段。旧版本的文档依然能匹配查询，但是会在结果中被过滤掉。</p><h3 id="_11、详细描述一下-elasticsearch-更新和删除文档的过程。" tabindex="-1">11、详细描述一下 Elasticsearch 更新和删除文档的过程。 <a class="header-anchor" href="#_11、详细描述一下-elasticsearch-更新和删除文档的过程。" aria-label="Permalink to &quot;11、详细描述一下 Elasticsearch 更新和删除文档的过程。&quot;">​</a></h3><h3 id="_12、在索引中更新-mapping-的语法" tabindex="-1">12、在索引中更新 Mapping 的语法？ <a class="header-anchor" href="#_12、在索引中更新-mapping-的语法" aria-label="Permalink to &quot;12、在索引中更新 Mapping 的语法？&quot;">​</a></h3><h3 id="_13、在elasticsearch中-按-id检索文档的语法是什么" tabindex="-1">13、在Elasticsearch中 按 ID检索文档的语法是什么？ <a class="header-anchor" href="#_13、在elasticsearch中-按-id检索文档的语法是什么" aria-label="Permalink to &quot;13、在Elasticsearch中 按 ID检索文档的语法是什么？&quot;">​</a></h3><h3 id="_14、在-elasticsearch-中删除索引的语法是什么" tabindex="-1">14、在 Elasticsearch 中删除索引的语法是什么？ <a class="header-anchor" href="#_14、在-elasticsearch-中删除索引的语法是什么" aria-label="Permalink to &quot;14、在 Elasticsearch 中删除索引的语法是什么？&quot;">​</a></h3><h3 id="_15、详细描述一下elasticsearch索引文档的过程。" tabindex="-1">15、详细描述一下Elasticsearch索引文档的过程。 <a class="header-anchor" href="#_15、详细描述一下elasticsearch索引文档的过程。" aria-label="Permalink to &quot;15、详细描述一下Elasticsearch索引文档的过程。&quot;">​</a></h3><h3 id="_16、elasticsearch中的-ingest-节点如何工作" tabindex="-1">16、Elasticsearch中的 Ingest 节点如何工作？ <a class="header-anchor" href="#_16、elasticsearch中的-ingest-节点如何工作" aria-label="Permalink to &quot;16、Elasticsearch中的 Ingest 节点如何工作？&quot;">​</a></h3><h3 id="_17、elasticsearch-索引数据多了怎么办-如何调优-部署" tabindex="-1">17、elasticsearch 索引数据多了怎么办，如何调优，部署 <a class="header-anchor" href="#_17、elasticsearch-索引数据多了怎么办-如何调优-部署" aria-label="Permalink to &quot;17、elasticsearch 索引数据多了怎么办，如何调优，部署&quot;">​</a></h3><h3 id="_18、19、解释-elasticsearch-中的相关性和得分" tabindex="-1">18、19、解释 Elasticsearch 中的相关性和得分？ <a class="header-anchor" href="#_18、19、解释-elasticsearch-中的相关性和得分" aria-label="Permalink to &quot;18、19、解释 Elasticsearch 中的相关性和得分？&quot;">​</a></h3><h3 id="_19、elasticsearch如何监控集群状态" tabindex="-1">19、ElasticSearch如何监控集群状态？ <a class="header-anchor" href="#_19、elasticsearch如何监控集群状态" aria-label="Permalink to &quot;19、ElasticSearch如何监控集群状态？&quot;">​</a></h3><h3 id="_20、详细描述一下-elasticsearch-索引文档的过程。" tabindex="-1">20、详细描述一下 Elasticsearch 索引文档的过程。 <a class="header-anchor" href="#_20、详细描述一下-elasticsearch-索引文档的过程。" aria-label="Permalink to &quot;20、详细描述一下 Elasticsearch 索引文档的过程。&quot;">​</a></h3><h3 id="_21、详细描述一下-elasticsearch-搜索的过程" tabindex="-1">21、详细描述一下 Elasticsearch 搜索的过程？ <a class="header-anchor" href="#_21、详细描述一下-elasticsearch-搜索的过程" aria-label="Permalink to &quot;21、详细描述一下 Elasticsearch 搜索的过程？&quot;">​</a></h3><h3 id="_22、定义副本、创建副本的好处是什么" tabindex="-1">22、定义副本、创建副本的好处是什么？ <a class="header-anchor" href="#_22、定义副本、创建副本的好处是什么" aria-label="Permalink to &quot;22、定义副本、创建副本的好处是什么？&quot;">​</a></h3><h3 id="_23、客户端在和集群连接时-如何选择特定的节点执行请求的" tabindex="-1">23、客户端在和集群连接时，如何选择特定的节点执行请求的？ <a class="header-anchor" href="#_23、客户端在和集群连接时-如何选择特定的节点执行请求的" aria-label="Permalink to &quot;23、客户端在和集群连接时，如何选择特定的节点执行请求的？&quot;">​</a></h3><h3 id="_24、您能否分步介绍如何启动-elasticsearch-服务器" tabindex="-1">24、您能否分步介绍如何启动 Elasticsearch 服务器？ <a class="header-anchor" href="#_24、您能否分步介绍如何启动-elasticsearch-服务器" aria-label="Permalink to &quot;24、您能否分步介绍如何启动 Elasticsearch 服务器？&quot;">​</a></h3><h3 id="_25、elasticsearch对于大数据量-上亿量级-的聚合如何实现" tabindex="-1">25、Elasticsearch对于大数据量（上亿量级）的聚合如何实现？ <a class="header-anchor" href="#_25、elasticsearch对于大数据量-上亿量级-的聚合如何实现" aria-label="Permalink to &quot;25、Elasticsearch对于大数据量（上亿量级）的聚合如何实现？&quot;">​</a></h3><h3 id="_26、elasticsearch-中常用的-cat命令有哪些" tabindex="-1">26、Elasticsearch 中常用的 cat命令有哪些？ <a class="header-anchor" href="#_26、elasticsearch-中常用的-cat命令有哪些" aria-label="Permalink to &quot;26、Elasticsearch 中常用的 cat命令有哪些？&quot;">​</a></h3>`,87),l=[c];function i(o,E,h,n,p,d){return e(),s("div",null,l)}const B=a(r,[["render",i]]);export{u as __pageData,B as default};
