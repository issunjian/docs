import{_ as s,o as a,c as n,V as o}from"./chunks/framework.c6d8cbec.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/python/python-03.md","filePath":"interview/backend/python/python-03.md"}'),l={name:"interview/backend/python/python-03.md"},e=o(`<h3 id="_1、python的局限性" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#1python%E7%9A%84%E5%B1%80%E9%99%90%E6%80%A7" target="_blank" rel="noreferrer">1、Python的局限性？</a> <a class="header-anchor" href="#_1、python的局限性" aria-label="Permalink to &quot;[1、Python的局限性？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新2021年面试题大汇总，附答案.md#1python的局限性)&quot;">​</a></h3><p><strong>1、</strong> 速度</p><p><strong>2、</strong> 移动开发</p><p><strong>3、</strong> 内存消耗(与其他语言相比非常高)</p><p><strong>4、</strong> 两个版本的不兼容(2，3)</p><p><strong>5、</strong> 运行错误(需要更多测试，并且错误仅在运行时显示)</p><p><strong>6、</strong> 简单性</p><h3 id="_2、区分python中的remove-del和pop" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#2%E5%8C%BA%E5%88%86python%E4%B8%AD%E7%9A%84removedel%E5%92%8Cpop" target="_blank" rel="noreferrer">2、区分Python中的remove，del和pop？</a> <a class="header-anchor" href="#_2、区分python中的remove-del和pop" aria-label="Permalink to &quot;[2、区分Python中的remove，del和pop？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新2021年面试题大汇总，附答案.md#2区分python中的removedel和pop)&quot;">​</a></h3><p>remove：将删除列表中的第一个匹配值，它以值作为参数。</p><p>del：使用索引删除元素，它不返回任何值。</p><p>pop：将删除列表中顶部的元素，并返回列表的顶部元素。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">numbers = [1,2,3,4,5]</span></span>
<span class="line"><span style="color:#f6f6f4;">numbers.remove(5)</span></span>
<span class="line"><span style="color:#f6f6f4;">&gt; [1,2,3,4]</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">del numbers[0]</span></span>
<span class="line"><span style="color:#f6f6f4;">&gt;[2,3,4]</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">numbers.pop()</span></span>
<span class="line"><span style="color:#f6f6f4;">&gt;4</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">numbers = [1,2,3,4,5]</span></span>
<span class="line"><span style="color:#24292e;">numbers.remove(5)</span></span>
<span class="line"><span style="color:#24292e;">&gt; [1,2,3,4]</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">del numbers[0]</span></span>
<span class="line"><span style="color:#24292e;">&gt;[2,3,4]</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">numbers.pop()</span></span>
<span class="line"><span style="color:#24292e;">&gt;4</span></span></code></pre></div><h3 id="_3、什么是ajax请求-手写一个ajax请求" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#3%E4%BB%80%E4%B9%88%E6%98%AFajax%E8%AF%B7%E6%B1%82%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AAajax%E8%AF%B7%E6%B1%82" target="_blank" rel="noreferrer">3、什么是ajax请求？手写一个ajax请求</a> <a class="header-anchor" href="#_3、什么是ajax请求-手写一个ajax请求" aria-label="Permalink to &quot;[3、什么是ajax请求？手写一个ajax请求](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新2021年面试题大汇总，附答案.md#3什么是ajax请求手写一个ajax请求)&quot;">​</a></h3><p>ajax（异步JavaScript和XML）是指一种创建交付式网页应用的网页开发技术。可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// 不使用第三方</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> xhr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">XMLHttpRequest</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">xhr.</span><span style="color:#62E884;">open</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">GET</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, url, </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">xhr.</span><span style="color:#62E884;">onreadtstatechange</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (xhr.readystate </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">4</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">//响应内容解析完成，可以在客户端调用了</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (xhr.status </span><span style="color:#F286C4;">==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">200</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">//客户端的请求成功了</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#62E884;">alert</span><span style="color:#F6F6F4;">(xhr.responseText);</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F6F6F4;">xhr.</span><span style="color:#62E884;">send</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#7B7F8B;">// 使用ajax</span></span>
<span class="line"><span style="color:#F6F6F4;">$.</span><span style="color:#62E884;">ajax</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">    type</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">GET</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    url</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    dataType</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">json</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">success</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">data</span><span style="color:#F6F6F4;">) {},</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">error</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">jqXHR</span><span style="color:#F6F6F4;">) {}</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 不使用第三方</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> xhr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">XMLHttpRequest</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">xhr.</span><span style="color:#6F42C1;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;GET&quot;</span><span style="color:#24292E;">, url, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">xhr.</span><span style="color:#6F42C1;">onreadtstatechange</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (xhr.readystate </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//响应内容解析完成，可以在客户端调用了</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (xhr.status </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//客户端的请求成功了</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">alert</span><span style="color:#24292E;">(xhr.responseText);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">xhr.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// 使用ajax</span></span>
<span class="line"><span style="color:#24292E;">$.</span><span style="color:#6F42C1;">ajax</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    type: </span><span style="color:#032F62;">&quot;GET&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    url: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    dataType: </span><span style="color:#032F62;">&quot;json&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">success</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">data</span><span style="color:#24292E;">) {},</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">jqXHR</span><span style="color:#24292E;">) {}</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h3 id="_4、什么是覆盖索引" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#4%E4%BB%80%E4%B9%88%E6%98%AF%E8%A6%86%E7%9B%96%E7%B4%A2%E5%BC%95" target="_blank" rel="noreferrer">4、什么是覆盖索引</a> <a class="header-anchor" href="#_4、什么是覆盖索引" aria-label="Permalink to &quot;[4、什么是覆盖索引](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新2021年面试题大汇总，附答案.md#4什么是覆盖索引)&quot;">​</a></h3><p><strong>覆盖索引又可以称为索引覆盖。</strong></p><p><strong>1、</strong> 解释一： 就是select的数据列只用从索引中就能够取得，不必从数据表中读取，换句话说查询列要被所使用的索引覆盖。</p><p><strong>2、</strong> 解释二： 索引是高效找到行的一个方法，当能通过检索索引就可以读取想要的数据，那就不需要再到数据表中读取行了。如果一个索引包含了（或覆盖了）满足查询语句中字段与条件的数据就叫做覆盖索引。</p><p><strong>3、</strong> 解释三： 是非聚集组合索引的一种形式，它包括在查询里的Select、Join和Where子句用到的所有列（即建立索引的字段正好是覆盖查询语句[select子句]与查询条件[Where子句]中所涉及的字段，也即，索引包含了查询正在查找的所有数据）。</p><h3 id="_5、简述多进程开发中join和deamon的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#5%E7%AE%80%E8%BF%B0%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%BC%80%E5%8F%91%E4%B8%ADjoin%E5%92%8Cdeamon%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">5、简述多进程开发中join和deamon的区别</a> <a class="header-anchor" href="#_5、简述多进程开发中join和deamon的区别" aria-label="Permalink to &quot;[5、简述多进程开发中join和deamon的区别](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新2021年面试题大汇总，附答案.md#5简述多进程开发中join和deamon的区别)&quot;">​</a></h3><p><strong>1、</strong> join：当子线程调用join时，主线程会被阻塞，当子线程结束后，主线程才能继续执行。</p><p><strong>2、</strong> deamon：当子进程被设置为守护进程时，主进程结束，不管子进程是否执行完毕，都会随着主进程的结束而结束。</p><h3 id="_6、在python中有多少种运算符-解释一下算数运算符。" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#6%E5%9C%A8python%E4%B8%AD%E6%9C%89%E5%A4%9A%E5%B0%91%E7%A7%8D%E8%BF%90%E7%AE%97%E7%AC%A6%E8%A7%A3%E9%87%8A%E4%B8%80%E4%B8%8B%E7%AE%97%E6%95%B0%E8%BF%90%E7%AE%97%E7%AC%A6%E3%80%82" target="_blank" rel="noreferrer">6、在Python中有多少种运算符？解释一下算数运算符。</a> <a class="header-anchor" href="#_6、在python中有多少种运算符-解释一下算数运算符。" aria-label="Permalink to &quot;[6、在Python中有多少种运算符？解释一下算数运算符。](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新2021年面试题大汇总，附答案.md#6在python中有多少种运算符解释一下算数运算符。)&quot;">​</a></h3><p>在Python中，我们有7种运算符：算术运算符、关系运算符、赋值运算符、逻辑运算符、位运算符、成员运算符、身份运算符。</p><p>我们有7个算术运算符，能让我们对数值进行算术运算：</p><p><strong>1、</strong> 加号（+），将两个值相加</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; 7+8</span></span>
<span class="line"><span style="color:#f6f6f4;">15</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; 7+8</span></span>
<span class="line"><span style="color:#24292e;">15</span></span></code></pre></div><p><strong>2、</strong> 减号（-），将第一个值减去第二个值</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; 7-8</span></span>
<span class="line"><span style="color:#f6f6f4;">-1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; 7-8</span></span>
<span class="line"><span style="color:#24292e;">-1</span></span></code></pre></div><p><strong>3、</strong> 乘号（*），将两个值相乘</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; 7*8</span></span>
<span class="line"><span style="color:#f6f6f4;">56</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; 7*8</span></span>
<span class="line"><span style="color:#24292e;">56</span></span></code></pre></div><p><strong>4、</strong> 除号（/），用第二个值除以第一个值</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; 7/8</span></span>
<span class="line"><span style="color:#f6f6f4;">0.875</span></span>
<span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; 1/1</span></span>
<span class="line"><span style="color:#f6f6f4;">1.0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; 7/8</span></span>
<span class="line"><span style="color:#24292e;">0.875</span></span>
<span class="line"><span style="color:#24292e;">&gt;&gt;&gt; 1/1</span></span>
<span class="line"><span style="color:#24292e;">1.0</span></span></code></pre></div><p><strong>5、</strong> 向下取整除、取模和取幂运算，参见上个问题。</p><h3 id="_7、python3和python2中int和long的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#7python3%E5%92%8Cpython2%E4%B8%ADint%E5%92%8Clong%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">7、python3和python2中int和long的区别</a> <a class="header-anchor" href="#_7、python3和python2中int和long的区别" aria-label="Permalink to &quot;[7、python3和python2中int和long的区别](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新2021年面试题大汇总，附答案.md#7python3和python2中int和long的区别)&quot;">​</a></h3><p>python2中有long类型，python3中没有long类型，只有int类型。python3中的int类型包括了long类型。</p><h3 id="_8、什么是抽象" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#8%E4%BB%80%E4%B9%88%E6%98%AF%E6%8A%BD%E8%B1%A1" target="_blank" rel="noreferrer">8、什么是抽象？</a> <a class="header-anchor" href="#_8、什么是抽象" aria-label="Permalink to &quot;[8、什么是抽象？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新2021年面试题大汇总，附答案.md#8什么是抽象)&quot;">​</a></h3><p>抽象(Abstraction)是将一个对象的本质或必要特征向外界展示，并隐藏所有其他无关信息的过程。</p><h3 id="_9、将列表alist-name-a-age-25-name-b-age-30-name-c-age-20-按照age的值从大到小排列。" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#9%E5%B0%86%E5%88%97%E8%A1%A8alist=%5B%7B&#39;name&#39;:&#39;a&#39;,&#39;age&#39;:25%7D,%7B&#39;name&#39;:&#39;b&#39;,&#39;age&#39;:30%7D,%7B&#39;name&#39;:&#39;c&#39;,&#39;age&#39;:20%7D%5D%E6%8C%89%E7%85%A7age%E7%9A%84%E5%80%BC%E4%BB%8E%E5%A4%A7%E5%88%B0%E5%B0%8F%E6%8E%92%E5%88%97%E3%80%82" target="_blank" rel="noreferrer">9、将列表alist=[{&#39;name&#39;:&#39;a&#39;,&#39;age&#39;:25},{&#39;name&#39;:&#39;b&#39;,&#39;age&#39;:30},{&#39;name&#39;:&#39;c&#39;,&#39;age&#39;:20}]，按照age的值从大到小排列。</a> <a class="header-anchor" href="#_9、将列表alist-name-a-age-25-name-b-age-30-name-c-age-20-按照age的值从大到小排列。" aria-label="Permalink to &quot;[9、将列表alist=[{&#39;name&#39;:&#39;a&#39;,&#39;age&#39;:25},{&#39;name&#39;:&#39;b&#39;,&#39;age&#39;:30},{&#39;name&#39;:&#39;c&#39;,&#39;age&#39;:20}]，按照age的值从大到小排列。](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新2021年面试题大汇总，附答案.md#9将列表alist=[{&#39;name&#39;:&#39;a&#39;,&#39;age&#39;:25},{&#39;name&#39;:&#39;b&#39;,&#39;age&#39;:30},{&#39;name&#39;:&#39;c&#39;,&#39;age&#39;:20}]按照age的值从大到小排列。)&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">alist</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">[{</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">name</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">a</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">age</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">25</span><span style="color:#F6F6F4;">},{</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">name</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">b</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">age</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">30</span><span style="color:#F6F6F4;">},{</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">name</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">:</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">c</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">age</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">}]</span></span>
<span class="line"><span style="color:#F6F6F4;">blist</span><span style="color:#F286C4;">=</span><span style="color:#97E1F1;">sorted</span><span style="color:#F6F6F4;">(alist,</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F286C4;">=lambda</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">x</span><span style="color:#F6F6F4;">:x[</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">age</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">],</span><span style="color:#FFB86C;font-style:italic;">reverse</span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;">True</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(blist)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">alist</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">},{</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">},{</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">}]</span></span>
<span class="line"><span style="color:#24292E;">blist</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">sorted</span><span style="color:#24292E;">(alist,</span><span style="color:#E36209;">key</span><span style="color:#D73A49;">=lambda</span><span style="color:#24292E;"> x:x[</span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">],</span><span style="color:#E36209;">reverse</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(blist)</span></span></code></pre></div><h3 id="_10、解释一下python中的继承" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#10%E8%A7%A3%E9%87%8A%E4%B8%80%E4%B8%8Bpython%E4%B8%AD%E7%9A%84%E7%BB%A7%E6%89%BF" target="_blank" rel="noreferrer">10、解释一下Python中的继承</a> <a class="header-anchor" href="#_10、解释一下python中的继承" aria-label="Permalink to &quot;[10、解释一下Python中的继承](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新2021年面试题大汇总，附答案.md#10解释一下python中的继承)&quot;">​</a></h3><p>当一个类继承自另一个类，它就被称为一个子类/派生类，继承自父类/基类/超类。它会继承/获取所有类成员（属性和方法）。</p><p>继承能让我们重新使用代码，也能更容易的创建和维护应用。Python支持如下种类的继承：</p><ul><li>单继承：一个类继承自单个基类</li><li>多继承：一个类继承自多个基类</li><li>多级继承：一个类继承自单个基类，后者则继承自另一个基类</li><li>分层继承：多个类继承自单个基类</li><li>混合继承：两种或多种类型继承的混合 更多关于继承的内容，参见：</li></ul><p><a href="https://data-flair.training/blogs/python-inheritance/" target="_blank" rel="noreferrer">戳这里</a></p><h3 id="_11、解释一下python中的三元运算子" tabindex="-1">11、解释一下Python中的三元运算子 <a class="header-anchor" href="#_11、解释一下python中的三元运算子" aria-label="Permalink to &quot;11、解释一下Python中的三元运算子&quot;">​</a></h3><h3 id="_12、什么是nginx" tabindex="-1">12、什么是Nginx <a class="header-anchor" href="#_12、什么是nginx" aria-label="Permalink to &quot;12、什么是Nginx&quot;">​</a></h3><h3 id="_13、-和is-not运算符的区别" tabindex="-1">13、!=和is not运算符的区别？ <a class="header-anchor" href="#_13、-和is-not运算符的区别" aria-label="Permalink to &quot;13、!=和is not运算符的区别？&quot;">​</a></h3><h3 id="_14、介绍一下try-except的用法和作用" tabindex="-1">14、介绍一下try except的用法和作用？ <a class="header-anchor" href="#_14、介绍一下try-except的用法和作用" aria-label="Permalink to &quot;14、介绍一下try except的用法和作用？&quot;">​</a></h3><h3 id="_15、公司线上和开发环境使用的什么系统" tabindex="-1">15、公司线上和开发环境使用的什么系统 <a class="header-anchor" href="#_15、公司线上和开发环境使用的什么系统" aria-label="Permalink to &quot;15、公司线上和开发环境使用的什么系统&quot;">​</a></h3><h3 id="_16、什么是keepalived" tabindex="-1">16、什么是keepalived <a class="header-anchor" href="#_16、什么是keepalived" aria-label="Permalink to &quot;16、什么是keepalived&quot;">​</a></h3><h3 id="_17、如何使用索引来反转python中的字符串" tabindex="-1">17、如何使用索引来反转Python中的字符串? <a class="header-anchor" href="#_17、如何使用索引来反转python中的字符串" aria-label="Permalink to &quot;17、如何使用索引来反转Python中的字符串?&quot;">​</a></h3><h3 id="_18、从0-99这100个数中随机取出10个-要求不能重复" tabindex="-1">18、从0-99这100个数中随机取出10个，要求不能重复 <a class="header-anchor" href="#_18、从0-99这100个数中随机取出10个-要求不能重复" aria-label="Permalink to &quot;18、从0-99这100个数中随机取出10个，要求不能重复&quot;">​</a></h3><h3 id="_19、实例方法、静态方法和类方法的区别" tabindex="-1">19、实例方法、静态方法和类方法的区别 <a class="header-anchor" href="#_19、实例方法、静态方法和类方法的区别" aria-label="Permalink to &quot;19、实例方法、静态方法和类方法的区别&quot;">​</a></h3><h3 id="_20、什么是gevent" tabindex="-1">20、什么是gevent <a class="header-anchor" href="#_20、什么是gevent" aria-label="Permalink to &quot;20、什么是gevent&quot;">​</a></h3><h3 id="_21、python是如何进行内存管理的-python的程序会内存泄漏吗-说说有没有什么方面阻止或者检测内存泄漏" tabindex="-1">21、python是如何进行内存管理的？python的程序会内存泄漏吗？说说有没有什么方面阻止或者检测内存泄漏？ <a class="header-anchor" href="#_21、python是如何进行内存管理的-python的程序会内存泄漏吗-说说有没有什么方面阻止或者检测内存泄漏" aria-label="Permalink to &quot;21、python是如何进行内存管理的？python的程序会内存泄漏吗？说说有没有什么方面阻止或者检测内存泄漏？&quot;">​</a></h3><h3 id="_22、请写一个python逻辑-计算一个文件中的大写字母数量" tabindex="-1">22、请写一个Python逻辑，计算一个文件中的大写字母数量 <a class="header-anchor" href="#_22、请写一个python逻辑-计算一个文件中的大写字母数量" aria-label="Permalink to &quot;22、请写一个Python逻辑，计算一个文件中的大写字母数量&quot;">​</a></h3><h3 id="_23、获取python解释器版本的方法" tabindex="-1">23、获取python解释器版本的方法 <a class="header-anchor" href="#_23、获取python解释器版本的方法" aria-label="Permalink to &quot;23、获取python解释器版本的方法&quot;">​</a></h3><h3 id="_24、什么是负载均衡" tabindex="-1">24、什么是负载均衡 <a class="header-anchor" href="#_24、什么是负载均衡" aria-label="Permalink to &quot;24、什么是负载均衡&quot;">​</a></h3><h3 id="_25、类的加载和实例化过程" tabindex="-1">25、类的加载和实例化过程 <a class="header-anchor" href="#_25、类的加载和实例化过程" aria-label="Permalink to &quot;25、类的加载和实例化过程&quot;">​</a></h3><h3 id="_26、路由器和交换机的区别" tabindex="-1">26、路由器和交换机的区别 <a class="header-anchor" href="#_26、路由器和交换机的区别" aria-label="Permalink to &quot;26、路由器和交换机的区别&quot;">​</a></h3><h3 id="_27、python中的生成器是什么" tabindex="-1">27、Python中的生成器是什么？ <a class="header-anchor" href="#_27、python中的生成器是什么" aria-label="Permalink to &quot;27、Python中的生成器是什么？&quot;">​</a></h3><h3 id="_28、索引有什么作用-有哪些分类-有什么好处和坏处" tabindex="-1">28、索引有什么作用，有哪些分类，有什么好处和坏处？ <a class="header-anchor" href="#_28、索引有什么作用-有哪些分类-有什么好处和坏处" aria-label="Permalink to &quot;28、索引有什么作用，有哪些分类，有什么好处和坏处？&quot;">​</a></h3><h3 id="_29、1-22-和1-22的结果分别是什么" tabindex="-1">29、1&lt;(22)和1&lt;22的结果分别是什么？ <a class="header-anchor" href="#_29、1-22-和1-22的结果分别是什么" aria-label="Permalink to &quot;29、1&lt;(22)和1&lt;22的结果分别是什么？&quot;">​</a></h3><h3 id="_30、什么是域名解析" tabindex="-1">30、什么是域名解析 <a class="header-anchor" href="#_30、什么是域名解析" aria-label="Permalink to &quot;30、什么是域名解析&quot;">​</a></h3>`,66),p=[e];function t(r,c,y,E,i,h){return a(),n("div",null,p)}const u=s(l,[["render",t]]);export{d as __pageData,u as default};
