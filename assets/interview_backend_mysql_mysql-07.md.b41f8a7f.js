import{_ as a,o as e,c as o,V as t}from"./chunks/framework.c6d8cbec.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/mysql/mysql-07.md","filePath":"interview/backend/mysql/mysql-07.md"}'),r={name:"interview/backend/mysql/mysql-07.md"},s=t('<h3 id="_1、mysql中datetime和timestamp的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#1mysql%E4%B8%ADdatetime%E5%92%8Ctimestamp%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">1、MySQL中DATETIME和TIMESTAMP的区别</a> <a class="header-anchor" href="#_1、mysql中datetime和timestamp的区别" aria-label="Permalink to &quot;[1、MySQL中DATETIME和TIMESTAMP的区别](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题及答案整理，汇总版.md#1mysql中datetime和timestamp的区别)&quot;">​</a></h3><p>存储精度都为秒</p><p><strong>区别：</strong></p><p><strong>1、</strong> DATETIME 的日期范围是 1001——9999 年；TIMESTAMP 的时间范围是 1970——2038 年</p><p><strong>2、</strong> DATETIME 存储时间与时区无关；TIMESTAMP 存储时间与时区有关，显示的值也依赖于时区</p><p><strong>3、</strong> DATETIME 的存储空间为 8 字节；TIMESTAMP 的存储空间为 4 字节</p><p><strong>4、</strong> DATETIME 的默认值为 null；TIMESTAMP 的字段默认不为空(not null)，默认值为当前时间(CURRENT_TIMESTAMP)</p><h3 id="_2、简单描述mysql中-索引-主键-唯一索引-联合索引的区别-对数据库的性能有什么影响-从读写两方面" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#2%E7%AE%80%E5%8D%95%E6%8F%8F%E8%BF%B0mysql%E4%B8%AD%E7%B4%A2%E5%BC%95%E4%B8%BB%E9%94%AE%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E8%81%94%E5%90%88%E7%B4%A2%E5%BC%95%E7%9A%84%E5%8C%BA%E5%88%AB%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%80%A7%E8%83%BD%E6%9C%89%E4%BB%80%E4%B9%88%E5%BD%B1%E5%93%8D%E4%BB%8E%E8%AF%BB%E5%86%99%E4%B8%A4%E6%96%B9%E9%9D%A2" target="_blank" rel="noreferrer">2、简单描述MySQL中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）</a> <a class="header-anchor" href="#_2、简单描述mysql中-索引-主键-唯一索引-联合索引的区别-对数据库的性能有什么影响-从读写两方面" aria-label="Permalink to &quot;[2、简单描述MySQL中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题及答案整理，汇总版.md#2简单描述mysql中索引主键唯一索引联合索引的区别对数据库的性能有什么影响从读写两方面)&quot;">​</a></h3><p>索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。</p><p>普通索引(由关键字KEY或INDEX定义的索引)的唯一任务是加快对数据的访问速度。</p><p>普通索引允许被索引的数据列包含重复的值。如果能确定某个数据列将只包含彼此各不相同的值，在为这个数据列创建索引的时候就应该用关键字UNIQUE把它定义为一个唯一索引。也就是说，唯一索引可以保证数据记录的唯一性。</p><p>主键，是一种特殊的唯一索引，在一张表中只能定义一个主键索引，主键用于唯一标识一条记录，使用关键字 PRIMARY KEY 来创建。</p><p>索引可以覆盖多个数据列，如像INDEX(columnA, columnB)索引，这就是联合索引。</p><p>索引可以极大的提高数据的查询速度，但是会降低插入、删除、更新表的速度，因为在执行这些写操作时，还要操作索引文件。</p><h3 id="_3、什么是sql" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#3%E4%BB%80%E4%B9%88%E6%98%AFsql" target="_blank" rel="noreferrer">3、什么是SQL？</a> <a class="header-anchor" href="#_3、什么是sql" aria-label="Permalink to &quot;[3、什么是SQL？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题及答案整理，汇总版.md#3什么是sql)&quot;">​</a></h3><p>结构化查询语言(Structured Query Language)简称SQL，是一种数据库查询语言。</p><p><strong>作用：</strong></p><p>用于存取数据、查询、更新和管理关系数据库系统。</p><h3 id="_4、myisam表格将在哪里存储-并且还提供其存储格式" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#4myisam%E8%A1%A8%E6%A0%BC%E5%B0%86%E5%9C%A8%E5%93%AA%E9%87%8C%E5%AD%98%E5%82%A8%E5%B9%B6%E4%B8%94%E8%BF%98%E6%8F%90%E4%BE%9B%E5%85%B6%E5%AD%98%E5%82%A8%E6%A0%BC%E5%BC%8F" target="_blank" rel="noreferrer">4、MyISAM表格将在哪里存储，并且还提供其存储格式？</a> <a class="header-anchor" href="#_4、myisam表格将在哪里存储-并且还提供其存储格式" aria-label="Permalink to &quot;[4、MyISAM表格将在哪里存储，并且还提供其存储格式？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题及答案整理，汇总版.md#4myisam表格将在哪里存储并且还提供其存储格式)&quot;">​</a></h3><p><strong>每个MyISAM表格以三种格式存储在磁盘上：</strong></p><p><strong>1、</strong> ·“.frm”文件存储表定义</p><p><strong>2、</strong> ·数据文件具有“.MYD”（MYData）扩展名</p><p><strong>3、</strong> 索引文件具有“.MYI”（MYIndex）扩展名</p><h3 id="_5、mysql支持事务吗" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#5mysql%E6%94%AF%E6%8C%81%E4%BA%8B%E5%8A%A1%E5%90%97" target="_blank" rel="noreferrer">5、MySQL支持事务吗？</a> <a class="header-anchor" href="#_5、mysql支持事务吗" aria-label="Permalink to &quot;[5、MySQL支持事务吗？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题及答案整理，汇总版.md#5mysql支持事务吗)&quot;">​</a></h3><p>在缺省模式下，MySQL是autocommit模式的，所有的数据库更新操作都会即时提交，所以在缺省情况下，MySQL是不支持事务的。</p><p>但是如果你的MySQL表类型是使用InnoDB Tables 或 BDB tables的话，你的MySQL就可以使用事务处理,使用SET</p><p>AUTOCOMMIT=0就可以使MySQL允许在非autocommit模式，在非autocommit模式下，你必须使用COMMIT来提交你的更改，或者用ROLLBACK来回滚你的更改。</p><h3 id="_6、从锁的类别角度讲-mysql都有哪些锁呢" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#6%E4%BB%8E%E9%94%81%E7%9A%84%E7%B1%BB%E5%88%AB%E8%A7%92%E5%BA%A6%E8%AE%B2mysql%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%E9%94%81%E5%91%A2" target="_blank" rel="noreferrer">6、从锁的类别角度讲，MySQL都有哪些锁呢？</a> <a class="header-anchor" href="#_6、从锁的类别角度讲-mysql都有哪些锁呢" aria-label="Permalink to &quot;[6、从锁的类别角度讲，MySQL都有哪些锁呢？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题及答案整理，汇总版.md#6从锁的类别角度讲mysql都有哪些锁呢)&quot;">​</a></h3><p><strong>从锁的类别上来讲，有共享锁和排他锁</strong></p><p><strong>1、</strong> 共享锁: 又叫做读锁。当用户要进行数据的读取时，对数据加上共享锁。共享锁可以同时加上多个。</p><p><strong>2、</strong> 排他锁: 又叫做写锁。当用户要进行数据的写入时，对数据加上排他锁。排他锁只可以加一个，他和其他的排他锁，共享锁都相斥。</p><p>锁兼容性如下：</p><p><img src="https://user-gold-cdn.xitu.io/2020/5/23/172412db1d202759?w=1045&amp;h=229&amp;f=png&amp;s=68561#alt=" alt=""></p><h3 id="_7、mvcc熟悉吗-它的底层原理" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#7mvcc%E7%86%9F%E6%82%89%E5%90%97%E5%AE%83%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86" target="_blank" rel="noreferrer">7、MVCC熟悉吗，它的底层原理？</a> <a class="header-anchor" href="#_7、mvcc熟悉吗-它的底层原理" aria-label="Permalink to &quot;[7、MVCC熟悉吗，它的底层原理？](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题及答案整理，汇总版.md#7mvcc熟悉吗它的底层原理)&quot;">​</a></h3><p>MVCC,多版本并发控制,它是通过读取历史版本的数据，来降低并发事务冲突，从而提高并发性能的一种机制。</p><p><strong>「MVCC需要关注这几个知识点：」</strong></p><p><strong>1、</strong> 事务版本号</p><p><strong>2、</strong> 表的隐藏列</p><p><strong>3、</strong> undo log</p><p><strong>4、</strong> read view</p><h3 id="_8、存储时期" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#8%E5%AD%98%E5%82%A8%E6%97%B6%E6%9C%9F" target="_blank" rel="noreferrer">8、存储时期</a> <a class="header-anchor" href="#_8、存储时期" aria-label="Permalink to &quot;[8、存储时期](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题及答案整理，汇总版.md#8存储时期)&quot;">​</a></h3><p><strong>1、</strong> <code>Datatime:以 YYYY-MM-DD HH:MM:SS</code> 格式存储时期时间，精确到秒，占用8个字节得存储空间，datatime类型与时区无关</p><p><strong>2、</strong> Timestamp:以时间戳格式存储，占用4个字节，范围小1970-1-1到2038-1-19，显示依赖于所指定得时区，默认在第一个列行的数据修改时可以自动得修改timestamp列得值</p><p><strong>3、</strong> Date:（生日）占用得字节数比使用字符串.datatime.int储存要少，使用date只需要3个字节，存储日期月份，还可以利用日期时间函数进行日期间得计算</p><p><strong>4、</strong> Time:存储时间部分得数据</p><p><strong>5、</strong> 注意:不要使用字符串类型来存储日期时间数据（通常比字符串占用得储存空间小，在进行查找过滤可以利用日期得函数）</p><p><strong>6、</strong> 使用int存储日期时间不如使用timestamp类型</p><h3 id="_9、什么是mysql" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#9%E4%BB%80%E4%B9%88%E6%98%AFmysql" target="_blank" rel="noreferrer">9、什么是MySQL?</a> <a class="header-anchor" href="#_9、什么是mysql" aria-label="Permalink to &quot;[9、什么是MySQL?](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题及答案整理，汇总版.md#9什么是mysql)&quot;">​</a></h3><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。在Java企业级开发中非常常用，因为 MySQL 是开源免费的，并且方便扩展。</p><h3 id="_10、mysql的复制原理以及流程" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%95%B4%E7%90%86%EF%BC%8C%E6%B1%87%E6%80%BB%E7%89%88.md#10mysql%E7%9A%84%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8A%E6%B5%81%E7%A8%8B" target="_blank" rel="noreferrer">10、MySQL的复制原理以及流程</a> <a class="header-anchor" href="#_10、mysql的复制原理以及流程" aria-label="Permalink to &quot;[10、MySQL的复制原理以及流程](https://gitee.com/souyunku/DevBooks/blob/master/docs/MySQL/MySQL最新面试题及答案整理，汇总版.md#10mysql的复制原理以及流程)&quot;">​</a></h3><p>「主从复制原理，简言之，就三步曲，如下：」</p><p><strong>1、</strong> 主数据库有个bin-log二进制文件，纪录了所有增删改Sql语句。（binlog线程）</p><p><strong>2、</strong> 从数据库把主数据库的bin-log文件的sql语句复制过来。（io线程）</p><p><strong>3、</strong> 从数据库的relay-log重做日志文件中再执行一次这些sql语句。（Sql执行线程）</p><p><strong>上图主从复制分了五个步骤进行：</strong></p><p>步骤一：主库的更新事件(update、insert、delete)被写到binlog</p><p>步骤二：从库发起连接，连接到主库。</p><p>步骤三：此时主库创建一个binlog dump thread，把binlog的内容发送到从库。</p><p>步骤四：从库启动之后，创建一个I/O线程，读取主库传过来的binlog内容并写入到relay log</p><p>步骤五：还会创建一个SQL线程，从relay log里面读取内容，从Exec_Master_Log_Pos位置开始执行读取到的更新事件，将更新内容写入到slave的db</p><h3 id="_11、如何优化查询过程中的数据访问" tabindex="-1">11、如何优化查询过程中的数据访问 <a class="header-anchor" href="#_11、如何优化查询过程中的数据访问" aria-label="Permalink to &quot;11、如何优化查询过程中的数据访问&quot;">​</a></h3><h3 id="_12、如果某个表有近千万数据-crud比较慢-如何优化。" tabindex="-1">12、如果某个表有近千万数据，CRUD比较慢，如何优化。 <a class="header-anchor" href="#_12、如果某个表有近千万数据-crud比较慢-如何优化。" aria-label="Permalink to &quot;12、如果某个表有近千万数据，CRUD比较慢，如何优化。&quot;">​</a></h3><h3 id="_13、如果要存储用户的密码散列-应该使用什么字段进行存储" tabindex="-1">13、如果要存储用户的密码散列，应该使用什么字段进行存储？ <a class="header-anchor" href="#_13、如果要存储用户的密码散列-应该使用什么字段进行存储" aria-label="Permalink to &quot;13、如果要存储用户的密码散列，应该使用什么字段进行存储？&quot;">​</a></h3><h3 id="_14、数据库存储日期格式时-如何考虑时区转换问题" tabindex="-1">14、数据库存储日期格式时，如何考虑时区转换问题？ <a class="header-anchor" href="#_14、数据库存储日期格式时-如何考虑时区转换问题" aria-label="Permalink to &quot;14、数据库存储日期格式时，如何考虑时区转换问题？&quot;">​</a></h3><h3 id="_15、使用b-树的好处" tabindex="-1">15、使用B+树的好处 <a class="header-anchor" href="#_15、使用b-树的好处" aria-label="Permalink to &quot;15、使用B+树的好处&quot;">​</a></h3><h3 id="_16、视图的缺点" tabindex="-1">16、视图的缺点 <a class="header-anchor" href="#_16、视图的缺点" aria-label="Permalink to &quot;16、视图的缺点&quot;">​</a></h3><h3 id="_17、数据库结构优化" tabindex="-1">17、数据库结构优化 <a class="header-anchor" href="#_17、数据库结构优化" aria-label="Permalink to &quot;17、数据库结构优化&quot;">​</a></h3><h3 id="_18、索引有哪些优缺点" tabindex="-1">18、索引有哪些优缺点？ <a class="header-anchor" href="#_18、索引有哪些优缺点" aria-label="Permalink to &quot;18、索引有哪些优缺点？&quot;">​</a></h3><h3 id="_19、非主键索引一定会查询多次吗" tabindex="-1">19、非主键索引一定会查询多次吗？ <a class="header-anchor" href="#_19、非主键索引一定会查询多次吗" aria-label="Permalink to &quot;19、非主键索引一定会查询多次吗？&quot;">​</a></h3><h3 id="_20、按照锁的粒度分-数据库锁有哪些呢-锁机制与innodb锁算法" tabindex="-1">20、按照锁的粒度分，数据库锁有哪些呢？锁机制与InnoDB锁算法 <a class="header-anchor" href="#_20、按照锁的粒度分-数据库锁有哪些呢-锁机制与innodb锁算法" aria-label="Permalink to &quot;20、按照锁的粒度分，数据库锁有哪些呢？锁机制与InnoDB锁算法&quot;">​</a></h3><h3 id="_21、为什么要使用数据库" tabindex="-1">21、为什么要使用数据库 <a class="header-anchor" href="#_21、为什么要使用数据库" aria-label="Permalink to &quot;21、为什么要使用数据库&quot;">​</a></h3><h3 id="_22、如何通俗地理解三个范式" tabindex="-1">22、如何通俗地理解三个范式？ <a class="header-anchor" href="#_22、如何通俗地理解三个范式" aria-label="Permalink to &quot;22、如何通俗地理解三个范式？&quot;">​</a></h3><h3 id="_23、说说mysql-的基础架构图" tabindex="-1">23、说说MySQL 的基础架构图 <a class="header-anchor" href="#_23、说说mysql-的基础架构图" aria-label="Permalink to &quot;23、说说MySQL 的基础架构图&quot;">​</a></h3><h3 id="_24、什么是索引" tabindex="-1">24、什么是索引？ <a class="header-anchor" href="#_24、什么是索引" aria-label="Permalink to &quot;24、什么是索引？&quot;">​</a></h3><h3 id="_25、数据库索引的原理-为什么要用-b-树-为什么不用二叉树" tabindex="-1">25、数据库索引的原理，为什么要用 B+树，为什么不用二叉树？ <a class="header-anchor" href="#_25、数据库索引的原理-为什么要用-b-树-为什么不用二叉树" aria-label="Permalink to &quot;25、数据库索引的原理，为什么要用 B+树，为什么不用二叉树？&quot;">​</a></h3><h3 id="_26、sql语句主要分为哪几类" tabindex="-1">26、SQL语句主要分为哪几类 <a class="header-anchor" href="#_26、sql语句主要分为哪几类" aria-label="Permalink to &quot;26、SQL语句主要分为哪几类&quot;">​</a></h3><h3 id="_27、覆盖索引、回表等这些-了解过吗" tabindex="-1">27、覆盖索引、回表等这些，了解过吗？ <a class="header-anchor" href="#_27、覆盖索引、回表等这些-了解过吗" aria-label="Permalink to &quot;27、覆盖索引、回表等这些，了解过吗？&quot;">​</a></h3><h3 id="_28、什么是聚簇索引-何时使用聚簇索引与非聚簇索引" tabindex="-1">28、什么是聚簇索引？何时使用聚簇索引与非聚簇索引 <a class="header-anchor" href="#_28、什么是聚簇索引-何时使用聚簇索引与非聚簇索引" aria-label="Permalink to &quot;28、什么是聚簇索引？何时使用聚簇索引与非聚簇索引&quot;">​</a></h3><h3 id="_29、innodb的事务实现原理" tabindex="-1">29、Innodb的事务实现原理？ <a class="header-anchor" href="#_29、innodb的事务实现原理" aria-label="Permalink to &quot;29、Innodb的事务实现原理？&quot;">​</a></h3><h3 id="_30、mysql中innodb引擎的行锁是怎么实现的" tabindex="-1">30、MySQL中InnoDB引擎的行锁是怎么实现的？ <a class="header-anchor" href="#_30、mysql中innodb引擎的行锁是怎么实现的" aria-label="Permalink to &quot;30、MySQL中InnoDB引擎的行锁是怎么实现的？&quot;">​</a></h3>',80),E=[s];function n(l,i,h,m,d,B){return e(),o("div",null,E)}const u=a(r,[["render",n]]);export{c as __pageData,u as default};
