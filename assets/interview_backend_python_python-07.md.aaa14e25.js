import{_ as s,o as a,c as n,V as o}from"./chunks/framework.c6d8cbec.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/python/python-07.md","filePath":"interview/backend/python/python-07.md"}'),l={name:"interview/backend/python/python-07.md"},p=o(`<h3 id="_1、为什么python执行速度慢-我们如何改进它" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#1%E4%B8%BA%E4%BB%80%E4%B9%88python%E6%89%A7%E8%A1%8C%E9%80%9F%E5%BA%A6%E6%85%A2%E6%88%91%E4%BB%AC%E5%A6%82%E4%BD%95%E6%94%B9%E8%BF%9B%E5%AE%83" target="_blank" rel="noreferrer">1、为什么Python执行速度慢，我们如何改进它？</a> <a class="header-anchor" href="#_1、为什么python执行速度慢-我们如何改进它" aria-label="Permalink to &quot;[1、为什么Python执行速度慢，我们如何改进它？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，2021年面试题及答案汇总.md#1为什么python执行速度慢我们如何改进它)&quot;">​</a></h3><p>Python代码执行缓慢的原因，是因为它是一种解释型语言。它的代码在运行时进行解释，而不是编译为本地语言。</p><p>为了提高Python代码的速度，我们可以使用CPython、Numba，或者我们也可以对代码进行一些修改。</p><p><strong>1、</strong> 减少内存占用。</p><p><strong>2、</strong> 使用内置函数和库。</p><p><strong>3、</strong> 将计算移到循环外。</p><p><strong>4、</strong> 保持小的代码库。</p><p><strong>5、</strong> 避免不必要的循环</p><h3 id="_2、解释python中的join-和split-函数" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#2%E8%A7%A3%E9%87%8Apython%E4%B8%AD%E7%9A%84join%E5%92%8Csplit%E5%87%BD%E6%95%B0" target="_blank" rel="noreferrer">2、解释Python中的join()和split()函数</a> <a class="header-anchor" href="#_2、解释python中的join-和split-函数" aria-label="Permalink to &quot;[2、解释Python中的join()和split()函数](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，2021年面试题及答案汇总.md#2解释python中的join和split函数)&quot;">​</a></h3><p>Join()能让我们将指定字符添加至字符串中。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; &#39;,&#39;.join(&#39;12345&#39;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; &#39;,&#39;.join(&#39;12345&#39;)</span></span></code></pre></div><p>运行结果：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">‘1,2,3,4,5’</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">‘1,2,3,4,5’</span></span></code></pre></div><p>Split()能让我们用指定字符分割字符串。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&gt;&gt;&gt; &#39;1,2,3,4,5&#39;.split(&#39;,&#39;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;&gt;&gt; &#39;1,2,3,4,5&#39;.split(&#39;,&#39;)</span></span></code></pre></div><p>运行结果：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">[‘1’, ‘2’, ‘3’, ‘4’, ‘5’]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[‘1’, ‘2’, ‘3’, ‘4’, ‘5’]</span></span></code></pre></div><h3 id="_3、如何判断一个值是方法还是函数" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#3%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E5%80%BC%E6%98%AF%E6%96%B9%E6%B3%95%E8%BF%98%E6%98%AF%E5%87%BD%E6%95%B0" target="_blank" rel="noreferrer">3、如何判断一个值是方法还是函数？</a> <a class="header-anchor" href="#_3、如何判断一个值是方法还是函数" aria-label="Permalink to &quot;[3、如何判断一个值是方法还是函数？](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，2021年面试题及答案汇总.md#3如何判断一个值是方法还是函数)&quot;">​</a></h3><p><strong>1、</strong> 使用type()来判断，如果是method为方法，如果是function则是函数。</p><p><strong>2、</strong> 与类和实例无绑定关系的function都属于函数（function）</p><p><strong>3、</strong> 与类和实例有绑定关系的function都属于方法</p><h3 id="_4、写个函数接收一个文件夹名称作为参数-显示文件夹中文件的路径-以及其中包含的文件夹中文件的如今" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#4%E5%86%99%E4%B8%AA%E5%87%BD%E6%95%B0%E6%8E%A5%E6%94%B6%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D%E7%A7%B0%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E6%98%BE%E7%A4%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E6%96%87%E4%BB%B6%E7%9A%84%E8%B7%AF%E5%BE%84%E4%BB%A5%E5%8F%8A%E5%85%B6%E4%B8%AD%E5%8C%85%E5%90%AB%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E6%96%87%E4%BB%B6%E7%9A%84%E5%A6%82%E4%BB%8A" target="_blank" rel="noreferrer">4、写个函数接收一个文件夹名称作为参数，显示文件夹中文件的路径，以及其中包含的文件夹中文件的如今</a> <a class="header-anchor" href="#_4、写个函数接收一个文件夹名称作为参数-显示文件夹中文件的路径-以及其中包含的文件夹中文件的如今" aria-label="Permalink to &quot;[4、写个函数接收一个文件夹名称作为参数，显示文件夹中文件的路径，以及其中包含的文件夹中文件的如今](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，2021年面试题及答案汇总.md#4写个函数接收一个文件夹名称作为参数显示文件夹中文件的路径以及其中包含的文件夹中文件的如今)&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;"># 方法一</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> os</span></span>
<span class="line"><span style="color:#F286C4;">def</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Test1</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">rootDir</span><span style="color:#F6F6F4;">):</span></span>
<span class="line"><span style="color:#F6F6F4;">list_dirs </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> os.walk(rootDir)</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> root, dirs, files </span><span style="color:#F286C4;">in</span><span style="color:#F6F6F4;"> list_dirs:</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> d </span><span style="color:#F286C4;">in</span><span style="color:#F6F6F4;"> dirs:</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(os.path.join(root, d))</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> f </span><span style="color:#F286C4;">in</span><span style="color:#F6F6F4;"> files:</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(os.path.join(root, f))</span></span>
<span class="line"><span style="color:#F6F6F4;">Test1(</span><span style="color:#F286C4;">r</span><span style="color:#EE6666;">&#39;</span><span style="color:#E7EE98;">C:</span><span style="color:#F286C4;">\\U</span><span style="color:#E7EE98;">sers</span><span style="color:#F286C4;">\\f</span><span style="color:#E7EE98;">elix</span><span style="color:#97E1F1;font-style:italic;">\\D</span><span style="color:#E7EE98;">esktop</span><span style="color:#F286C4;">\\a</span><span style="color:#E7EE98;">aa</span><span style="color:#EE6666;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#############</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#7B7F8B;"># 方法二</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> os</span></span>
<span class="line"><span style="color:#F286C4;">def</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Test2</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">rootDir</span><span style="color:#F6F6F4;">):</span></span>
<span class="line"><span style="color:#F6F6F4;">paths</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">os.listdir(rootDir)</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> lis </span><span style="color:#F286C4;">in</span><span style="color:#F6F6F4;"> paths:</span></span>
<span class="line"><span style="color:#F6F6F4;">path</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">os.path.join(rootDir,lis)</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(path)</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> os.path.isdir(path):</span></span>
<span class="line"><span style="color:#F6F6F4;"> Test2(path)</span></span>
<span class="line"><span style="color:#F6F6F4;">Test2(</span><span style="color:#F286C4;">r</span><span style="color:#EE6666;">&#39;</span><span style="color:#E7EE98;">C:</span><span style="color:#F286C4;">\\U</span><span style="color:#E7EE98;">sers</span><span style="color:#F286C4;">\\f</span><span style="color:#E7EE98;">elix</span><span style="color:#97E1F1;font-style:italic;">\\D</span><span style="color:#E7EE98;">esktop</span><span style="color:#F286C4;">\\a</span><span style="color:#E7EE98;">aa</span><span style="color:#EE6666;">&#39;</span><span style="color:#F6F6F4;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 方法一</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> os</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test1</span><span style="color:#24292E;">(rootDir):</span></span>
<span class="line"><span style="color:#24292E;">list_dirs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.walk(rootDir)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> root, dirs, files </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> list_dirs:</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> d </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> dirs:</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(os.path.join(root, d))</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> f </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> files:</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(os.path.join(root, f))</span></span>
<span class="line"><span style="color:#24292E;">Test1(</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&#39;C:</span><span style="color:#22863A;font-weight:bold;">\\U</span><span style="color:#032F62;">sers</span><span style="color:#22863A;font-weight:bold;">\\f</span><span style="color:#032F62;">elix</span><span style="color:#005CC5;">\\D</span><span style="color:#032F62;">esktop</span><span style="color:#22863A;font-weight:bold;">\\a</span><span style="color:#032F62;">aa&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#############&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 方法二</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> os</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test2</span><span style="color:#24292E;">(rootDir):</span></span>
<span class="line"><span style="color:#24292E;">paths</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">os.listdir(rootDir)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> lis </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> paths:</span></span>
<span class="line"><span style="color:#24292E;">path</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">os.path.join(rootDir,lis)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(path)</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> os.path.isdir(path):</span></span>
<span class="line"><span style="color:#24292E;"> Test2(path)</span></span>
<span class="line"><span style="color:#24292E;">Test2(</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&#39;C:</span><span style="color:#22863A;font-weight:bold;">\\U</span><span style="color:#032F62;">sers</span><span style="color:#22863A;font-weight:bold;">\\f</span><span style="color:#032F62;">elix</span><span style="color:#005CC5;">\\D</span><span style="color:#032F62;">esktop</span><span style="color:#22863A;font-weight:bold;">\\a</span><span style="color:#032F62;">aa&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="_5、使用yield实现一个协程" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#5%E4%BD%BF%E7%94%A8yield%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%8D%8F%E7%A8%8B" target="_blank" rel="noreferrer">5、使用yield实现一个协程</a> <a class="header-anchor" href="#_5、使用yield实现一个协程" aria-label="Permalink to &quot;[5、使用yield实现一个协程](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，2021年面试题及答案汇总.md#5使用yield实现一个协程)&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">def</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">consumer</span><span style="color:#F6F6F4;">():</span></span>
<span class="line"><span style="color:#F6F6F4;">r </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">True</span><span style="color:#F6F6F4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">n </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">yield</span><span style="color:#F6F6F4;"> r</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> n </span><span style="color:#F286C4;">is</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">None</span><span style="color:#F6F6F4;">:</span></span>
<span class="line"><span style="color:#F286C4;">return</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">[CONSUMER] Consuming </span><span style="color:#BF9EEE;">%s</span><span style="color:#E7EE98;">...</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">%</span><span style="color:#F6F6F4;"> n)</span></span>
<span class="line"><span style="color:#F6F6F4;">r </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">200 OK</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">def</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">produce</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">c</span><span style="color:#F6F6F4;">):</span></span>
<span class="line"><span style="color:#F6F6F4;">c.send(</span><span style="color:#BF9EEE;">None</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">n </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span></span>
<span class="line"><span style="color:#F286C4;">while</span><span style="color:#F6F6F4;"> n </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">5</span><span style="color:#F6F6F4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">n </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> n </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">1</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">[PRODUCER] Producing </span><span style="color:#BF9EEE;">%s</span><span style="color:#E7EE98;">...</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">%</span><span style="color:#F6F6F4;"> n)</span></span>
<span class="line"><span style="color:#F6F6F4;">r </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> c.send(n)</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">[PRODUCER] Consumer return: </span><span style="color:#BF9EEE;">%s</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">%</span><span style="color:#F6F6F4;"> r)</span></span>
<span class="line"><span style="color:#F6F6F4;">c.close()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">c </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> consumer()</span></span>
<span class="line"><span style="color:#F6F6F4;">produce(c)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">consumer</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">yield</span><span style="color:#24292E;"> r</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;[CONSUMER] Consuming </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">...&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> n)</span></span>
<span class="line"><span style="color:#24292E;">r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;200 OK&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">produce</span><span style="color:#24292E;">(c):</span></span>
<span class="line"><span style="color:#24292E;">c.send(</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;[PRODUCER] Producing </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">...&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> n)</span></span>
<span class="line"><span style="color:#24292E;">r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> c.send(n)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;[PRODUCER] Consumer return: </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> r)</span></span>
<span class="line"><span style="color:#24292E;">c.close()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> consumer()</span></span>
<span class="line"><span style="color:#24292E;">produce(c)</span></span></code></pre></div><h3 id="_6、把a-aaabbcccdddde-这种形式的字符串-压缩成a3b2c3d4e1这种形式。" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#6%E6%8A%8Aa=&#39;aaabbcccdddde&#39;%E8%BF%99%E7%A7%8D%E5%BD%A2%E5%BC%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%8B%E7%BC%A9%E6%88%90a3b2c3d4e1%E8%BF%99%E7%A7%8D%E5%BD%A2%E5%BC%8F%E3%80%82" target="_blank" rel="noreferrer">6、把a=&#39;aaabbcccdddde&#39;这种形式的字符串，压缩成a3b2c3d4e1这种形式。</a> <a class="header-anchor" href="#_6、把a-aaabbcccdddde-这种形式的字符串-压缩成a3b2c3d4e1这种形式。" aria-label="Permalink to &quot;[6、把a=&#39;aaabbcccdddde&#39;这种形式的字符串，压缩成a3b2c3d4e1这种形式。](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，2021年面试题及答案汇总.md#6把a=&#39;aaabbcccdddde&#39;这种形式的字符串压缩成a3b2c3d4e1这种形式。)&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">a</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">aaabbcccdddde</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">aa</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F286C4;">for</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">in</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">sorted</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">list</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">set</span><span style="color:#F6F6F4;">(a)),</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">a.index):</span></span>
<span class="line"><span style="color:#F6F6F4;">aa</span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;">aa</span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;">i</span><span style="color:#F286C4;">+</span><span style="color:#97E1F1;font-style:italic;">str</span><span style="color:#F6F6F4;">(a.count(i))</span></span>
<span class="line"><span style="color:#97E1F1;">print</span><span style="color:#F6F6F4;">(aa)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">a</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;aaabbcccdddde&#39;</span></span>
<span class="line"><span style="color:#24292E;">aa</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sorted</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">list</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(a)),</span><span style="color:#E36209;">key</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">a.index):</span></span>
<span class="line"><span style="color:#24292E;">aa</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">aa</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">i</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(a.count(i))</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(aa)</span></span></code></pre></div><h3 id="_7、什么是反射-以及应用场景" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#7%E4%BB%80%E4%B9%88%E6%98%AF%E5%8F%8D%E5%B0%84%E4%BB%A5%E5%8F%8A%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF" target="_blank" rel="noreferrer">7、什么是反射，以及应用场景</a> <a class="header-anchor" href="#_7、什么是反射-以及应用场景" aria-label="Permalink to &quot;[7、什么是反射，以及应用场景](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，2021年面试题及答案汇总.md#7什么是反射以及应用场景)&quot;">​</a></h3><p><a href="https://www.cnblogs.com/IT-Scavenger/p/9394306.html" target="_blank" rel="noreferrer">什么是反射的解释</a></p><p><strong>1、</strong> 反射就是通过字符串的形式，导入模块；通过字符串的形式，去模块寻找指定函数，并执行。利用字符串的形式去对象（模块）中操作（查找/获取/删除/添加）成员，一种基于字符串的事件驱动！</p><p><strong>2、</strong> 应用场景：当我们动态的输入一个模块名的时候就可以使用到反射。</p><p><strong>3、</strong> 通过hasattr，getattr，delattr，setattr等四个函数来操作</p><h3 id="_8、文件操作时-xreadlines和readlines的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#8%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E6%97%B6xreadlines%E5%92%8Creadlines%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">8、文件操作时，xreadlines和readlines的区别</a> <a class="header-anchor" href="#_8、文件操作时-xreadlines和readlines的区别" aria-label="Permalink to &quot;[8、文件操作时，xreadlines和readlines的区别](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，2021年面试题及答案汇总.md#8文件操作时xreadlines和readlines的区别)&quot;">​</a></h3><p><strong>1、</strong> xreadlines返回的是一个生成器</p><p><strong>2、</strong> readlines返回的是一个列表</p><h3 id="_9、python中append-insert和extend的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#9python%E4%B8%ADappendinsert%E5%92%8Cextend%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">9、Python中append，insert和extend的区别?</a> <a class="header-anchor" href="#_9、python中append-insert和extend的区别" aria-label="Permalink to &quot;[9、Python中append，insert和extend的区别?](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，2021年面试题及答案汇总.md#9python中appendinsert和extend的区别)&quot;">​</a></h3><p>append：在列表末尾添加新元素。</p><p>insert：在列表的特定位置添加元素。</p><p>extend：通过添加新列表来扩展列表。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">numbers = [1,2,3,4,5]</span></span>
<span class="line"><span style="color:#f6f6f4;">numbers.append(6)</span></span>
<span class="line"><span style="color:#f6f6f4;">print(numbers)</span></span>
<span class="line"><span style="color:#f6f6f4;">&gt;[1,2,3,4,5,6]</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">## insert(position,value)</span></span>
<span class="line"><span style="color:#f6f6f4;">numbers.insert(2,7)  </span></span>
<span class="line"><span style="color:#f6f6f4;">print(numbers)</span></span>
<span class="line"><span style="color:#f6f6f4;">&gt;[1,2,7,4,5,6]</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">numbers.extend([7,8,9])</span></span>
<span class="line"><span style="color:#f6f6f4;">print(numbers)</span></span>
<span class="line"><span style="color:#f6f6f4;">&gt;[1,2,7,4,5,6,7,8,9]</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">numbers.append([4,5])</span></span>
<span class="line"><span style="color:#f6f6f4;">&gt;[1,2,7,4,5,6,7,8,9,[4,5]]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">numbers = [1,2,3,4,5]</span></span>
<span class="line"><span style="color:#24292e;">numbers.append(6)</span></span>
<span class="line"><span style="color:#24292e;">print(numbers)</span></span>
<span class="line"><span style="color:#24292e;">&gt;[1,2,3,4,5,6]</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">## insert(position,value)</span></span>
<span class="line"><span style="color:#24292e;">numbers.insert(2,7)  </span></span>
<span class="line"><span style="color:#24292e;">print(numbers)</span></span>
<span class="line"><span style="color:#24292e;">&gt;[1,2,7,4,5,6]</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">numbers.extend([7,8,9])</span></span>
<span class="line"><span style="color:#24292e;">print(numbers)</span></span>
<span class="line"><span style="color:#24292e;">&gt;[1,2,7,4,5,6,7,8,9]</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">numbers.append([4,5])</span></span>
<span class="line"><span style="color:#24292e;">&gt;[1,2,7,4,5,6,7,8,9,[4,5]]</span></span></code></pre></div><h3 id="_10、简述事务及其特性" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python%E6%9C%80%E6%96%B0%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C2021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E7%AD%94%E6%A1%88%E6%B1%87%E6%80%BB.md#10%E7%AE%80%E8%BF%B0%E4%BA%8B%E5%8A%A1%E5%8F%8A%E5%85%B6%E7%89%B9%E6%80%A7" target="_blank" rel="noreferrer">10、简述事务及其特性</a> <a class="header-anchor" href="#_10、简述事务及其特性" aria-label="Permalink to &quot;[10、简述事务及其特性](https://gitee.com/souyunku/DevBooks/blob/master/docs/Python/Python最新面试题，2021年面试题及答案汇总.md#10简述事务及其特性)&quot;">​</a></h3><p>事务是用户定义的一个数据库操作序列，这些操作要么全做要么全不做，是一个不可分割的工作单位</p><p>事务具有4个特性：原子性、一致性、隔离性和持续性。</p><p><strong>1、</strong> 原子性：事务是数据库的逻辑工作单位，事务中包括的诸操作要么都做，要么都不做。</p><p><strong>2、</strong> 一致性：事务执行的结果必须是使数据库从一个一致性状态变到另一个一致性状态。</p><p><strong>3、</strong> 隔离性：一个事务的执行不能被其他事务干扰。即一个事务内部的操作及使用的数据对其他并发事务是隔离的，并发执行的各个事务之间不能互相干扰。</p><p><strong>4、</strong> 持续性：持续性也称永久性，指一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。接下来的其他操作或故障不应该对其执行结果有任何影响。</p><h3 id="_11、什么是cdn" tabindex="-1">11、什么是cdn <a class="header-anchor" href="#_11、什么是cdn" aria-label="Permalink to &quot;11、什么是cdn&quot;">​</a></h3><h3 id="_12、将列表按照下列规则排序" tabindex="-1">12、将列表按照下列规则排序： <a class="header-anchor" href="#_12、将列表按照下列规则排序" aria-label="Permalink to &quot;12、将列表按照下列规则排序：&quot;">​</a></h3><h3 id="_13、mysql索引种类" tabindex="-1">13、MySQL索引种类 <a class="header-anchor" href="#_13、mysql索引种类" aria-label="Permalink to &quot;13、MySQL索引种类&quot;">​</a></h3><h3 id="_14、什么是socket-简述基于tcp协议的socket通信流程" tabindex="-1">14、什么是socket？简述基于tcp协议的socket通信流程？ <a class="header-anchor" href="#_14、什么是socket-简述基于tcp协议的socket通信流程" aria-label="Permalink to &quot;14、什么是socket？简述基于tcp协议的socket通信流程？&quot;">​</a></h3><h3 id="_15、a-dict-zip-a-b-c-d-e-1-2-3-4-5-请问a是什么" tabindex="-1">15、a = dict(zip((&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;),(1,2,3,4,5))) 请问a是什么？ <a class="header-anchor" href="#_15、a-dict-zip-a-b-c-d-e-1-2-3-4-5-请问a是什么" aria-label="Permalink to &quot;15、a = dict(zip((&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;),(1,2,3,4,5))) 请问a是什么？&quot;">​</a></h3><h3 id="_16、char和varchar的区别" tabindex="-1">16、char和varchar的区别 <a class="header-anchor" href="#_16、char和varchar的区别" aria-label="Permalink to &quot;16、char和varchar的区别&quot;">​</a></h3><h3 id="_17、编写程序-打印斐波那契数列的前十项" tabindex="-1">17、编写程序，打印斐波那契数列的前十项 <a class="header-anchor" href="#_17、编写程序-打印斐波那契数列的前十项" aria-label="Permalink to &quot;17、编写程序，打印斐波那契数列的前十项&quot;">​</a></h3><h3 id="_18、列举创建索引但是无法命中索引的情况" tabindex="-1">18、列举创建索引但是无法命中索引的情况 <a class="header-anchor" href="#_18、列举创建索引但是无法命中索引的情况" aria-label="Permalink to &quot;18、列举创建索引但是无法命中索引的情况&quot;">​</a></h3><h3 id="_19、手写一个栈" tabindex="-1">19、手写一个栈 <a class="header-anchor" href="#_19、手写一个栈" aria-label="Permalink to &quot;19、手写一个栈&quot;">​</a></h3><h3 id="_20、简述数据库分库分表" tabindex="-1">20、简述数据库分库分表 <a class="header-anchor" href="#_20、简述数据库分库分表" aria-label="Permalink to &quot;20、简述数据库分库分表&quot;">​</a></h3><h3 id="_21、找出两个列表中相同的元素和不同的元素" tabindex="-1">21、找出两个列表中相同的元素和不同的元素 <a class="header-anchor" href="#_21、找出两个列表中相同的元素和不同的元素" aria-label="Permalink to &quot;21、找出两个列表中相同的元素和不同的元素&quot;">​</a></h3><h3 id="_22、写一个函数-计算出以下字母所代表的数字-每个字母值不一样" tabindex="-1">22、写一个函数，计算出以下字母所代表的数字，每个字母值不一样 <a class="header-anchor" href="#_22、写一个函数-计算出以下字母所代表的数字-每个字母值不一样" aria-label="Permalink to &quot;22、写一个函数，计算出以下字母所代表的数字，每个字母值不一样&quot;">​</a></h3><h3 id="_23、怎么移除一个字符串中的前导空格" tabindex="-1">23、怎么移除一个字符串中的前导空格？ <a class="header-anchor" href="#_23、怎么移除一个字符串中的前导空格" aria-label="Permalink to &quot;23、怎么移除一个字符串中的前导空格？&quot;">​</a></h3><h3 id="_24、is和-的区别" tabindex="-1">24、is和==的区别 <a class="header-anchor" href="#_24、is和-的区别" aria-label="Permalink to &quot;24、is和==的区别&quot;">​</a></h3><h3 id="_25、简述sql注入原理-以及如何在代码层面房子sql注入" tabindex="-1">25、简述SQL注入原理，以及如何在代码层面房子sql注入 <a class="header-anchor" href="#_25、简述sql注入原理-以及如何在代码层面房子sql注入" aria-label="Permalink to &quot;25、简述SQL注入原理，以及如何在代码层面房子sql注入&quot;">​</a></h3><h3 id="_26、python解释器种类以及特点" tabindex="-1">26、python解释器种类以及特点 <a class="header-anchor" href="#_26、python解释器种类以及特点" aria-label="Permalink to &quot;26、python解释器种类以及特点&quot;">​</a></h3><h3 id="_27、traceroute使用哪种网络协议" tabindex="-1">27、traceroute使用哪种网络协议 <a class="header-anchor" href="#_27、traceroute使用哪种网络协议" aria-label="Permalink to &quot;27、traceroute使用哪种网络协议&quot;">​</a></h3><h3 id="_28、简述python字符串的驻留机制" tabindex="-1">28、简述python字符串的驻留机制 <a class="header-anchor" href="#_28、简述python字符串的驻留机制" aria-label="Permalink to &quot;28、简述python字符串的驻留机制&quot;">​</a></h3><h3 id="_29、如何实现-1-2-3-变成-1-2-3" tabindex="-1">29、如何实现&quot;1.2.3&quot;变成[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;]? <a class="header-anchor" href="#_29、如何实现-1-2-3-变成-1-2-3" aria-label="Permalink to &quot;29、如何实现&quot;1.2.3&quot;变成[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;]?&quot;">​</a></h3><h3 id="_30、isinstance和type的作用" tabindex="-1">30、isinstance和type的作用 <a class="header-anchor" href="#_30、isinstance和type的作用" aria-label="Permalink to &quot;30、isinstance和type的作用&quot;">​</a></h3>`,67),e=[p];function t(r,c,i,y,E,F){return a(),n("div",null,e)}const A=s(l,[["render",t]]);export{h as __pageData,A as default};
