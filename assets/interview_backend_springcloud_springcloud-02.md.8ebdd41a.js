import{_ as e,o as a,c as o,V as r}from"./chunks/framework.c6d8cbec.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/springcloud/springcloud-02.md","filePath":"interview/backend/springcloud/springcloud-02.md"}'),t={name:"interview/backend/springcloud/springcloud-02.md"},n=r('<h3 id="_1、设计微服务的最佳实践是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#1%E8%AE%BE%E8%AE%A1%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">1、设计微服务的最佳实践是什么？</a> <a class="header-anchor" href="#_1、设计微服务的最佳实践是什么" aria-label="Permalink to &quot;[1、设计微服务的最佳实践是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新2021年面试题大汇总，附答案.md#1设计微服务的最佳实践是什么)&quot;">​</a></h3><p>以下是设计微服务的最佳实践：</p><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0816/01/img_4.png#alt=img%5C_4.png" alt=""></p><p>图4：设计微服务的最佳实践 – 微服务访谈问题</p><h3 id="_2、什么是rest-restful以及它的用途是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#2%E4%BB%80%E4%B9%88%E6%98%AFrest-/-restful%E4%BB%A5%E5%8F%8A%E5%AE%83%E7%9A%84%E7%94%A8%E9%80%94%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">2、什么是REST / RESTful以及它的用途是什么？</a> <a class="header-anchor" href="#_2、什么是rest-restful以及它的用途是什么" aria-label="Permalink to &quot;[2、什么是REST / RESTful以及它的用途是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新2021年面试题大汇总，附答案.md#2什么是rest-/-restful以及它的用途是什么)&quot;">​</a></h3><p>Representational State Transfer（REST）/ RESTful Web服务是一种帮助计算机系统通过Internet进行通信的架构风格。这使得微服务更容易理解和实现。</p><p>微服务可以使用或不使用RESTful API实现，但使用RESTful API构建松散耦合的微服务总是更容易。</p><h3 id="_3、什么是feigin-它的优点是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#3%E4%BB%80%E4%B9%88%E6%98%AFfeigin%E5%AE%83%E7%9A%84%E4%BC%98%E7%82%B9%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">3、什么是feigin？它的优点是什么？</a> <a class="header-anchor" href="#_3、什么是feigin-它的优点是什么" aria-label="Permalink to &quot;[3、什么是feigin？它的优点是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新2021年面试题大汇总，附答案.md#3什么是feigin它的优点是什么)&quot;">​</a></h3><p><strong>1、</strong> feign采用的是基于接口的注解</p><p><strong>2、</strong> feign整合了ribbon，具有负载均衡的能力</p><p><strong>3、</strong> 整合了Hystrix，具有熔断的能力</p><p><strong>使用:</strong></p><p><strong>1、</strong> 添加pom依赖。</p><p><strong>2、</strong> 启动类添加<a href="/docs/EnableFeignClients.html">@EnableFeignClients </a></p><p><strong>3、</strong> 定义一个接口@FeignClient(name=“xxx”)指定调用哪个服务</p><h3 id="_4、负载平衡的意义什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#4%E8%B4%9F%E8%BD%BD%E5%B9%B3%E8%A1%A1%E7%9A%84%E6%84%8F%E4%B9%89%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">4、负载平衡的意义什么？</a> <a class="header-anchor" href="#_4、负载平衡的意义什么" aria-label="Permalink to &quot;[4、负载平衡的意义什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新2021年面试题大汇总，附答案.md#4负载平衡的意义什么)&quot;">​</a></h3><p>在计算中，负载平衡可以改善跨计算机，计算机集群，网络链接，中央处理单元或磁盘驱动器等多种计算资源的工作负载分布。负载平衡旨在优化资源使用，最大化吞吐量，最小化响应时间并避免任何单一资源的过载。使用多个组件进行负载平衡而不是单个组件可能会通过冗余来提高可靠性和可用性。负载平衡通常涉及专用软件或硬件，例如多层交换机或域名系统服务器进程。</p><h3 id="_5、服务网关的作用" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#5%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E7%9A%84%E4%BD%9C%E7%94%A8" target="_blank" rel="noreferrer">5、服务网关的作用</a> <a class="header-anchor" href="#_5、服务网关的作用" aria-label="Permalink to &quot;[5、服务网关的作用](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新2021年面试题大汇总，附答案.md#5服务网关的作用)&quot;">​</a></h3><p><strong>1、</strong> 简化客户端调用复杂度，统一处理外部请求。</p><p><strong>2、</strong> 数据裁剪以及聚合，根据不同的接口需求，对数据加工后对外。</p><p><strong>3、</strong> 多渠道支持，针对不同的客户端提供不同的网关支持。</p><p><strong>4、</strong> 遗留系统的微服务化改造，可以作为新老系统的中转组件。</p><p><strong>5、</strong> 统一处理调用过程中的安全、权限问题。</p><h3 id="_6、服务降级底层是如何实现的" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#6%E6%9C%8D%E5%8A%A1%E9%99%8D%E7%BA%A7%E5%BA%95%E5%B1%82%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84" target="_blank" rel="noreferrer">6、服务降级底层是如何实现的？</a> <a class="header-anchor" href="#_6、服务降级底层是如何实现的" aria-label="Permalink to &quot;[6、服务降级底层是如何实现的？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新2021年面试题大汇总，附答案.md#6服务降级底层是如何实现的)&quot;">​</a></h3><p>Hystrix实现服务降级的功能是通过重写HystrixCommand中的getFallback()方法，当Hystrix的run方法或construct执行发生错误时转而执行getFallback()方法。</p><h3 id="_7、微服务的端到端测试意味着什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#7%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%AB%AF%E5%88%B0%E7%AB%AF%E6%B5%8B%E8%AF%95%E6%84%8F%E5%91%B3%E7%9D%80%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">7、微服务的端到端测试意味着什么？</a> <a class="header-anchor" href="#_7、微服务的端到端测试意味着什么" aria-label="Permalink to &quot;[7、微服务的端到端测试意味着什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新2021年面试题大汇总，附答案.md#7微服务的端到端测试意味着什么)&quot;">​</a></h3><p>端到端测试 验证工作流中的所有流程，以检查一切是否按预期工作。它还确保系统以统一的方式工作，从而满足业务需求。</p><h3 id="_8、spring-cloud-断路器的作用是什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#8spring-cloud-%E6%96%AD%E8%B7%AF%E5%99%A8%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">8、spring cloud 断路器的作用是什么？</a> <a class="header-anchor" href="#_8、spring-cloud-断路器的作用是什么" aria-label="Permalink to &quot;[8、spring cloud 断路器的作用是什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新2021年面试题大汇总，附答案.md#8spring-cloud-断路器的作用是什么)&quot;">​</a></h3><p>在分布式架构中，断路器模式的作用也是类似的，当某个服务单元发生故障（类似用电器发生短路）之后，通过断路器的故障监控（类似熔断保险丝），向调用方返回一个错误响应，而不是长时间的等待。这样就不会使得线程因调用故障服务被长时间占用不释放，避免了故障在分布式系统中的蔓延。</p><h3 id="_9、什么是端到端微服务测试" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#9%E4%BB%80%E4%B9%88%E6%98%AF%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%B5%8B%E8%AF%95" target="_blank" rel="noreferrer">9、什么是端到端微服务测试？</a> <a class="header-anchor" href="#_9、什么是端到端微服务测试" aria-label="Permalink to &quot;[9、什么是端到端微服务测试？](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新2021年面试题大汇总，附答案.md#9什么是端到端微服务测试)&quot;">​</a></h3><p>端到端测试验证了工作流中的每个流程都正常运行。这可确保系统作为一个整体协同工作并满足所有要求。</p><p>通俗地说，你可以说端到端测试是一种测试，在特定时期后测试所有东西。</p><p><img src="https://gitee.com/souyunkutech/souyunku-home/raw/master/images/souyunku-web/2019/08/0816/01/img_17.png#alt=img%5C_17.png" alt=""></p><p>图14：测试层次 – 微服务面试问题</p><h3 id="_10、spring-cloud-security" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%8C%E9%99%84%E7%AD%94%E6%A1%88.md#10spring-cloud-security" target="_blank" rel="noreferrer">10、Spring Cloud Security</a> <a class="header-anchor" href="#_10、spring-cloud-security" aria-label="Permalink to &quot;[10、Spring Cloud Security](https://gitee.com/souyunku/DevBooks/blob/master/docs/SpringCloud/SpringCloud最新2021年面试题大汇总，附答案.md#10spring-cloud-security)&quot;">​</a></h3><p>安全工具包，对Zuul代理中的负载均衡OAuth2客户端及登录认证进行支持。</p><h3 id="_11、网关与过滤器有什么区别" tabindex="-1">11、网关与过滤器有什么区别 <a class="header-anchor" href="#_11、网关与过滤器有什么区别" aria-label="Permalink to &quot;11、网关与过滤器有什么区别&quot;">​</a></h3><h3 id="_12、在spring-mvc应用程序中使用webmvctest注释有什么用处" tabindex="-1">12、在Spring MVC应用程序中使用WebMvcTest注释有什么用处？ <a class="header-anchor" href="#_12、在spring-mvc应用程序中使用webmvctest注释有什么用处" aria-label="Permalink to &quot;12、在Spring MVC应用程序中使用WebMvcTest注释有什么用处？&quot;">​</a></h3><h3 id="_13、微服务之间是如何独立通讯的" tabindex="-1">13、微服务之间是如何独立通讯的 <a class="header-anchor" href="#_13、微服务之间是如何独立通讯的" aria-label="Permalink to &quot;13、微服务之间是如何独立通讯的&quot;">​</a></h3><h3 id="_14、什么是spring-cloud" tabindex="-1">14、什么是Spring Cloud？ <a class="header-anchor" href="#_14、什么是spring-cloud" aria-label="Permalink to &quot;14、什么是Spring Cloud？&quot;">​</a></h3><h3 id="_15、ribbon底层实现原理" tabindex="-1">15、Ribbon底层实现原理 <a class="header-anchor" href="#_15、ribbon底层实现原理" aria-label="Permalink to &quot;15、Ribbon底层实现原理&quot;">​</a></h3><h3 id="_16、什么是断路器" tabindex="-1">16、什么是断路器 <a class="header-anchor" href="#_16、什么是断路器" aria-label="Permalink to &quot;16、什么是断路器&quot;">​</a></h3><h3 id="_17、分布式配置中心有那些框架" tabindex="-1">17、分布式配置中心有那些框架？ <a class="header-anchor" href="#_17、分布式配置中心有那些框架" aria-label="Permalink to &quot;17、分布式配置中心有那些框架？&quot;">​</a></h3><h3 id="_18、分布式配置中心的作用" tabindex="-1">18、分布式配置中心的作用？ <a class="header-anchor" href="#_18、分布式配置中心的作用" aria-label="Permalink to &quot;18、分布式配置中心的作用？&quot;">​</a></h3><h3 id="_19、为什么需要学习spring-cloud" tabindex="-1">19、为什么需要学习Spring Cloud <a class="header-anchor" href="#_19、为什么需要学习spring-cloud" aria-label="Permalink to &quot;19、为什么需要学习Spring Cloud&quot;">​</a></h3><h3 id="_20、eureka和zookeeper都可以提供服务注册与发现的功能-请说说两个的区别" tabindex="-1">20、Eureka和ZooKeeper都可以提供服务注册与发现的功能,请说说两个的区别 <a class="header-anchor" href="#_20、eureka和zookeeper都可以提供服务注册与发现的功能-请说说两个的区别" aria-label="Permalink to &quot;20、Eureka和ZooKeeper都可以提供服务注册与发现的功能,请说说两个的区别&quot;">​</a></h3><h3 id="_21、什么是消费者驱动的合同-cdc" tabindex="-1">21、什么是消费者驱动的合同（CDC）？ <a class="header-anchor" href="#_21、什么是消费者驱动的合同-cdc" aria-label="Permalink to &quot;21、什么是消费者驱动的合同（CDC）？&quot;">​</a></h3><h3 id="_22、什么是幂等性-它是如何使用的" tabindex="-1">22、什么是幂等性?它是如何使用的？ <a class="header-anchor" href="#_22、什么是幂等性-它是如何使用的" aria-label="Permalink to &quot;22、什么是幂等性?它是如何使用的？&quot;">​</a></h3><h3 id="_23、微服务架构有哪些优势" tabindex="-1">23、微服务架构有哪些优势？ <a class="header-anchor" href="#_23、微服务架构有哪些优势" aria-label="Permalink to &quot;23、微服务架构有哪些优势？&quot;">​</a></h3><h3 id="_24、dubbo服务注册与发现原理" tabindex="-1">24、dubbo服务注册与发现原理 <a class="header-anchor" href="#_24、dubbo服务注册与发现原理" aria-label="Permalink to &quot;24、dubbo服务注册与发现原理&quot;">​</a></h3><h3 id="_25、什么是持续监测" tabindex="-1">25、什么是持续监测？ <a class="header-anchor" href="#_25、什么是持续监测" aria-label="Permalink to &quot;25、什么是持续监测？&quot;">​</a></h3><h3 id="_26、-loadbalanced注解的作用" tabindex="-1">26、@LoadBalanced注解的作用 <a class="header-anchor" href="#_26、-loadbalanced注解的作用" aria-label="Permalink to &quot;26、@LoadBalanced注解的作用&quot;">​</a></h3><h3 id="_27、什么是spring-cloud" tabindex="-1">27、什么是Spring Cloud？ <a class="header-anchor" href="#_27、什么是spring-cloud" aria-label="Permalink to &quot;27、什么是Spring Cloud？&quot;">​</a></h3><h3 id="_28、mock或stub有什么区别" tabindex="-1">28、Mock或Stub有什么区别？ <a class="header-anchor" href="#_28、mock或stub有什么区别" aria-label="Permalink to &quot;28、Mock或Stub有什么区别？&quot;">​</a></h3><h3 id="_29、您对mike-cohn的测试金字塔了解多少" tabindex="-1">29、您对Mike Cohn的测试金字塔了解多少？ <a class="header-anchor" href="#_29、您对mike-cohn的测试金字塔了解多少" aria-label="Permalink to &quot;29、您对Mike Cohn的测试金字塔了解多少？&quot;">​</a></h3><h3 id="_30、springcloud限流" tabindex="-1">30、SpringCloud限流： <a class="header-anchor" href="#_30、springcloud限流" aria-label="Permalink to &quot;30、SpringCloud限流：&quot;">​</a></h3>',56),i=[n];function l(s,E,u,d,h,c){return a(),o("div",null,i)}const B=e(t,[["render",l]]);export{g as __pageData,B as default};
