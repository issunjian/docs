import{_ as a,o as e,c as s,V as n}from"./chunks/framework.c6d8cbec.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/backend/前端/前端最新2021年面试题，高级面试题及附答案解析.md","filePath":"interview/backend/前端/前端最新2021年面试题，高级面试题及附答案解析.md"}'),t={name:"interview/backend/前端/前端最新2021年面试题，高级面试题及附答案解析.md"},l=n(`<h3 id="_1、flex布局" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#1flex%E5%B8%83%E5%B1%80" target="_blank" rel="noreferrer">1、Flex布局</a> <a class="header-anchor" href="#_1、flex布局" aria-label="Permalink to &quot;[1、Flex布局](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新2021年面试题，高级面试题及附答案解析.md#1flex布局)&quot;">​</a></h3><p>[juejin.im/post/5d428c…][juejin.im_post_5d428c]</p><h3 id="_2、事件模型" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#2%E4%BA%8B%E4%BB%B6%E6%A8%A1%E5%9E%8B" target="_blank" rel="noreferrer">2、事件模型</a> <a class="header-anchor" href="#_2、事件模型" aria-label="Permalink to &quot;[2、事件模型](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新2021年面试题，高级面试题及附答案解析.md#2事件模型)&quot;">​</a></h3><p><strong>1、</strong> 冒泡型事件：当你使用事件冒泡时，子级元素先触发，父级元素后触发</p><p><strong>2、</strong> 捕获型事件：当你使用事件捕获时，父级元素先触发，子级元素后触发</p><p><strong>3、</strong> <code>DOM</code>事件流：同时支持两种事件模型：捕获型事件和冒泡型事件</p><p><strong>4、</strong> 阻止冒泡：在<code>W3c</code>中，使用<code>stopPropagation（）</code>方法；在IE下设置<code>cancelBubble = true</code></p><p><strong>5、</strong> 阻止捕获：阻止事件的默认行为，例如<code>click - &lt;a&gt;</code>后的跳转。在<code>W3c</code>中，使用<code>preventDefault（）</code>方法，在<code>IE</code>下设置<code>window.event.returnValue = false</code></p><h3 id="_3、ajax-和-jsonp" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#3ajax-%E5%92%8C-jsonp-" target="_blank" rel="noreferrer">3、ajax 和 jsonp ？</a> <a class="header-anchor" href="#_3、ajax-和-jsonp" aria-label="Permalink to &quot;[3、ajax 和 jsonp ？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新2021年面试题，高级面试题及附答案解析.md#3ajax-和-jsonp-)&quot;">​</a></h3><p><strong>ajax和jsonp的区别：</strong></p><p>相同点：都是请求一个url</p><p>不同点：ajax的核心是通过xmlHttpRequest获取内容</p><p>jsonp的核心则是动态添加</p><h3 id="_4、平时工作中怎么样进行数据交互-如果后台没有提供数据怎么样进行开发" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#4%E5%B9%B3%E6%97%B6%E5%B7%A5%E4%BD%9C%E4%B8%AD%E6%80%8E%E4%B9%88%E6%A0%B7%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92%E5%A6%82%E6%9E%9C%E5%90%8E%E5%8F%B0%E6%B2%A1%E6%9C%89%E6%8F%90%E4%BE%9B%E6%95%B0%E6%8D%AE%E6%80%8E%E4%B9%88%E6%A0%B7%E8%BF%9B%E8%A1%8C%E5%BC%80%E5%8F%91" target="_blank" rel="noreferrer">4、平时工作中怎么样进行数据交互?如果后台没有提供数据怎么样进行开发?</a> <a class="header-anchor" href="#_4、平时工作中怎么样进行数据交互-如果后台没有提供数据怎么样进行开发" aria-label="Permalink to &quot;[4、平时工作中怎么样进行数据交互?如果后台没有提供数据怎么样进行开发?](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新2021年面试题，高级面试题及附答案解析.md#4平时工作中怎么样进行数据交互如果后台没有提供数据怎么样进行开发)&quot;">​</a></h3><p><strong>mock数据与后台返回的格式不同意怎么办?</strong></p><p>由后台编写接口文档、提供数据接口实、前台通过ajax访问实现数据交互；</p><p>在没有数据的情况下寻找后台提供静态数据或者自己定义mock数据；</p><p>返回数据不统一时编写映射文件 对数据进行映射。</p><h3 id="_5、this指向的各种情况都有什么" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#5this%E6%8C%87%E5%90%91%E7%9A%84%E5%90%84%E7%A7%8D%E6%83%85%E5%86%B5%E9%83%BD%E6%9C%89%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">5、this指向的各种情况都有什么？</a> <a class="header-anchor" href="#_5、this指向的各种情况都有什么" aria-label="Permalink to &quot;[5、this指向的各种情况都有什么？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新2021年面试题，高级面试题及附答案解析.md#5this指向的各种情况都有什么)&quot;">​</a></h3><p>this的指向只有在调用时才能被确定，因为<code>this</code>是执行上下文的一部分。</p><p><strong>全局作用域中的函数：其内部<code>this</code>指向<code>window</code>：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">var a = 1;</span></span>
<span class="line"><span style="color:#f6f6f4;">function fn(){</span></span>
<span class="line"><span style="color:#f6f6f4;">console.log(this.a)</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span>
<span class="line"><span style="color:#f6f6f4;">fn() //输出1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">var a = 1;</span></span>
<span class="line"><span style="color:#24292e;">function fn(){</span></span>
<span class="line"><span style="color:#24292e;">console.log(this.a)</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;">fn() //输出1</span></span></code></pre></div><p><strong>对象内部的函数：其内部<code>this</code>指向对象本身：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">var a = 1;</span></span>
<span class="line"><span style="color:#f6f6f4;">var obj = {</span></span>
<span class="line"><span style="color:#f6f6f4;">a:2,</span></span>
<span class="line"><span style="color:#f6f6f4;">fn:function(){</span></span>
<span class="line"><span style="color:#f6f6f4;">console.log(this.a)</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">obj.fn() //输出2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">var a = 1;</span></span>
<span class="line"><span style="color:#24292e;">var obj = {</span></span>
<span class="line"><span style="color:#24292e;">a:2,</span></span>
<span class="line"><span style="color:#24292e;">fn:function(){</span></span>
<span class="line"><span style="color:#24292e;">console.log(this.a)</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">obj.fn() //输出2</span></span></code></pre></div><p><strong>构造函数：其内部<code>this</code>指向生成的实例：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">function createP(name,age){</span></span>
<span class="line"><span style="color:#f6f6f4;">this.name = name //this.name指向P</span></span>
<span class="line"><span style="color:#f6f6f4;">this.age = age //this.age指向P</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span>
<span class="line"><span style="color:#f6f6f4;">var p = new createP(&quot;老李&quot;,46)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">function createP(name,age){</span></span>
<span class="line"><span style="color:#24292e;">this.name = name //this.name指向P</span></span>
<span class="line"><span style="color:#24292e;">this.age = age //this.age指向P</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;">var p = new createP(&quot;老李&quot;,46)</span></span></code></pre></div><p><strong>由<code>apply</code>、<code>call</code>、<code>bind</code>改造的函数：其<code>this</code>指向第一个参数：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">function add(c,d){</span></span>
<span class="line"><span style="color:#f6f6f4;">return this.a + this.b + c + d</span></span>
<span class="line"><span style="color:#f6f6f4;">}</span></span>
<span class="line"><span style="color:#f6f6f4;">var o = {a:1,b:2)</span></span>
<span class="line"><span style="color:#f6f6f4;">add.call(o,5,7) //输出15</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">function add(c,d){</span></span>
<span class="line"><span style="color:#24292e;">return this.a + this.b + c + d</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;">var o = {a:1,b:2)</span></span>
<span class="line"><span style="color:#24292e;">add.call(o,5,7) //输出15</span></span></code></pre></div><p>箭头函数：箭头函数没有自己的<code>this</code>，看其外层的是否有函数，如果有，外层函数的<code>this</code>就是内部箭头函数的<code>this</code>，如果没有，则<code>this</code>是<code>window</code>。</p><h3 id="_6、常用的-meta-标签" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#6%E5%B8%B8%E7%94%A8%E7%9A%84-meta-%E6%A0%87%E7%AD%BE" target="_blank" rel="noreferrer">6、常用的 meta 标签</a> <a class="header-anchor" href="#_6、常用的-meta-标签" aria-label="Permalink to &quot;[6、常用的 meta 标签](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新2021年面试题，高级面试题及附答案解析.md#6常用的-meta-标签)&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;meta&gt; 元素可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta&gt; 标签位于文档的头部，不包含任何内容。&lt;meta&gt; 标签的属性定义了与文档相关联的名称/值对。</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;!DOCTYPE html&gt;  H5标准声明，使用 HTML5 doctype，不区分大小写</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;head lang=”en”&gt; 标准的 lang 属性写法</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta charset=’utf-8′&gt;    声明文档使用的字符编码</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta http-equiv=”X-UA-Compatible” content=”IE=edge,chrome=1″/&gt;   优先使用 IE 最新版本和 Chrome</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”description” content=”不超过150个字符”/&gt;       页面描述</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”keywords” content=””/&gt;      页面关键词者</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”author” content=”name, email@gmail.com”/&gt;    网页作</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”robots” content=”index,follow”/&gt;      搜索引擎抓取</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”viewport” content=”initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no”&gt; 为移动设备添加 viewport</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”apple-mobile-web-app-title” content=”标题”&gt; iOS 设备 begin</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”apple-mobile-web-app-capable” content=”yes”/&gt;  添加到主屏后的标题（iOS 6 新增）</span></span>
<span class="line"><span style="color:#f6f6f4;">是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”apple-itunes-app” content=”app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL”&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">添加智能 App 广告条 Smart App Banner（iOS 6+ Safari）</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”apple-mobile-web-app-status-bar-style” content=”black”/&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”format-detection” content=”telphone=no, email=no”/&gt;  设置苹果工具栏颜色</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”renderer” content=”webkit”&gt;  启用360浏览器的极速模式(webkit)</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta http-equiv=”X-UA-Compatible” content=”IE=edge”&gt;     避免IE使用兼容模式</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta http-equiv=”Cache-Control” content=”no-siteapp” /&gt;    不让百度转码</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”HandheldFriendly” content=”true”&gt;     针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”MobileOptimized” content=”320″&gt;   微软的老式浏览器</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”screen-orientation” content=”portrait”&gt;   uc强制竖屏</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”x5-orientation” content=”portrait”&gt;    QQ强制竖屏</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”full-screen” content=”yes”&gt;              UC强制全屏</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”x5-fullscreen” content=”true”&gt;       QQ强制全屏</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”browsermode” content=”application”&gt;   UC应用模式</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”x5-page-mode” content=”app”&gt;    QQ应用模式</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta name=”msapplication-tap-highlight” content=”no”&gt;    windows phone 点击无高光</span></span>
<span class="line"><span style="color:#f6f6f4;">设置页面不缓存</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta http-equiv=”pragma” content=”no-cache”&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta http-equiv=”cache-control” content=”no-cache”&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;meta http-equiv=”expires” content=”0″&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;meta&gt; 元素可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta&gt; 标签位于文档的头部，不包含任何内容。&lt;meta&gt; 标签的属性定义了与文档相关联的名称/值对。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&lt;!DOCTYPE html&gt;  H5标准声明，使用 HTML5 doctype，不区分大小写</span></span>
<span class="line"><span style="color:#24292e;">&lt;head lang=”en”&gt; 标准的 lang 属性写法</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta charset=’utf-8′&gt;    声明文档使用的字符编码</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta http-equiv=”X-UA-Compatible” content=”IE=edge,chrome=1″/&gt;   优先使用 IE 最新版本和 Chrome</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”description” content=”不超过150个字符”/&gt;       页面描述</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”keywords” content=””/&gt;      页面关键词者</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”author” content=”name, email@gmail.com”/&gt;    网页作</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”robots” content=”index,follow”/&gt;      搜索引擎抓取</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”viewport” content=”initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no”&gt; 为移动设备添加 viewport</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”apple-mobile-web-app-title” content=”标题”&gt; iOS 设备 begin</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”apple-mobile-web-app-capable” content=”yes”/&gt;  添加到主屏后的标题（iOS 6 新增）</span></span>
<span class="line"><span style="color:#24292e;">是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”apple-itunes-app” content=”app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL”&gt;</span></span>
<span class="line"><span style="color:#24292e;">添加智能 App 广告条 Smart App Banner（iOS 6+ Safari）</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”apple-mobile-web-app-status-bar-style” content=”black”/&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”format-detection” content=”telphone=no, email=no”/&gt;  设置苹果工具栏颜色</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”renderer” content=”webkit”&gt;  启用360浏览器的极速模式(webkit)</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta http-equiv=”X-UA-Compatible” content=”IE=edge”&gt;     避免IE使用兼容模式</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta http-equiv=”Cache-Control” content=”no-siteapp” /&gt;    不让百度转码</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”HandheldFriendly” content=”true”&gt;     针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”MobileOptimized” content=”320″&gt;   微软的老式浏览器</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”screen-orientation” content=”portrait”&gt;   uc强制竖屏</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”x5-orientation” content=”portrait”&gt;    QQ强制竖屏</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”full-screen” content=”yes”&gt;              UC强制全屏</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”x5-fullscreen” content=”true”&gt;       QQ强制全屏</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”browsermode” content=”application”&gt;   UC应用模式</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”x5-page-mode” content=”app”&gt;    QQ应用模式</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta name=”msapplication-tap-highlight” content=”no”&gt;    windows phone 点击无高光</span></span>
<span class="line"><span style="color:#24292e;">设置页面不缓存</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta http-equiv=”pragma” content=”no-cache”&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta http-equiv=”cache-control” content=”no-cache”&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;meta http-equiv=”expires” content=”0″&gt;</span></span></code></pre></div><h3 id="_7、split-join" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#7split-join" target="_blank" rel="noreferrer">7、split() join()?</a> <a class="header-anchor" href="#_7、split-join" aria-label="Permalink to &quot;[7、split() join()?](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新2021年面试题，高级面试题及附答案解析.md#7split-join)&quot;">​</a></h3><p>前者是切割成数组的形式，</p><p>后者是将数组转换成字符串</p><h3 id="_8、空元素定义" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#8%E7%A9%BA%E5%85%83%E7%B4%A0%E5%AE%9A%E4%B9%89" target="_blank" rel="noreferrer">8、空元素定义</a> <a class="header-anchor" href="#_8、空元素定义" aria-label="Permalink to &quot;[8、空元素定义](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新2021年面试题，高级面试题及附答案解析.md#8空元素定义)&quot;">​</a></h3><p>标签内没有内容的 HTML 标签被称为空元素。空元素是在开始标签中关闭的。</p><p>常见的空元素有：br hr img input link meta</p><h3 id="_9、什么是作用域和作用域链" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#9%E4%BB%80%E4%B9%88%E6%98%AF%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE" target="_blank" rel="noreferrer">9、什么是作用域和作用域链？</a> <a class="header-anchor" href="#_9、什么是作用域和作用域链" aria-label="Permalink to &quot;[9、什么是作用域和作用域链？](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新2021年面试题，高级面试题及附答案解析.md#9什么是作用域和作用域链)&quot;">​</a></h3><p>作用域可以理解为一个独立的地盘，可以理解为标识符所能生效的范围。作用域最大的用处就是隔离变量，不同作用域下同名变量不会有冲突。ES6中有全局作用域、函数作用域和块级作用域三层概念。</p><p>当一个变量在当前块级作用域中未被定义时，会向父级作用域(创建该函数的那个父级作用域)寻找。如果父级仍未找到，就会再一层一层向上寻找，直到找到全局作用域为止。这种一层一层的关系，就是作用域链 。</p><h3 id="_10、title与h1的区别、b与strong的区别、i与em的区别" tabindex="-1"><a href="https://gitee.com/souyunku/DevBooks/blob/master/docs/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E6%9C%80%E6%96%B02021%E5%B9%B4%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%8C%E9%AB%98%E7%BA%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E5%8F%8A%E9%99%84%E7%AD%94%E6%A1%88%E8%A7%A3%E6%9E%90.md#10title%E4%B8%8Eh1%E7%9A%84%E5%8C%BA%E5%88%ABb%E4%B8%8Estrong%E7%9A%84%E5%8C%BA%E5%88%ABi%E4%B8%8Eem%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noreferrer">10、title与h1的区别、b与strong的区别、i与em的区别</a> <a class="header-anchor" href="#_10、title与h1的区别、b与strong的区别、i与em的区别" aria-label="Permalink to &quot;[10、title与h1的区别、b与strong的区别、i与em的区别](https://gitee.com/souyunku/DevBooks/blob/master/docs/前端/前端最新2021年面试题，高级面试题及附答案解析.md#10title与h1的区别b与strong的区别i与em的区别)&quot;">​</a></h3><p>title属性没有明确意义，只表示标题；h1表示层次明确的标题，对页面信息的抓取也有很大的影响</p><p>strong标明重点内容，语气加强含义；b是无意义的视觉表示</p><p>em表示强调文本；i是斜体，是无意义的视觉表示</p><p>视觉样式标签：<code>b i u s</code></p><p>语义样式标签：<code>strong em ins del code</code></p><h3 id="_11、margin和padding分别适合什么场景使用" tabindex="-1">11、margin和padding分别适合什么场景使用？ <a class="header-anchor" href="#_11、margin和padding分别适合什么场景使用" aria-label="Permalink to &quot;11、margin和padding分别适合什么场景使用？&quot;">​</a></h3><h3 id="_12、什么是ajax-如何实现" tabindex="-1">12、什么是AJAX？如何实现？ <a class="header-anchor" href="#_12、什么是ajax-如何实现" aria-label="Permalink to &quot;12、什么是AJAX？如何实现？&quot;">​</a></h3><h3 id="_13、key" tabindex="-1">13、key <a class="header-anchor" href="#_13、key" aria-label="Permalink to &quot;13、key&quot;">​</a></h3><h3 id="_14、js有哪些内置对象" tabindex="-1">14、JS有哪些内置对象 <a class="header-anchor" href="#_14、js有哪些内置对象" aria-label="Permalink to &quot;14、JS有哪些内置对象&quot;">​</a></h3><h3 id="_15、如何知道是否在元素中使用了event-preventdefault-方法" tabindex="-1">15、如何知道是否在元素中使用了<code>event.preventDefault()</code>方法？ <a class="header-anchor" href="#_15、如何知道是否在元素中使用了event-preventdefault-方法" aria-label="Permalink to &quot;15、如何知道是否在元素中使用了\`event.preventDefault()\`方法？&quot;">​</a></h3><h3 id="_16、node的应用场景" tabindex="-1">16、Node的应用场景 <a class="header-anchor" href="#_16、node的应用场景" aria-label="Permalink to &quot;16、Node的应用场景&quot;">​</a></h3><h3 id="_17、jquery与jquery-ui-有啥区别" tabindex="-1">17、jQuery与jQuery UI 有啥区别？ <a class="header-anchor" href="#_17、jquery与jquery-ui-有啥区别" aria-label="Permalink to &quot;17、jQuery与jQuery UI 有啥区别？&quot;">​</a></h3><h3 id="_18、websocket如何兼容低浏览器-阿里" tabindex="-1">18、webSocket如何兼容低浏览器？(阿里) <a class="header-anchor" href="#_18、websocket如何兼容低浏览器-阿里" aria-label="Permalink to &quot;18、webSocket如何兼容低浏览器？(阿里)&quot;">​</a></h3><h3 id="_19、什么是-es6-模块" tabindex="-1">19、什么是 ES6 模块？ <a class="header-anchor" href="#_19、什么是-es6-模块" aria-label="Permalink to &quot;19、什么是 ES6 模块？&quot;">​</a></h3><h3 id="_20、渐进增强和优雅降级" tabindex="-1">20、渐进增强和优雅降级 <a class="header-anchor" href="#_20、渐进增强和优雅降级" aria-label="Permalink to &quot;20、渐进增强和优雅降级&quot;">​</a></h3><h3 id="_21、微信小程序-生命周期" tabindex="-1">21、微信小程序，生命周期 <a class="header-anchor" href="#_21、微信小程序-生命周期" aria-label="Permalink to &quot;21、微信小程序，生命周期&quot;">​</a></h3><h3 id="_22、同步和异步的区别" tabindex="-1">22、同步和异步的区别? <a class="header-anchor" href="#_22、同步和异步的区别" aria-label="Permalink to &quot;22、同步和异步的区别?&quot;">​</a></h3><h3 id="_23、link与-import的区别" tabindex="-1">23、<code>link</code>与<code>@import</code>的区别 <a class="header-anchor" href="#_23、link与-import的区别" aria-label="Permalink to &quot;23、\`link\`与\`@import\`的区别&quot;">​</a></h3><h3 id="_24、call和apply-有什么好处" tabindex="-1">24、call和apply 有什么好处？ <a class="header-anchor" href="#_24、call和apply-有什么好处" aria-label="Permalink to &quot;24、call和apply 有什么好处？&quot;">​</a></h3><h3 id="_25、阐述一下css-sprites" tabindex="-1">25、阐述一下CSS Sprites <a class="header-anchor" href="#_25、阐述一下css-sprites" aria-label="Permalink to &quot;25、阐述一下CSS Sprites&quot;">​</a></h3><h3 id="_26、简述一下你理解的面向对象" tabindex="-1">26、简述一下你理解的面向对象？ <a class="header-anchor" href="#_26、简述一下你理解的面向对象" aria-label="Permalink to &quot;26、简述一下你理解的面向对象？&quot;">​</a></h3><h3 id="_27、javascript如何实现继承" tabindex="-1">27、Javascript如何实现继承？ <a class="header-anchor" href="#_27、javascript如何实现继承" aria-label="Permalink to &quot;27、Javascript如何实现继承？&quot;">​</a></h3><h3 id="_28、vuex" tabindex="-1">28、vuex <a class="header-anchor" href="#_28、vuex" aria-label="Permalink to &quot;28、vuex&quot;">​</a></h3><h3 id="_29、如果网页内容需要支持多语言-你会怎么做" tabindex="-1">29、如果网页内容需要支持多语言，你会怎么做？ <a class="header-anchor" href="#_29、如果网页内容需要支持多语言-你会怎么做" aria-label="Permalink to &quot;29、如果网页内容需要支持多语言，你会怎么做？&quot;">​</a></h3><h3 id="_30、通过new创建一个对象的时候-函数内部有哪些改变" tabindex="-1">30、通过new创建一个对象的时候，函数内部有哪些改变### <a class="header-anchor" href="#_30、通过new创建一个对象的时候-函数内部有哪些改变" aria-label="Permalink to &quot;30、通过new创建一个对象的时候，函数内部有哪些改变###&quot;">​</a></h3><h3 id="_31、如何检查对象中是否存在某个属性" tabindex="-1">31、如何检查对象中是否存在某个属性？ <a class="header-anchor" href="#_31、如何检查对象中是否存在某个属性" aria-label="Permalink to &quot;31、如何检查对象中是否存在某个属性？&quot;">​</a></h3>`,67),o=[l];function p(c,r,i,E,d,m){return e(),s("div",null,o)}const A=a(t,[["render",p]]);export{f as __pageData,A as default};
